{
    "pipes": [
        {
            "name": "TranslatePipe",
            "id": "pipe-TranslatePipe-5ec6a452a67023f9fdd45747d17c20615c5e3bbcf1bd6ffe0e4ba2d30f79a3a5f2189d4a890709a1a9b7ed65d7b963acb14ef39d06ab81ca4e4539f6c07dd7ef",
            "file": "src/stories/pipes/translate/translate.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "pure": false,
            "ngname": "translate",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport {TranslateService} from \"./translate.service\";\r\n/*import {AppConfig} from \"../../../app.config\";\r\nimport {UserService} from \"../../../_services/user.service\";*/\r\n\r\n\r\n@Pipe({\r\n  name: 'translate',\r\n  pure: false\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private _translate: TranslateService) {}\r\n\r\n  transform(value: string): any {\r\n    if (!value) return;\r\n    return this._translate.instant(value);\r\n  }\r\n\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "ActionInput",
            "id": "interface-ActionInput-5cf2e750f95fe2bec24dc5d274fd0365e91ccaffee4ab92ac5a00e3d0778816a18f465025f30ca64a6847cca71ffb44a889f7f0ba361e2b789d3cd3e5f4876a4",
            "file": "src/stories/actions/action-input/action-input.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ActionInput {\r\n  conditionName: string;\r\n  presentingMessage: string;\r\n  isFulfilled: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "conditionName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isFulfilled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "presentingMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AvailableLanguages",
            "id": "interface-AvailableLanguages-36df58cad0eaf25ce45c01937d3932006f8f4346f0daec42409137d1a8e18278a29f6acabdf44fab2cc4cda7f0ae0d4df00014be1811c7cfa6bef532f55bdb0c",
            "file": "src/stories/actions/action-language/available-languages.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AvailableLanguages {\r\n  eng: boolean;\r\n  heb: boolean;\r\n  esp: boolean;\r\n  chi: boolean;\r\n  rus: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "chi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "eng",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "esp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "heb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-751943e63e9c2c135c81850126bd8412be6192dc1345c8aaad316666315de4e3bdd4971644e74dfef99b8cc4e868a57722911cd85f033fd3d5e5d51b7e352c7d",
            "file": "src/app/login2/login-main/login-main.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, ElementRef, Input, OnDestroy, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {StoryInput} from \"../../../stories/inputs/input/story-input.model\";\nimport {AuthService} from \"../../_services/auth.service\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"../../_services/token-storage.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../_services/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {AppConfig} from \"../../app.config\";\n\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss'],\n})\nexport class LoginMainComponent implements OnInit, OnDestroy {\n\n  public isLoggedIn = false;\n  isLoginFailed = false;\n  loginErrorMessage = '';\n  roles: string[] = [];\n  public isLoading = false;\n  eventBusSubLoginMain?: Subscription;\n\n\n\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  storyInputsInOrder: StoryInput[]  = [\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './stories/assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './stories/assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ];\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Login2Component';\n\n\n  loginForm: FormGroup;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-page2--primary' : 'storybook-page2--secondary';\n\n    return ['storybook-page2', mode];\n  }\n\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              public authService: AuthService,\n              public userService: UserService,\n              private tokenStorage: TokenStorageService,\n              private router: Router,\n              private activatedRoute:ActivatedRoute) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('', Validators.minLength(2)),\n    });\n\n  }\n\n\n  public ACC_VERSION: string = 'ACC_VERSION';\n\n  ngOnInit(): void {\n\n    this.userService.getAccVersion().subscribe(\n      data => { this.ACC_VERSION = data; AppConfig.webAppVersion = data; },\n      err => { this.ACC_VERSION = JSON.parse(err.error).message; }\n    );\n\n  };\n\n\n  get getUsernameCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('username')?.value;\n  }\n\n  private setUsernameCurrentFieldValue(name: string) {\n    this.loginForm.get('username')?.setValue(name);\n  }\n\n  get getPasswordCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('password')?.value;\n  }\n\n  private setPasswordCurrentFieldValue(pass: string) {\n    this.loginForm.get('password')?.setValue(pass);\n  }\n\n\n  onSubmit(): void {\n    console.warn('Login Request from login-main!');\n    const { username, password } = this.loginForm.value;\n\n    this.isLoading = true;\n    this.authService.login(username, password).subscribe(\n        (data: { accessToken: any; refreshToken: any; }) => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.profile2();\n      },\n        (err: { error: { message: string; }; }) => {\n        switch (err.error.message) {\n          case \"Error: A registry process should be made!\":\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\n            //toPromise((data) => {this.openReplacePassword()});\n            break;\n          case \"User credentials have expired\":\n            break;\n          default:\n            this.loginErrorMessage = err.error.message;\n        }\n\n        this.isLoginFailed = true;\n        this.isLoading = false;\n      },\n      () => { this.isLoading = false; })\n  }\n\n  reloadPage(): void {\n    this.router.navigate(['/login-main']).then(() => {window.location.reload()});\n  }\n\n  profile2(): void {\n    this.router.navigate(['../profile2'], {relativeTo: this.activatedRoute});\n  }\n\n\n  changLanguage(event: Event) {\n    //\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.eventBusSubLoginMain)\n      this.eventBusSubLoginMain.unsubscribe();\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "GroupForm",
            "id": "interface-GroupForm-9aa1f96d960e36ae52f28e58bdb921605d7cf053eebf3ebe59ce734de61203d88c458f9872f71808bf05d474bb0b24e29137a51ddd92046cb89cbd5e17fe5319",
            "file": "src/stories/inputs/input/story-input.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  Component, ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output, Renderer2, Type, ViewChild\r\n} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit, AfterViewInit{\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n  @Input() hideInput = false;\r\n\r\n  @Input() toFocus: boolean = false;\r\n\r\n  @Input() direction: 'rtl' | 'ltr' = 'ltr';\r\n\r\n  constructor(public _translate: TranslateService,\r\n              public renderer: Renderer2) {}\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n\r\n  @ViewChild('mInput', { static: false }) mInput?: ElementRef;\r\n\r\n  @Input() state: string = 'edit';\r\n\r\n  onStateChange(state: string) {\r\n    if (state == 'edit' || state == 'gray') {this.state = state;}\r\n    switch (state) {\r\n      case 'gray':\r\n        this.renderer.setAttribute(this.mInput?.nativeElement ,'readonly', 'true');\r\n        this.renderer.setAttribute(this.mInput?.nativeElement ,'style', 'background-color: #ebf1f2;');\r\n        break;\r\n      case 'edit':\r\n        this.renderer.removeAttribute(this.mInput?.nativeElement ,'readonly');\r\n        this.renderer.removeAttribute(this.mInput?.nativeElement ,'style');\r\n        break;\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"requiresMinLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresMinLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters ',\r\n            \"isFulfilled\":  !(this.requiresMinLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"no2AdjacentIdenticalChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"no2AdjacentIdenticalCharsValid\",\r\n            \"presentingMessage\": \" No more than 2 adjacent identical characters\",\r\n            \"isFulfilled\": (this.no2AdjacentIdenticalCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEnglishLettersOnly\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEnglishLettersOnlyValid\",\r\n            \"presentingMessage\": \" English letters only\",\r\n            \"isFulfilled\": (this.requiresEnglishLettersOnlyValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresMinLengthValid() {\r\n    return this.formControler.hasError(\"requiresMinLength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get no2AdjacentIdenticalCharsValid() {\r\n    return this.formControler.hasError(\"no2AdjacentIdenticalChars\");\r\n  }\r\n\r\n  get requiresEnglishLettersOnlyValid() {\r\n    return this.formControler.hasError(\"requiresEnglishLettersOnly\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength', `storybook-input--${this.direction}`, this.isStrength];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.onStateChange(this.state);\r\n  }\r\n\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PopoverOptions",
            "id": "interface-PopoverOptions-72e8120835475614ee65912cb525afa7957bfb82ad7aff5b87e512a5533dec6c87aa901cfe3d238f1d3700590bf09d135078619ba01e814713f200e51fce1459",
            "file": "src/stories/directive/popover.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PopoverOptions {\r\n  content: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "StoryInput",
            "id": "interface-StoryInput-a3a881f4bd9549f23f413b9c2f46778fdbe26d468b0f04dbd06d25e252c70c22f9fd419ad8e284423082e49daf1606e0783a91423f0dc1dc57e42163d8c8cd56",
            "file": "src/stories/inputs/input/story-input.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StoryInput {\r\n  id: string;\r\n  title: string;\r\n  state: string;\r\n  icon:  string;\r\n  type:  'text' | 'password' | 'tel' | 'email';\r\n  placeholder: string;\r\n  hide: boolean;\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"password\" | \"tel\" | \"email\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "USERS",
            "id": "interface-USERS-f0d8a6ee778d423ea633ac0c81463742134359a3ab038276e2c96b3ede63131e0e61d28974839ea0173df49989f06f6280c285fe6a011407dc8e07bcfce8b85f",
            "file": "src/stories/actions/action-input/action-input.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {ActionInput} from \"./action-input.interface\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n\r\n\r\ninterface USERS {\r\n  conditionName: String;\r\n  presentingMessage: String;\r\n  isFulfilled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'action-input',\r\n  templateUrl: './action-input.component.html',\r\n  styleUrls: ['./action-input.component.css']\r\n})\r\nexport class ActionInputComponent implements OnInit {\r\n\r\n  actionInputs?: ActionInput[];\r\n  actionHeader: string = 'The password must contain:';\r\n  direction = this._translate.currentDir;\r\n\r\n  constructor(public _translate: TranslateService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public async setConditions(actionInputs: ActionInput[]) {\r\n    this.actionInputs = actionInputs;\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "conditionName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "isFulfilled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "presentingMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ValidationForm",
            "id": "interface-ValidationForm-9aa1f96d960e36ae52f28e58bdb921605d7cf053eebf3ebe59ce734de61203d88c458f9872f71808bf05d474bb0b24e29137a51ddd92046cb89cbd5e17fe5319",
            "file": "src/stories/inputs/input/story-input.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  Component, ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output, Renderer2, Type, ViewChild\r\n} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit, AfterViewInit{\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n  @Input() hideInput = false;\r\n\r\n  @Input() toFocus: boolean = false;\r\n\r\n  @Input() direction: 'rtl' | 'ltr' = 'ltr';\r\n\r\n  constructor(public _translate: TranslateService,\r\n              public renderer: Renderer2) {}\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n\r\n  @ViewChild('mInput', { static: false }) mInput?: ElementRef;\r\n\r\n  @Input() state: string = 'edit';\r\n\r\n  onStateChange(state: string) {\r\n    if (state == 'edit' || state == 'gray') {this.state = state;}\r\n    switch (state) {\r\n      case 'gray':\r\n        this.renderer.setAttribute(this.mInput?.nativeElement ,'readonly', 'true');\r\n        this.renderer.setAttribute(this.mInput?.nativeElement ,'style', 'background-color: #ebf1f2;');\r\n        break;\r\n      case 'edit':\r\n        this.renderer.removeAttribute(this.mInput?.nativeElement ,'readonly');\r\n        this.renderer.removeAttribute(this.mInput?.nativeElement ,'style');\r\n        break;\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"requiresMinLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresMinLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters ',\r\n            \"isFulfilled\":  !(this.requiresMinLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"no2AdjacentIdenticalChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"no2AdjacentIdenticalCharsValid\",\r\n            \"presentingMessage\": \" No more than 2 adjacent identical characters\",\r\n            \"isFulfilled\": (this.no2AdjacentIdenticalCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEnglishLettersOnly\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEnglishLettersOnlyValid\",\r\n            \"presentingMessage\": \" English letters only\",\r\n            \"isFulfilled\": (this.requiresEnglishLettersOnlyValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresMinLengthValid() {\r\n    return this.formControler.hasError(\"requiresMinLength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get no2AdjacentIdenticalCharsValid() {\r\n    return this.formControler.hasError(\"no2AdjacentIdenticalChars\");\r\n  }\r\n\r\n  get requiresEnglishLettersOnlyValid() {\r\n    return this.formControler.hasError(\"requiresEnglishLettersOnly\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength', `storybook-input--${this.direction}`, this.isStrength];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.onStateChange(this.state);\r\n  }\r\n\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "validationForm2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GroupForm",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-39cf298a79b62e8953fc45027d058433a390a4c1f5c83fc86b422f7fad89d89ee9bc15e0b8ea1ffd2e6b89151aeaf8d8a29531bc9313ffec76788ef519aee2e0",
            "file": "src/app/_services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAccountDetails",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getConfigurationData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPassExpireDate",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPermittedWebAppList",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getToken",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roles",
                            "type": "Array<String>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "roles",
                            "type": "Array<String>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerForm",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "phone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "phone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "replacePassForm",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "oldPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "confirmPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "oldPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "confirmPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetConfigurationData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ResetPassByMail",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAccountDetails",
                    "args": [
                        {
                            "name": "changedDetails",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changedDetails",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfigurationData",
                    "args": [
                        {
                            "name": "changedProperties",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changedProperties",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "TSV_GenerateCodeByEmail",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "TSV_GenerateCodeByName",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "TSV_ReplacePassForm",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "oldPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "confirmPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pinCodeToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "oldPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "confirmPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pinCodeToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "TSV_ValidateCodeByName",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateAuthentication",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "webapptab",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "webapp",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "webapp",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\n\r\n\r\n\r\nconst AUTH_API = AppConfig.accServer.ACCWEBServers+'/Aeonix-App-Center/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  registerForm(username: string, email: string, password: string, phone: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'register-form', {\r\n      username,\r\n      email,\r\n      password,\r\n      phone,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  replacePassForm(username: string, oldPassword: string, password: string, confirmPassword: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  register(username: string, email: string, password: string, roles: Array<String>): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password,\r\n      roles,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getToken(url: string, username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(url, {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  // login, register\r\n  refreshToken(token: string, url?: string): Observable<any>  {\r\n    return this.http.post((url ?? AUTH_API) + 'refreshtoken', {\r\n      refreshToken: token\r\n    }, httpOptions);\r\n  }\r\n\r\n  // open app in a new browser tab\r\n  webapptab(token: string, webapp: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'webapptab', {\r\n      refreshToken: token,\r\n      webApp: webapp\r\n    }, httpOptions);\r\n  }\r\n\r\n  getPassExpireDate(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'passexpdate', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  getPermittedWebAppList(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'permitwebapplist', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getAccountDetails(username: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'getaccountdetails', {\r\n      username: username,\r\n    }, httpOptions);\r\n  }\r\n\r\n  setAccountDetails( changedDetails: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'setaccountdetails', {\r\n      detail: changedDetails\r\n    }, httpOptions);\r\n  }\r\n\r\n  getConfigurationData(): Observable<any> {\r\n    return this.http.get(AUTH_API + 'getconfigurationdata', httpOptions);\r\n  }\r\n\r\n  setConfigurationData( changedProperties: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'setconfigurationdata', {\r\n      prop: changedProperties\r\n    }, httpOptions);\r\n  }\r\n\r\n  resetConfigurationData(): Observable<any> {\r\n    return this.http.get(AUTH_API + 'resetconfigurationdata', httpOptions);\r\n  }\r\n\r\n  TSV_ValidateCodeByName(username: string, email: string, code: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codevalidatebyname', {\r\n      username,\r\n      email,\r\n      code,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_ReplacePassForm(username: string, oldPassword: string, password: string,\r\n                      confirmPassword: string, pinCodeToken: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n      pinCodeToken,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  ResetPassByMail( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'forgotpassword', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_GenerateCodeByName( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codegeneratebyname', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_GenerateCodeByEmail( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codegeneratebyemail', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  logout(refreshToken: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signout', {\r\n      refreshToken,\r\n    }, httpOptions);\r\n  }\r\n\r\n  validateAuthentication(): Observable<any> {\r\n    return this.http.get(AUTH_API + 'validate-authentication', httpOptions);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FileUploadService",
            "id": "injectable-FileUploadService-e71b1dc62a13db7ae5cd769f3954cf9e5782830c02c5f79daec846c50b26c4eb4747235f01101e4680667c3f20069fc13b0083787b10df0782db4a1605dc0480",
            "file": "src/app/services/file-upload.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "'http://localhost:8080'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileUploadService {\r\n  private baseUrl = 'http://localhost:8080';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  upload(file: File): Observable<HttpEvent<any>> {\r\n    const formData: FormData = new FormData();\r\n\r\n    formData.append('file', file);\r\n\r\n    const req = new HttpRequest('POST', `${this.baseUrl}/upload`, formData, {\r\n      responseType: 'json'\r\n    });\r\n\r\n    return this.http.request(req);\r\n  }\r\n\r\n  getFiles(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/files`);\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "Three2Service",
            "id": "injectable-Three2Service-48b069c6c0f02c6bde7085108bdbcf09041e56af9aee0da40f07ba4866999b6942df894213c6478353f91b88e2f7ce289f973c2a8b1de33262f4377a8ee7a2a9",
            "file": "src/app/services/three2.service.ts",
            "properties": [
                {
                    "name": "arrowHelperX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.ArrowHelper | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "arrowHelperY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.ArrowHelper | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "arrowHelperZ",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.ArrowHelper | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "camera",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.PerspectiveCamera",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "controls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrbitControls | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "directionalLight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.DirectionalLight",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "floor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Mesh | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lightDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Group | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.WebGLRenderer",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scene",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Scene",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "textMesh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Mesh | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "animate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applyMaterial",
                    "args": [
                        {
                            "name": "model",
                            "type": "THREE.Group",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "THREE.Group",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFloorTexture",
                    "args": [
                        {
                            "name": "textureUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "textureUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "container",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "container",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, ElementRef } from '@angular/core';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n//import { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\n//import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Three2Service {\n  private scene: THREE.Scene;\n  private camera: THREE.PerspectiveCamera;\n  private renderer: THREE.WebGLRenderer;\n  private model: THREE.Group | undefined;\n  private controls: OrbitControls | undefined;\n  private directionalLight: THREE.DirectionalLight;\n  private lightDirection: any;\n  private arrowHelperX: THREE.ArrowHelper | undefined;\n  private arrowHelperY: THREE.ArrowHelper | undefined;\n  private arrowHelperZ: THREE.ArrowHelper | undefined;\n  private textMesh: THREE.Mesh | undefined;\n  private floor: THREE.Mesh | undefined;\n\n  constructor() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.001, 10000);\n    this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, logarithmicDepthBuffer: true, powerPreference: 'high-performance' });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.shadowMap.enabled = true; // Enable shadow mapping\n    this.camera.position.z = 2;\n    this.camera.position.x = 20;\n    this.camera.rotation.y = 30;\n    this.scene.position.z = -7;\n\n    // Add ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1); // Soft white light\n    this.scene.add(ambientLight);\n\n    // Add directional light\n    this.directionalLight  = new THREE.DirectionalLight(0xffffff, 4); // White light\n    this.directionalLight.position.set(40, 15, 25);\n    this.directionalLight.castShadow = true; // Enable shadows for the light\n    this.directionalLight.shadow.mapSize.width = 2048; // Increase shadow map size\n    this.directionalLight.shadow.mapSize.height = 2048; // Increase shadow map size\n    this.directionalLight.shadow.radius = 1; // Soften shadow edges\n\n    // Configure shadow camera\n    this.directionalLight.shadow.camera.near = 0.5; // Near clipping plane\n    this.directionalLight.shadow.camera.far = 500; // Far clipping plane\n    this.directionalLight.shadow.camera.left = -50; // Left extent\n    this.directionalLight.shadow.camera.right = 50; // Right extent\n    this.directionalLight.shadow.camera.top = 50; // Top extent\n    this.directionalLight.shadow.camera.bottom = -50; // Bottom extent\n    this.directionalLight.shadow.bias = -0.0001; // Reduce shadow artifacts\n\n    this.scene.add(this.directionalLight);\n\n    // Add additional point lights\n    const pointLight1 = new THREE.PointLight(0xffffff, 2);\n    pointLight1.position.set(10, 10, 10);\n    this.scene.add(pointLight1);\n\n    const pointLight2 = new THREE.PointLight(0xffffff, 2);\n    pointLight2.position.set(-10, 10, 10);\n    this.scene.add(pointLight2);\n\n    // Add a white floor\n    const floorGeometry = new THREE.CircleGeometry(80, 32);\n    const floorMaterial = new THREE.MeshStandardMaterial({ color: \"white\" });\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2; // Rotate the floor to be horizontal\n    floor.position.y = -9; // Position the floor below the model\n    floor.receiveShadow = true; // Enable the floor to receive shadows\n    this.scene.add(floor);\n  }\n\n  init(container: ElementRef): void {\n    container.nativeElement.appendChild(this.renderer.domElement);\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enableDamping = true; // Enable damping (inertia)\n    this.controls.dampingFactor = 0.2; // Damping factor\n\n    container.nativeElement.appendChild(this.renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load('./assets/tadiranLogo9.gltf', (gltf) => {\n      this.model = gltf.scene;\n      this.applyMaterial(this.model);\n      this.model.traverse((child) => {\n        if ((child as THREE.Mesh).isMesh) {\n          child.castShadow = true; // Enable shadows for the model\n          child.receiveShadow = true; // Enable the model to receive shadows\n        }\n      });\n\n      // Align the model's X-axis with the direction to the light\n      this.lightDirection = new THREE.Vector3()\n        .subVectors(this.directionalLight.position, this.model.position).normalize();\n      const up = new THREE.Vector3(0, 1, 0);\n      const quaternion = new THREE.Quaternion().setFromUnitVectors(up, this.lightDirection);\n      this.model.setRotationFromQuaternion(quaternion);\n\n      this.scene.add(this.model);\n\n      // Create and add the arrow helpers for X, Y, Z axes\n      //const length = 5; // Length of the arrows\n      //this.arrowHelperX = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(0, 0, 0), length, 0xff0000); // Red for X axis\n      //this.arrowHelperY = new THREE.ArrowHelper(new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 0), length, 0x00ff00); // Green for Y axis\n      //this.arrowHelperZ = new THREE.ArrowHelper(new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, 0), length, 0x0000ff); // Blue for Z axis\n      //this.scene.add(this.arrowHelperX);\n      //this.scene.add(this.arrowHelperY);\n      //this.scene.add(this.arrowHelperZ);\n\n      // Load font and create text geometry\n      //const fontLoader = new FontLoader();\n      //fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\n      //  const textGeometry = new TextGeometry('Rotation: 0°', {\n      //    font: font,\n      //    size: 1,\n      //    height: 0.1,\n      //  });\n      //  const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\n      //  this.textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      //  this.textMesh.position.set(0, 5, 0);\n      //  this.scene.add(this.textMesh);\n      //});\n\n      this.animate();\n    });\n  }\n\n  changeFloorTexture(textureUrl: string): void {\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(textureUrl, (texture) => {\n      if (this.floor) {\n        (this.floor.material as THREE.MeshStandardMaterial).map = texture;\n        (this.floor.material as THREE.MeshStandardMaterial).needsUpdate = true;\n      }\n    });\n  }\n\n  private applyMaterial(model: THREE.Group): void {\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load('./assets/mv2.avif'); // Load your texture\n\n    const material = new THREE.MeshStandardMaterial({\n      map: texture, // Apply the texture to the material\n      //color: \"#2e8ae7\", // Dark blue\n      metalness: 0.4, // High metalness for a shiny look\n      roughness: 0.2, // Low roughness for a glossy surface\n      side: THREE.DoubleSide\n    });\n\n    model.traverse((child) => {\n      if ((child as THREE.Mesh).isMesh) {\n        (child as THREE.Mesh).material = material;\n      }\n    });\n  }\n\n  private animate(): void {\n    requestAnimationFrame(() => this.animate());\n    if (this.model) {\n      // Rotate the model around its tilted X-axis\n      const tiltedXAxis = new THREE.Vector3(0, 1, 0).applyQuaternion(this.model.quaternion);\n      this.model.rotateOnWorldAxis(tiltedXAxis, 0.001);\n\n      // Update the arrow helpers' positions to match the model's position\n      //this.arrowHelperX!.position.copy(this.model.position);\n      //this.arrowHelperY!.position.copy(this.model.position);\n      //this.arrowHelperZ!.position.copy(this.model.position);\n\n      // Update the text with the current rotation angle\n      //const rotationAngle = this.model.rotation.x * (180 / Math.PI); // Convert radians to degrees\n      //if (this.textMesh) {\n      //  (this.textMesh.geometry as TextGeometry).dispose();\n      //  this.textMesh.geometry = new TextGeometry(`Rotation: ${rotationAngle.toFixed(2)}°`, {\n      //    font: (this.textMesh.geometry as TextGeometry).parameters.options.font,\n      //    size: 1,\n      //    height: 0.1,\n      //  });\n      //}\n    }\n    if (this.controls) {\n      this.controls.update(); // Update controls\n    }\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThreeService",
            "id": "injectable-ThreeService-92f830807f274a2d771d2ebe35078e33ad628ba10a5af933743d436d7e431127cfc4cdb713e49fad5ae12c52182fc4924ec82cd723ce5878bec7f8f16f2a9ecd",
            "file": "src/app/services/three.service.ts",
            "properties": [
                {
                    "name": "arrowHelperX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.ArrowHelper | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "arrowHelperY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.ArrowHelper | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "arrowHelperZ",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.ArrowHelper | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "camera",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.PerspectiveCamera",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "controls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrbitControls | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "directionalLight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.DirectionalLight",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "floor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Mesh | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lightDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Group | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.WebGLRenderer",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scene",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Scene",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "textMesh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "THREE.Mesh | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "animate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeFloorTexture",
                    "args": [
                        {
                            "name": "textureUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "textureUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "container",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "container",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, ElementRef } from '@angular/core';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { EdgeSplitModifier } from 'three/examples/jsm/modifiers/EdgeSplitModifier.js';\nimport {BufferGeometry} from \"three\";\n//import { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\n//import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreeService {\n  private scene: THREE.Scene;\n  private camera: THREE.PerspectiveCamera;\n  private renderer: THREE.WebGLRenderer;\n  private model: THREE.Group | undefined;\n  private controls: OrbitControls | undefined;\n  private directionalLight: THREE.DirectionalLight;\n  private lightDirection: any;\n  private arrowHelperX: THREE.ArrowHelper | undefined;\n  private arrowHelperY: THREE.ArrowHelper | undefined;\n  private arrowHelperZ: THREE.ArrowHelper | undefined;\n  private textMesh: THREE.Mesh | undefined;\n  private floor: THREE.Mesh | undefined;\n\n  constructor() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.001, 10000);\n    this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, logarithmicDepthBuffer: true, powerPreference: 'high-performance' });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.shadowMap.enabled = true; // Enable shadow mapping\n    this.camera.position.z = 2;\n    this.camera.position.x = 20;\n    this.camera.rotation.y = 30;\n    this.scene.position.z = -7;\n\n    // Add ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff, 2); // Soft white light\n    this.scene.add(ambientLight);\n\n    // Add directional light\n    this.directionalLight  = new THREE.DirectionalLight(0xffffff, 4); // White light\n    this.directionalLight.position.set(40, 15, 25);\n    this.directionalLight.castShadow = true; // Enable shadows for the light\n    this.directionalLight.shadow.mapSize.width = 2048; // Increase shadow map size\n    this.directionalLight.shadow.mapSize.height = 2048; // Increase shadow map size\n    this.directionalLight.shadow.radius = 1; // Soften shadow edges\n\n    // Configure shadow camera\n    this.directionalLight.shadow.camera.near = 0.5; // Near clipping plane\n    this.directionalLight.shadow.camera.far = 500; // Far clipping plane\n    this.directionalLight.shadow.camera.left = -50; // Left extent\n    this.directionalLight.shadow.camera.right = 50; // Right extent\n    this.directionalLight.shadow.camera.top = 50; // Top extent\n    this.directionalLight.shadow.camera.bottom = -50; // Bottom extent\n    this.directionalLight.shadow.bias = -0.0001; // Reduce shadow artifacts\n\n    this.scene.add(this.directionalLight);\n\n    // Add additional point lights\n    const pointLight1 = new THREE.PointLight(0xffffff, 2);\n    pointLight1.position.set(10, 10, 10);\n    this.scene.add(pointLight1);\n\n    const pointLight2 = new THREE.PointLight(0xffffff, 2);\n    pointLight2.position.set(-10, 10, 10);\n    this.scene.add(pointLight2);\n\n    // Add a white floor\n    const floorGeometry = new THREE.CircleGeometry(80, 32);\n    const floorMaterial = new THREE.MeshStandardMaterial({ color: \"white\" });\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2; // Rotate the floor to be horizontal\n    floor.position.y = -9; // Position the floor below the model\n    floor.receiveShadow = true; // Enable the floor to receive shadows\n    this.scene.add(floor);\n  }\n\n  init(container: ElementRef): void {\n    container.nativeElement.appendChild(this.renderer.domElement);\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enableDamping = true; // Enable damping (inertia)\n    this.controls.dampingFactor = 0.2; // Damping factor\n\n    container.nativeElement.appendChild(this.renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load('./assets/tadiranLogo5.glb', (gltf) => {\n      this.model = gltf.scene;\n      //this.applyMaterial(this.model);\n\n      const textureLoader = new THREE.TextureLoader();\n      const texture = textureLoader.load('./assets/mv2.avif'); // Load your texture\n\n      const material = new THREE.MeshStandardMaterial({\n        //map: texture, // Apply the texture to the material\n        color: \"#2e8ae7\", // Dark blue\n        metalness: 0.4, // High metalness for a shiny look\n        roughness: 0.2, // Low roughness for a glossy surface\n        side: THREE.DoubleSide\n      });\n\n      const material2 = new THREE.MeshPhongMaterial({\n        map: texture, // Apply the texture to the material\n        //color: \"#2e8ae7\", // Dark blue\n        reflectivity: 0.9,  // High metalness for a shiny look\n        //roughness: 0.2, // Low roughness for a glossy surface\n        side: THREE.DoubleSide\n      })\n\n\n\n      // Apply EdgeSplit Modifier\n      //const modifier = new SimplifyModifier();\n      const cutOffAngle = 0.5; // Adjust the cut-off angle as needed\n      const tryKeepNormals = true;\n      this.model.traverse((child) => {\n        if ((child as THREE.Mesh).isMesh) {\n          const mesh = child as THREE.Mesh;\n          mesh.geometry = new EdgeSplitModifier().modify(mesh.geometry  as THREE.BufferGeometry, cutOffAngle, tryKeepNormals);\n          mesh.geometry.computeVertexNormals(); // Recompute normals for smooth shading\n\n\n          mesh.castShadow = true;\n          mesh.receiveShadow = true;\n          mesh.geometry.computeVertexNormals();\n          mesh.material = material;\n        }\n        if ((child as THREE.Group).isGroup) {\n\n        }\n      });\n\n      // Apply Smooth Shading\n      /*this.model.traverse((child) => {\n        if ((child as THREE.Mesh).isMesh) {\n          const mesh = child as THREE.Mesh;\n          mesh.geometry.computeVertexNormals();\n        }\n      });*/\n\n      // Align the model's X-axis with the direction to the light\n      this.lightDirection = new THREE.Vector3()\n        .subVectors(this.directionalLight.position, this.model.position).normalize();\n      const up = new THREE.Vector3(1, 0, 0);\n      const quaternion = new THREE.Quaternion().setFromUnitVectors(up, this.lightDirection);\n      this.model.setRotationFromQuaternion(quaternion);\n\n      this.scene.add(this.model);\n\n      // Create and add the arrow helpers for X, Y, Z axes\n      //const length = 5; // Length of the arrows\n      //this.arrowHelperX = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(0, 0, 0), length, 0xff0000); // Red for X axis\n      //this.arrowHelperY = new THREE.ArrowHelper(new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 0), length, 0x00ff00); // Green for Y axis\n      //this.arrowHelperZ = new THREE.ArrowHelper(new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, 0), length, 0x0000ff); // Blue for Z axis\n      //this.scene.add(this.arrowHelperX);\n      //this.scene.add(this.arrowHelperY);\n      //this.scene.add(this.arrowHelperZ);\n\n      // Load font and create text geometry\n      //const fontLoader = new FontLoader();\n      //fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\n      //  const textGeometry = new TextGeometry('Rotation: 0°', {\n      //    font: font,\n      //    size: 1,\n      //    height: 0.1,\n      //  });\n      //  const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\n      //  this.textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      //  this.textMesh.position.set(0, 5, 0);\n      //  this.scene.add(this.textMesh);\n      //});\n\n      this.animate();\n    });\n  }\n\n  changeFloorTexture(textureUrl: string): void {\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(textureUrl, (texture) => {\n      if (this.floor) {\n        (this.floor.material as THREE.MeshStandardMaterial).map = texture;\n        (this.floor.material as THREE.MeshStandardMaterial).needsUpdate = true;\n      }\n    });\n  }\n/*\n  private applyMaterial(model: THREE.Group): void {\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load('./assets/mv2.avif'); // Load your texture\n\n    const material = new THREE.MeshStandardMaterial({\n      map: texture, // Apply the texture to the material\n      //color: \"#2e8ae7\", // Dark blue\n      metalness: 0.4, // High metalness for a shiny look\n      roughness: 0.2, // Low roughness for a glossy surface\n      side: THREE.DoubleSide\n    });\n\n    model.traverse((child) => {\n      if ((child as THREE.Mesh).isMesh) {\n        (child as THREE.Mesh).material = material;\n      }\n    });\n  }\n*/\n  private animate(): void {\n    requestAnimationFrame(() => this.animate());\n    if (this.model) {\n      // Rotate the model around its tilted X-axis\n      const tiltedXAxis = new THREE.Vector3(0, 1, 0).applyQuaternion(this.model.quaternion);\n      this.model.rotateOnWorldAxis(tiltedXAxis, 0.001);\n\n      // Update the arrow helpers' positions to match the model's position\n      //this.arrowHelperX!.position.copy(this.model.position);\n      //this.arrowHelperY!.position.copy(this.model.position);\n      //this.arrowHelperZ!.position.copy(this.model.position);\n\n      // Update the text with the current rotation angle\n      //const rotationAngle = this.model.rotation.x * (180 / Math.PI); // Convert radians to degrees\n      //if (this.textMesh) {\n      //  (this.textMesh.geometry as TextGeometry).dispose();\n      //  this.textMesh.geometry = new TextGeometry(`Rotation: ${rotationAngle.toFixed(2)}°`, {\n      //    font: (this.textMesh.geometry as TextGeometry).parameters.options.font,\n      //    size: 1,\n      //    height: 0.1,\n      //  });\n      //}\n    }\n    if (this.controls) {\n      this.controls.update(); // Update controls\n    }\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TokenStorageService",
            "id": "injectable-TokenStorageService-f4b83fae221520788cb9ea83ab3eeedd016c7475bf68e654009fec629e3c82d203b86427a673a222984b8c97940a66e4a73ae0bf4fe90a8604244dc9f100861b",
            "file": "src/app/_services/token-storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getPinCodeToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getRefreshToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getRoles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getUsername",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isSupervisorAdmin",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "savePinCodeToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveRefreshToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESHTOKEN_KEY = 'auth-refreshtoken';\r\nconst PINCODETOKEN_KEY = 'auth-pincodetoken';\r\nconst USER_KEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      this.saveUser({ ...user, accessToken: token });\r\n    }\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveRefreshToken(token: string): void {\r\n    window.sessionStorage.removeItem(REFRESHTOKEN_KEY);\r\n    window.sessionStorage.setItem(REFRESHTOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      user.refreshToken = token;\r\n      this.saveUser(user);\r\n    }\r\n  }\r\n\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESHTOKEN_KEY);\r\n  }\r\n\r\n  public savePinCodeToken(token: string): void {\r\n    window.sessionStorage.removeItem(PINCODETOKEN_KEY);\r\n    window.sessionStorage.setItem(PINCODETOKEN_KEY, token);\r\n  }\r\n\r\n  public getPinCodeToken(): string | null {\r\n    return window.sessionStorage.getItem(PINCODETOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getRoles(): any {\r\n    const user = this.getUser();\r\n    if (user.roles) {\r\n      return user.roles;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getUsername(): any{\r\n    const user = this.getUser();\r\n    return user.username ?? null;\r\n  }\r\n\r\n  public isSupervisorAdmin(): boolean {\r\n    return this.getUser()?.roles?.includes(\"SupervisorAdmin\");\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TranslateService",
            "id": "injectable-TranslateService-967771cfc8c922ca7d6dde323ca726e3b8f52a25b409c76293225af224a61f737cdedd58a602ee9475029a129b9559b8fe89436ca222ffb069647858e23e8bcf",
            "file": "src/stories/pipes/translate/translate.service.ts",
            "properties": [
                {
                    "name": "_currentDir",
                    "defaultValue": "'ltr'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Direction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 523,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_currentLang",
                    "defaultValue": "AppConfig.translateLanguage.lang",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 522,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLang",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 543,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "instant",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 603,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 539,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLang",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 549,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "translate",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 594,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "use",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 588,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, Inject, Component, Directive, InjectionToken, Type, OnInit} from \"@angular/core\";\r\nimport {AppConfig} from \"../../../app/app.config\";\r\n//import {TokenStorageService} from \"src/app/_services/token-storage.service\";\r\n//import {translateRememberLangComponent,/* TRANSLATION_PROVIDERS, TRANSLATIONS*/} from \"src/app/pipes/remember-lang/remember-lang.component\";\r\n//import {translateRememberIangComponent} from \"./translate-remember-lang/translations.component\";\r\n\r\nexport const TRANSLATIONS = new InjectionToken<any>('translations', {\r\n  providedIn: 'root',\r\n  factory: () => sessionStorage\r\n});\r\nexport const LANG_ENG_NAME = 'eng';\r\nexport const LANG_ENG_TRANS = {\r\n  \"Example\"                                                            :   \"Example\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"A registry process should be made!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Something went wrong!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Something went wrong!\",\r\n  \"Bad credentials\"                                                    :   \"Incorrect user name or password\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Try again with a password you haven`t used before\",\r\n  \"Passwords do not match!\"                                            :   \"Passwords do not match\",\r\n  \"Incorrect current password\"                                         :   \"Current password is incorrect\",\r\n  \"Something went wrong\"                                               :   \"Something went wrong!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email is already in use!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"The Verification Code does not match\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Unable to save your changes\",\r\n  \"User account is locked\"                                             :   \"Your account has been locked\",\r\n  \"size must be between 2 and 20\"                                      :   \"Enter a value between 2 to 20 characters long\",\r\n  \"Unknown User\"                                                       :   \"Unknown User\",\r\n  \"Details Saved\"                                                      :   \"Your account has been locked\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Password matches one of 4 previous passwords.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Password must contain 1 or more special characters.\",\r\n  \"* your phone number has been updated\"                               :   \"* Your phone number has been updated\",\r\n  \"* your email address has been updated\"                              :   \"* Your email address has been updated\",\r\n  \"Error: Your changes could not be saved\"                             :   'Error: Your changes could not be saved',\r\n\r\n  \"Reset Password\"                                                     :   \"Reset Password\",\r\n  \"Send me a temporary password once again\"                            :   \"Send me a temporary password once again\",\r\n  \"A new temporary password has been sent to\"                          :   \"A new temporary password has been sent to\",\r\n  \"your email address\"                                                 :   \"your email address\",\r\n  \"3 Days to expire\"                                                   :   \"3 Days to expire\",\r\n  \"A minimum of 8 characters\"                                          :   \"A minimum of 8 characters\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"At least 1 Uppercase letters\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"At least 1 Lowercase letters\",\r\n  \"A number\"                                                           :   \"A number\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No more than 2 adjacent identical characters\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"Admin\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"Agent\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CHANGE PASSWORD\",\r\n  \"Change Password\"                                                    :   \"Change Password\",\r\n  \"Change Password and Login\"                                          :   \"Change Password and Login\",\r\n  \"Change it now >\"                                                    :   \"Change it now >\",\r\n  \"Change the Initial Password\"                                        :   \"Change the Initial Password\",\r\n  \"Chinese\"                                                            :   \"Chinese\",\r\n  \"Complete Registration\"                                              :   \"Complete Registration\",\r\n  \"Continue\"                                                           :   \"Continue\",\r\n  \"EMAIL\"                                                              :   \"Email\",\r\n  \"Enable Profile Picture\"                                             :   \"Enable Profile Picture\",\r\n  \"English\"                                                            :   \"English\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                 :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"FORGOT PASSWORD\",\r\n  \"Forgot Password?\"                                                   :   \"Forgot Password?\",\r\n  \"Script-Designer\"                                                    :   \"Script Designer\",\r\n  \"Hebrew\"                                                             :   \"Hebrew\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"password\",\r\n  \"LOGIN SCREEN\"                                                       :   \"LOGIN SCREEN\",\r\n  \"Log out\"                                                            :   \"Log out\",\r\n  \"Login\"                                                              :   \"Login\",\r\n  \"My Account\"                                                         :   \"My Account\",\r\n  \"NEW PASSWORD\"                                                       :   \"NEW Password\",\r\n  \"OLD PASSWORD\"                                                       :   \"OLD PASSWORD\",\r\n  \"PASSWORD\"                                                           :   \"Password\",\r\n  \"Please enter the Verification Code\"                                 :   \"Please enter the Verification Code\",\r\n  \"you received in your mail:\"                                         :   \"you received in your mail:\",\r\n  \"Please enter your User Name:\"                                       :   \"Please enter your User Name:\",\r\n  \"Send Verification Code again\"                                       :   \"Send Verification Code again\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRATION\",\r\n  \"Russian\"                                                            :   \"Russian\",\r\n  \"Send me a Verification Code\"                                        :   \"Send me a Verification Code\",\r\n  \"Send me a Temporary Password\"                                       :   \"Send me a Temporary Password\",\r\n  \"Spanish\"                                                            :   \"Spanish\",\r\n  \"The password must contain:\"                                         :   \"The password must contain:\",\r\n  \"USER DETAILS\"                                                       :   \"USER DETAILS\",\r\n  \"USER NAME\"                                                          :   \"USERNAME\",\r\n  \"WebRT\"                                                              :   \"Real-Time Reports\",\r\n  \"You have successfully changed your password!\"                       :   \"You have successfully changed your password!\",\r\n  \"You have successfully completed your registration!\"                 :   \"You have successfully completed your registration!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Your password has expired and must be changed\",\r\n  \"Your password will expire in \"                                      :   \"Your password will expire in \",\r\n  \" Days.\"                                                             :   \" Days.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete the registration by filling the missing info:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"PHONE NUMBER FOR AUTHENTICATION\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-enter new Password\",\r\n  \"resend the verification code\"                                       :   \"resend the verification code\",\r\n  \"Strength : \"                                                        :   \"Strength : \",\r\n  \"Must contain phone:\"                                                :   \"Must contain phone:\",\r\n  \"A well-formed phone number\"                                         :   \"A well-formed phone number\",\r\n  \"Must contain email:\"                                                :   \"Must contain email:\",\r\n  \"A well-formed email address\"                                        :   \"A well-formed email address\",\r\n  \"Successfully sent\"                                                  :   \"Successfully sent\",\r\n  \"Sending failed!\"                                                    :   \"Sending failed!\",\r\n  \"Back\"                                                               :   \"Back\",\r\n\r\n};\r\nexport const LANG_HEB_NAME = 'heb';\r\nexport const LANG_HEB_TRANS = {\r\n  \"Example\"                                                            :   \"דוגמא\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"יש להשלים תהליך רישום\",\r\n  \"Error: Something went wrong!\"                                       :   \"!משהו השתבש\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"תהליך רישום לא תקין\",\r\n  \"Bad credentials\"                                                    :   \"שם משתמש או סיסמא שגויים\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"בחר סיסמא חדשה שלא הייתה בשימוש\",\r\n  \"Passwords do not match!\"                                            :   \"'הקפד להזין סיסמאות זהות בשדות 'סיסמה חדשה' ו'אימות סיסמה\",\r\n  \"Incorrect current password\"                                         :   \"סיסמה נוכחית שגויה\",\r\n  \"Something went wrong\"                                               :   \"!משהו השתבש\",\r\n  \"Error: Email is already in use!\"                                    :   'כתובת דוא\"ל נמצאת בשימוש אצל משתמש קיים',\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"קוד אימות שגוי\",\r\n  \"Error: Unable to save your changes\"                                 :   \"לא ניתן לשמור את השינויים\",\r\n  \"User account is locked\"                                             :   \"חשבונך ננעל\",\r\n  \"size must be between 2 and 20\"                                      :   \"יש להזין ערך המכיל בין 2 ל-20 תווים\",\r\n  \"Unknown User\"                                                       :   \"המשתמש אינו מוכר למערכת\",\r\n  \"Details Saved\"                                                      :   \"חשבונך ננעל\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"הסיסמה תואמת לאחת מ-4 סיסמאות קודמות\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"הסיסמה חייבת להכיל 1 או יותר תווים בהצלחה מיוחדים\",\r\n  \"* your phone number has been updated\"                               :   \"* מספר הטלפון שלך עודכן בהצלחה\",\r\n  \"* your email address has been updated\"                              :   '* כתובת הדוא\"ל שלך עודכן בהצלחה',\r\n  \"Error: Your changes could not be saved\"                             :   'שגיאה: השינויים שהזנת אינם נשמרו',\r\n\r\n  \"Reset Password\"                                                     :   \"איפוס סיסמה\",\r\n  \"Send me a temporary password once again\"                            :   \"שלח לי שוב סיסמה זמנית\",\r\n  \"A new temporary password has been sent to\"                          :   \"סיסמה זמנית חדשה נשלחה אל\",\r\n  \"your email address\"                                                 :   \"כתובת הדוא\\\"ל שלך\",\r\n  \"% Days to expire\"                                                   :   \"בעוד % ימים יפוג תוקף הסיסמה\",\r\n  \" A minimum of 8 characters\"                                         :   \"מינימום 8 ספרות\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"לפחות אות אחת גדולה\",\r\n  \" At least 1 lowercase letters\"                                      :   \"לפחות אות אחת קטנה\",\r\n  \" At least 1 special character\"                                      :   \"לפחות תו מיוחד אחד\",\r\n  \" A number\"                                                          :   \"מספר\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \"לא יותר מ-2 תווים עוקבים זהים\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"אדמיניסטרציה\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"נציג\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password and Login\"                                          :   \"שנה סיסמה והיכנס\",\r\n  \"Change it now >\"                                                    :   \" <שנה עכשיו\",\r\n  \"Change the Initial Password\"                                        :   \"שנה את הסיסמה הראשונית\",\r\n  \"Chinese\"                                                            :   \"סינית\",\r\n  \"Complete Registration\"                                              :   \"השלם תהליך רישום\",\r\n  \"Continue\"                                                           :   \"המשך\",\r\n  \"EMAIL\"                                                              :   'כתובת דוא\"ל',\r\n  \"Enable Profile Picture\"                                             :   \"אפשר תמונת פרופיל\",\r\n  \"English\"                                                            :   \"אנגלית\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"שכחתי סיסמה\",\r\n  \"Forgot Password?\"                                                   :   \"שכחתי סיסמה\",\r\n  \"Script-Designer\"                                                    :   \"עורך תסריטים\",\r\n  \"Hebrew\"                                                             :   \"עברית\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"סיסמה ראשונית\",\r\n  \"LOGIN SCREEN\"                                                       :   \"מסך כניסה\",\r\n  \"Log out\"                                                            :   \"יציאה\",\r\n  \"Login\"                                                              :   \"כניסה\",\r\n  \"My Account\"                                                         :   \"החשבון שלי\",\r\n  \"NEW PASSWORD\"                                                       :   \"סיסמה חדשה\",\r\n  \"OLD PASSWORD\"                                                       :   \"סיסמה ישנה\",\r\n  \"PASSWORD\"                                                           :   \"סיסמה\",\r\n  \"Please enter the Verification Code\"                                 :   \"אנא הקלד את קוד האימות\",\r\n  \"you received in your mail:\"                                         :   'שקיבלת בדוא\"ל',\r\n  \"Please enter your User Name:\"                                       :   \"אנא הקלד את שם המשתמש שלך\",\r\n  \"Send Verification Code again\"                                       :   \"שלח קוד אימות חדש\",\r\n  \"REGISTRATION\"                                                       :   \"רישום\",\r\n  \"Russian\"                                                            :   \"רוסית\",\r\n  \"Send me a Verification Code\"                                        :   \"שלח לי קוד אימות\",\r\n  \"Send me a Temporary Password\"                                       :   \"שלח לי סיסמה זמנית\",\r\n  \"Spanish\"                                                            :   \"ספרדית\",\r\n  \"The password must contain:\"                                         :   \"על הסיסמה לכלול:\",\r\n  \"USER DETAILS\"                                                       :   \"פרטי משתמש\",\r\n  \"USER NAME\"                                                          :   \"שם משתמש\",\r\n  \"WebRT\"                                                              :   \"דוחות זמן אמת\",\r\n  \"You have successfully changed your password!\"                       :   \"סיסמתך שונתה בהצלחה\",\r\n  \"You have successfully completed your registration!\"                 :   \"תהליך הרישום הסתיים בהצלחה\",\r\n  \"Your password has expired and must be changed\"                      :   \"פג תוקף סיסמתך. עליך לשנותה\",\r\n  \"Your password will expire in \"                                      :   \"תוקף סיסמתך יפוג בתוך \",\r\n  \" Days.\"                                                             :   \" ימים\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"הקלד את המידע הבא לצורך השלמת תהליך הרישום\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"מספר טלפון לאימות\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"האימות סיסמה\",\r\n  \"resend the verification code\"                                       :   \"שלח שוב קוד אימות\",\r\n  \"Strength : \"                                                        :   \"חוזק : \",\r\n  \"Must contain phone:\"                                                :   \"חייב לכלול מספר טלפון\",\r\n  \" A well-formed phone number\"                                        :   \"מספר טלפון תקני\",\r\n  \"Must contain email:\"                                                :   'חייב לכלול כתובת דוא\"ל',\r\n  \" A well-formed email address\"                                       :   'כתובת דוא\"ל תקנית',\r\n  \"Settings\"                                                           :   'הגדרות',\r\n  \"Successfully sent\"                                                  :   \"נשלח בהצלחה\",\r\n  \"Sending failed!\"                                                    :   \"!שליחה נכשלה\",\r\n  \"Back\"                                                               :   \"חזור\",\r\n\r\n};\r\nexport const LANG_ESP_NAME = 'esp';\r\nexport const LANG_ESP_TRANS = {\r\n  \"Example\"                                                            :   \"Ejemplo\",\r\n  \"must be a well-formed email address\"                                :   \"debe ser una dirección de correo electrónica bien formada\",\r\n  \"Error: A registry process should be made!\"                          :   \"¡Se debe completar un proceso de registro!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Algo salió mal!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"¡El proceso de registro no válido!\",\r\n  \"Bad credentials\"                                                    :   \"Usuario o contraseña incorrecta\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Vuelve a intentarlo con una contraseña que no hayas usado antes\",\r\n  \"Passwords do not match!\"                                            :   \"¡Las contraseñas no coinciden\",\r\n  \"Incorrect current password\"                                         :   \"Contraseña actual incorrecta\",\r\n  \"Something went wrong\"                                               :   \"Algo salió mal!\",\r\n  \"Error: Email is already in use!\"                                    :   \"¡Correo electrónico ya está en uso!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"El código de verificación no coincide\",\r\n  \"Error: Unable to save your changes\"                                 :   \"No se pueden guardar los cambios\",\r\n  \"User account is locked\"                                             :   \"Su cuenta ha sido bloqueada\",\r\n  \"size must be between 2 and 20\"                                      :   \"Ingrese un valor entre 2 y 20 caracteres de largo\",\r\n  \"Unknown User\"                                                       :   \"Usuario Desconocido\",\r\n  \"Details Saved\"                                                      :   \"Su cuenta ha sido bloqueada\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"La contraseña coincide con una de las 4 contraseñas anteriores.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"La contraseña debe contener 1 o más caracteres especiales.\",\r\n  \"* your phone number has been updated\"                               :   \"* Su número de teléfono ha sido actualizado\",\r\n  \"* your email address has been updated\"                              :   \"* Su dirección de correo electrónico ha sido actualizada\",\r\n\r\n  \"Reset Password\"                                                     :   \"Restablecer la contraseña\",\r\n  \"Send me a reset password once again\"                                :   \"Envíame un contraseña temporal una vez más\",\r\n  \"A new temporary password has been sent to\"                          :   \"Se ha enviado una nueva contraseña temporal a\",\r\n  \"your email address\"                                                 :   \"Su dirección de correo electrónico\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \" A minimum of 8 characters\"                                         :   \"Un mínimo de 8 caracteres\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"Al menos 1 letras mayúsculas\",\r\n  \" At least 1 lowercase letters\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" At least 1 special character\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" A number\"                                                          :   \"Un número\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No más de 2 caracteres consecutivos idénticos\",\r\n  \"APP CENTER\"                                                         :   \"CENTRO DE APLICACIONES\",\r\n  \"Admin\"                                                              :   \"Administrador\",\r\n  \"Aeonix App Center\"                                                  :   \"Centro de aplicaciones Aeonix\",\r\n  \"Agent\"                                                              :   \"Agente\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CAMBIAR LA CONTRASEÑA\",\r\n  \"Change Password\"                                                    :   \"Cambiar la contraseña\",\r\n  \"Change Password and Login\"                                          :   \"Cambiar contraseña e iniciar sesión\",\r\n  \"Change it now >\"                                                    :   \"Cámbialo ahora >\",\r\n  \"Change the Initial Password\"                                        :   \"Cambiar la contraseña inicial\",\r\n  \"Chinese\"                                                            :   \"Chino\",\r\n  \"Complete Registration\"                                              :   \"Registracion completa\",\r\n  \"Continue\"                                                           :   \"Continuar\",\r\n  \"EMAIL\"                                                              :   \"Correo electrónico\",\r\n  \"Enable Profile Picture\"                                             :   \"Habilitar imagen de perfil\",\r\n  \"English\"                                                            :   \"Inglés\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ej. Saúl Ramírez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ej: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ej: abc@ejemplo.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"HAS OLVIDADO TU CONTRASEÑA\",\r\n  \"Forgot Password?\"                                                   :   \"¿Has olvidado tu contraseña?\",\r\n  \"Script-Designer\"                                                    :   \"Diseñador de guiones\",\r\n  \"Hebrew\"                                                             :   \"Hebreo\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"Contraseña inicial\",\r\n  \"LOGIN SCREEN\"                                                       :   \"PANTALLA DE INGRESO AL SISTEMA\",\r\n  \"Log out\"                                                            :   \"Cerrar sesión\",\r\n  \"Login\"                                                              :   \"Iniciar sesión\",\r\n  \"My Account\"                                                         :   \"Mi cuenta\",\r\n  \"NEW PASSWORD\"                                                       :   \"Nueva contraseña\",\r\n  \"OLD PASSWORD\"                                                       :   \"CONTRASEÑA ANTERIOR\",\r\n  \"PASSWORD\"                                                           :   \"Contraseña\",\r\n  \"Please enter the Verification Code\"                                 :   \"Porfavor ingrese el codigo de verificacion\",\r\n  \"you received in your mail:\"                                         :   \"Lo recibiste en tu correo:\",\r\n  \"Please enter your User Name:\"                                       :   \"Por favor, ingrese su usuario:\",\r\n  \"Send Verification Code again\"                                       :   \"Enviar código de verificación de nuevo\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRACION\",\r\n  \"Russian\"                                                            :   \"Ruso\",\r\n  \"Send me a Verification Code\"                                        :   \"Envíame un código de verificación\",\r\n  \"Send me a Temporary Password\"                                       :   \"Envíame un contraseña temporal\",\r\n  \"Spanish\"                                                            :   \"Español\",\r\n  \"The password must contain:\"                                         :   \"La contraseña debe contener:\",\r\n  \"USER DETAILS\"                                                       :   \"DETALLES DE USUARIO\",\r\n  \"USER NAME\"                                                          :   \"USUARIO\",\r\n  \"WebRT\"                                                              :   \"WebRT\",\r\n  \"You have successfully changed your password!\"                       :   \"¡Has cambiado satisfactoriamente tu contraseña!\",\r\n  \"You have successfully completed your registration!\"                 :   \"¡Has completado con éxito tu registro!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Su contraseña ha expirado y debe cambiarse\",\r\n  \"Your password will expire in \"                                      :   \"Su contraseña expíra en \",\r\n  \" Days.\"                                                             :   \" días.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete el registro llenando la siguiente información:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"NÚMERO DE TELÉFONO PARA AUTENTICACIÓN\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-ingrese nueva contraseña\",\r\n  \"resend the verification code\"                                       :   \"reenviar el código de verificación\",\r\n  \"Strength : \"                                                        :   \"fortaleza : \",\r\n  \"Must contain phone:\"                                                :   \"Debe contener número de teléfono:\",\r\n  \"A well-formed phone number\"                                         :   \"Un número de teléfono bien formado\",\r\n  \"Must contain email:\"                                                :   \"Debe contener correo electrónico:\",\r\n  \"A well-formed email address\"                                        :   \"Una dirección de correo electrónico bien formada\",\r\n  \"Successfully sent\"                                                  :   \"Enviado exitosamente\",\r\n  \"Sending failed!\"                                                    :   \"¡Envío fallido!\",\r\n  \"Back\"                                                               :   \"Atrás\",\r\n};\r\nexport const LANG_CHI_NAME = 'chi';\r\nexport const LANG_CHI_TRANS = {\r\n  \"Example\"                                                            :   \"例如\",\r\n  \"must be a well-formed email address\"                                :   \"请输入正确的邮箱地址\",\r\n  \"Error: A registry process should be made!\"                          :   \"应该先完成注册！\",\r\n  \"Error: Something went wrong!\"                                       :   \"出了些问题！\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"注册无效！\",\r\n  \"Bad credentials\"                                                    :   \"用户名或密码有误\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"请用一个以前没用过的密码再试一次\",\r\n  \"Passwords do not match!\"                                            :   \"密码不符\",\r\n  \"Incorrect current password\"                                         :   \"当前密码不正确\",\r\n  \"Something went wrong\"                                               :   \"出了些问题！\",\r\n  \"Error: Email is already in use!\"                                    :   \"此邮箱已被使用！\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"验证码不符\",\r\n  \"Error: Unable to save your changes\"                                 :   \"无法保存修改的内容\",\r\n  \"User account is locked\"                                             :   \"您的账号已被锁定\",\r\n  \"size must be between 2 and 20\"                                      :   \"输入 2 到 20 个字符长的值\",\r\n  \"Unknown User\"                                                       :   \"输入 2 到 20 个字符长的值\",\r\n  \"Details Saved\"                                                      :   \"您的账号已被锁定\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"密码与之前 4 个密码中的一个相匹配。\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"密码必须包含 1 个或多个特殊字符。\",\r\n  \"* your phone number has been updated\"                               :   \"*您的电话号码已更新\",\r\n  \"* your email address has been updated\"                              :   \"*您的电子邮件地址已更新\",\r\n\r\n  \"Reset Password\"                                                     :   \"重设密码\",\r\n  \"Send me a temporary password once again\"                            :   \"再次向我发送临时密码\",\r\n  \"A new temporary password has been sent to\"                          :   \"新的临时密码已发送至\",\r\n  \"your email address\"                                                 :   \"您的电子邮件地址\",\r\n  \"3 Days to expire\"                                                   :   \"三天后到期\",\r\n  \" A minimum of 8 characters\"                                         :   \"至少包含8个字符\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"至少包含1个大写字母\",\r\n  \" At least 1 lowercase letters\"                                      :   \"至少包含1个小写字母\",\r\n  \" At least 1 special character\"                                      :   \"至少包含1个特殊字符\",\r\n  \" A number\"                                                          :   \"一个数字\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" 不超过 2 个相同的连续字符\",\r\n  \"APP CENTER\"                                                         :   \"应用中心\",\r\n  \"Admin\"                                                              :   \"管理员\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix 应用中心\",\r\n  \"Agent\"                                                              :   \"坐席\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"修改密码\",\r\n  \"Change Password\"                                                    :   \"修改密码\",\r\n  \"Change Password and Login\"                                          :   \"修改密码然后登录\",\r\n  \"Change it now >\"                                                    :   \"立即修改>\",\r\n  \"Change the Initial Password\"                                        :   \"修改初始密码\",\r\n  \"Chinese\"                                                            :   \"中文\",\r\n  \"Complete Registration\"                                              :   \"完成注册\",\r\n  \"Continue\"                                                           :   \"继续\",\r\n  \"EMAIL\"                                                              :   \"电子邮件\",\r\n  \"Enable Profile Picture\"                                             :   \"使用个人资料图片\",\r\n  \"English\"                                                            :   \"英语\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"例如：Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"例如：+972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"例如：abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"忘记密码\",\r\n  \"Forgot Password?\"                                                   :   \"忘记密码？\",\r\n  \"Script-Designer\"                                                    :   \"脚本设计器\",\r\n  \"Hebrew\"                                                             :   \"希伯来语\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"初始密码\",\r\n  \"LOGIN SCREEN\"                                                       :   \"登录界面\",\r\n  \"Log out\"                                                            :   \"注销\",\r\n  \"Login\"                                                              :   \"登录\",\r\n  \"My Account\"                                                         :   \"我的账户\",\r\n  \"NEW PASSWORD\"                                                       :   \"新密码\",\r\n  \"OLD PASSWORD\"                                                       :   \"旧密码\",\r\n  \"PASSWORD\"                                                           :   \"密码\",\r\n  \"Please enter the Verification Code\"                                 :   \"请输入验证码\",\r\n  \"you received in your mail:\"                                         :   \"你在邮件中收到的：\",\r\n  \"Please enter your User Name:\"                                       :   \"请输入你的用户名：\",\r\n  \"Send Verification Code again\"                                       :   \"再次发送验证码\",\r\n  \"REGISTRATION\"                                                       :   \"注册\",\r\n  \"Russian\"                                                            :   \"俄语\",\r\n  \"Send me a Verification Code\"                                        :   \"给我发送验证码\",\r\n  \"Send me a Temporary Password\"                                       :   \"给我临时密码\",\r\n  \"Spanish\"                                                            :   \"西班牙语\",\r\n  \"The password must contain:\"                                         :   \"密码必须包含：\",\r\n  \"USER DETAILS\"                                                       :   \"用户信息\",\r\n  \"USER NAME\"                                                          :   \"用户名\",\r\n  \"WebRT\"                                                              :   \"实时报告\",\r\n  \"You have successfully changed your password!\"                       :   \"您已成功修改密码！\",\r\n  \"You have successfully completed your registration!\"                 :   \"您已成功完成注册！\",\r\n  \"Your password has expired and must be changed\"                      :   \"您的密码已过期，必须修改\",\r\n  \"Your password will expire in \"                                      :   \"您的密码将在\",\r\n  \" Days.\"                                                             :   \"天后过期。\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"通过填写以下信息完成注册：\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"输入电话号码进行验证\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"重新输入新密码\",\r\n  \"resend the verification code\"                                       :   \"重新发送验证码\",\r\n  \"Strength : \"                                                        :   \"强度 : \",\r\n  \"Must contain phone:\"                                                :   \"必须包含电话：\",\r\n  \"A well-formed phone number\"                                         :   \"一个正确的电话号码\",\r\n  \"Must contain email:\"                                                :   \"必须包含电邮地址：\",\r\n  \"A well-formed email address\"                                        :   \"一个正确的电子邮件地址\",\r\n  \"Successfully sent\"                                                  :   \"发送成功\",\r\n  \"Sending failed!\"                                                    :   \"发送失败！\",\r\n  \"Back\"                                                               :   \"后退\",\r\n};\r\nexport const LANG_RUS_NAME = 'rus';\r\nexport const LANG_RUS_TRANS = {\r\n  \"Example\"                                                            :   \"Пример\",\r\n  \"must be a well-formed email address\"                                :   \"должен быть корректно оформленным адресом электронной почты\",\r\n  \"Error: A registry process should be made!\"                          :   \"Должен быть проведен процесс регистрации!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Что-то пошло не так!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Процесс реестра недействителен!\",\r\n  \"Bad credentials\"                                                    :   \"Неверное имя пользователя или пароль\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Попробуйте еще раз с паролем, который вы раньше не использовали\",\r\n  \"Passwords do not match!\"                                            :   \"Пароли не совпадают\",\r\n  \"Incorrect current password\"                                         :   \"Неверный текущий пароль\",\r\n  \"Something went wrong\"                                               :   \"Что-то пошло не так!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email уже используется!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"Код подтверждения не совпадает\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Не удалось сохранить изменения\",\r\n  \"User account is locked\"                                             :   \"Ваш аккаунт заблокирован\",\r\n  \"size must be between 2 and 20\"                                      :   \"Введите значение длиной от 2 до 20 символов.\",\r\n  \"Unknown User\"                                                       :   \"Неизвестный пользователь\",\r\n  \"Details Saved\"                                                      :   \"Ваш аккаунт заблокирован\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Пароль совпадает с одним из 4 предыдущих паролей.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Пароль должен содержать 1 или более специальных символов.\",\r\n  \"* your phone number has been updated\"                               :   \"* Ваш номер телефона был обновлен\",\r\n  \"* your email address has been updated\"                              :   \"* Ваш адрес электронной почты был обновлен\",\r\n\r\n\r\n  \"Reset Password\"                                                     :   \"Сброс пароля\",\r\n  \"Send me a temporary password once again\"                            :   \"Отправьте мне временный пароль еще раз\",\r\n  \"A new temporary password has been sent to\"                          :   \"Новый временный пароль был отправлен на\",\r\n  \"your email address\"                                                 :   \"ваш адрес электронной почты\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \"A minimum of 8 characters\"                                          :   \"Минимум 8 символов\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"Минимум 1 заглавная буква\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"Минимум 1 строчная буква\",\r\n  \"A number\"                                                           :   \"Число\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" Не более 2 одинаковых последовательных символов\",\r\n  \"APP CENTER\"                                                         :   \"ЦЕНТР ПРИЛОЖЕНИЙ\",\r\n  \"Admin\"                                                              :   \"Админ\",\r\n  \"Aeonix App Center\"                                                  :   \"Центр приложений Aeonix\",\r\n  \"Agent\"                                                              :   \"Агент\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"ИЗМЕНИТЬ ПАРОЛЬ\",\r\n  \"Change Password\"                                                    :   \"Изменить пароль\",\r\n  \"Change Password and Login\"                                          :   \"Изменить пароль и логин\",\r\n  \"Change it now >\"                                                    :   \"Измените его сейчас >\",\r\n  \"Change the Initial Password\"                                        :   \"Изменить начальный пароль\",\r\n  \"Chinese\"                                                            :   \"Китайский язык\",\r\n  \"Complete Registration\"                                              :   \"Завершите регистрацию\",\r\n  \"Continue\"                                                           :   \"Продолжать\",\r\n  \"EMAIL\"                                                              :   \"Электронная почта\",\r\n  \"Enable Profile Picture\"                                             :   \"Включить изображение профиля\",\r\n  \"English\"                                                            :   \"Английский\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Бывший. Саул Рамирес\",\r\n  \"Ex: +972547762084\"                                                  :   \"Пример: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Пример: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"ЗАБЫЛИ ПАРОЛЬ\",\r\n  \"Forgot Password?\"                                                   :   \"Забыли пароль?\",\r\n  \"Script-Designer\"                                                    :   \"Сценарист\",\r\n  \"Hebrew\"                                                             :   \"Иврит\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"пароль\",\r\n  \"LOGIN SCREEN\"                                                       :   \"ЭКРАН ВХОДА\",\r\n  \"Log out\"                                                            :   \"Выйти\",\r\n  \"Login\"                                                              :   \"Авторизоваться\",\r\n  \"My Account\"                                                         :   \"Мой счет\",\r\n  \"NEW PASSWORD\"                                                       :   \"Новый пароль\",\r\n  \"OLD PASSWORD\"                                                       :   \"СТАРЫЙ ПАРОЛЬ\",\r\n  \"PASSWORD\"                                                           :   \"Пароль\",\r\n  \"Please enter the Verification Code\"                                 :   \"Пожалуйста, введите проверочный код\",\r\n  \"you received in your mail:\"                                         :   \"вы получили на почту:\",\r\n  \"Please enter your User Name:\"                                       :   \"Пожалуйста, введите Ваш логин:\",\r\n  \"Send Verification Code again\"                                       :   \"Отправить код подтверждения еще раз\",\r\n  \"REGISTRATION\"                                                       :   \"ПОСТАНОВКА НА УЧЕТ\",\r\n  \"Russian\"                                                            :   \"Русский\",\r\n  \"Send me a Verification Code\"                                        :   \"Пришлите мне код подтверждения\",\r\n  \"Send me a Temporary Password\"                                       :   \"Пришлите мне временный пароль\",\r\n  \"Spanish\"                                                            :   \"Испанский язык\",\r\n  \"The password must contain:\"                                         :   \"Пароль должен содержать:\",\r\n  \"USER DETAILS\"                                                       :   \"ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"USER NAME\"                                                          :   \"ИМЯ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"WebRT\"                                                              :   \"ВебРТ\",\r\n  \"You have successfully changed your password!\"                       :   \"Вы успешно изменили ваш пароль!\",\r\n  \"You have successfully completed your registration!\"                 :   \"Вы успешно завершили регистрацию!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Срок действия вашего пароля истек, и его необходимо изменить\",\r\n  \"Your password will expire in \"                                      :   \"Срок действия вашего пароля истечет через \",\r\n  \" Days.\"                                                             :   \"  Дни.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Завершите регистрацию, заполнив недостающую информацию:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"НОМЕР ТЕЛЕФОНА ДЛЯ АУТЕНТИФИКАЦИИ\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"Повторно введите новый пароль\",\r\n  \"resend the verification code\"                                       :   \"повторно отправить код подтверждения\",\r\n  \"Strength : \"                                                        :   \"Сила : \",\r\n  \"Must contain phone:\"                                                :   \"Должен содержать телефон:\",\r\n  \"A well-formed phone number\"                                         :   \"Правильно сформированный номер телефона\",\r\n  \"Must contain email:\"                                                :   \"Должен содержать электронную почту:\",\r\n  \"A well-formed email address\"                                        :   \"Правильно сформированный адрес электронной почты\",\r\n  \"Successfully sent\"                                                  :   \"Успешно отправлено\",\r\n  \"Sending failed!\"                                                    :   \"Отправка не удалась!\",\r\n  \"Back\"                                                               :   \"Назад\",\r\n\r\n};\r\n\r\n\r\n\r\nexport declare type Direction = 'ltr' | 'rtl';\r\nexport const dictionary = {\r\n  [LANG_ENG_NAME]: {dir: 'ltr', trans: LANG_ENG_TRANS},\r\n  [LANG_HEB_NAME]: {dir: 'rtl', trans: LANG_HEB_TRANS},\r\n  [LANG_ESP_NAME]: {dir: 'ltr', trans: LANG_ESP_TRANS},\r\n  [LANG_CHI_NAME]: {dir: 'ltr', trans: LANG_CHI_TRANS},\r\n  [LANG_RUS_NAME]: {dir: 'ltr', trans: LANG_RUS_TRANS},\r\n\r\n};\r\nexport const TRANSLATION_PROVIDERS = [\r\n  { provide: TRANSLATIONS, useValue: dictionary },\r\n];\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@Directive({\r\n  selector: 'translate',\r\n})\r\nexport class TranslateService implements OnInit {\r\n  private _currentLang: string = AppConfig.translateLanguage.lang;\r\n  private _currentDir: Direction = 'ltr';\r\n  public get currentLang() {\r\n    return this._currentLang;\r\n  }\r\n\r\n  public get currentDir(): Direction {\r\n    //console.log(\"this.currentLang:\" + this._currentLang)\r\n    return this._currentDir;\r\n  }\r\n\r\n  constructor(@Inject(TRANSLATIONS) private _translations: any,\r\n              /*private translations: translateRememberLangComponent,\r\n              private tokenService: TokenStorageService*/) {\r\n    //this.getLang();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.getLang();\r\n  }\r\n\r\n  getLang() {\r\n    //const {_currentLang, _currentDir} = this.translations.getLang(this._translations).values\r\n    this._currentLang = AppConfig.translateLanguage.lang; //_currentLang;\r\n    this._currentDir = (AppConfig.translateLanguage.dir.match('ltr') ? 'ltr' : 'rtl'); //_currentDir;\r\n  }\r\n\r\n  setLang(lang: string) {\r\n    //this.translations.setLang(lang);\r\n    AppConfig.translateLanguage.lang = this._currentLang.toString();\r\n    AppConfig.translateLanguage.dir = this._currentDir.toString();\r\n  }\r\n\r\n/*  getLang() {\r\n    let lang = 'eng';\r\n    let username = null;\r\n    if (this.tokenService?.getUser() != null ) {username = this.tokenService.getUsername();}\r\n    this.userService.getLanguage((username != null ? username : '')).subscribe(\r\n      data => {\r\n        console.log('get language: '+data.data)\r\n        AppConfig.translateLanguage.lang = data.data;\r\n        this._currentLang = (data.data);\r\n        this._currentDir = (this._translations[data.data]?.dir ?? 'ltr');\r\n        lang = data.data\r\n      },\r\n      err => {\r\n        console.log(JSON.parse(err.error).message);\r\n      }\r\n    );\r\n    return lang;\r\n  }\r\n\r\n  setLang(lang: string) {\r\n    if (lang) {\r\n      const username = this.tokenService?.getUsername();\r\n      this.userService.setLanguage(lang, (username != null ? username : '')).subscribe(\r\n        data => {\r\n          console.log(data.message);\r\n        },\r\n        err => {\r\n          console.log(JSON.parse(err.error).message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n*/\r\n  public use(lang: string): void {\r\n    this._currentLang = lang;\r\n    //this.setLang(lang);\r\n    this._currentDir = (this._translations[lang]?.dir ?? 'ltr'); //\r\n  }\r\n\r\n  public translate(key: string): string{\r\n    if  (typeof(key) ==  undefined) {return \"\";}\r\n    let translation = key;\r\n    if (this._translations[this.currentLang] && this._translations[this.currentLang].trans[key]) {\r\n      return this._translations[this.currentLang].trans[key];\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  public instant(key: string) {\r\n    return this.translate(key);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_translations",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 531,
                "jsdoctags": [
                    {
                        "name": "_translations",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "currentLang": {
                    "name": "currentLang",
                    "getSignature": {
                        "name": "currentLang",
                        "type": "",
                        "returnType": "",
                        "line": 524
                    }
                },
                "currentDir": {
                    "name": "currentDir",
                    "getSignature": {
                        "name": "currentDir",
                        "type": "",
                        "returnType": "Direction",
                        "line": 528
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-da80532c3472d0a8cb5afb7a43ca0d381ae20074a8c71ac0945cd4fb892bdc89dcadbcd77d6fda3fdc2d5a9a2a9cb594737ef50b60b1caa04771c79a2349b639",
            "file": "src/app/_services/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "eraseUser",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAccountDetails",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAccVersion",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAdminBoard",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getClusterAddress",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLanguage",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getModeratorBoard",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPublicContent",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserBoard",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isTowStepVerRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLanguage",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\nconst API_URL = AppConfig.accServer.ACCWEBServers+'/Aeonix-App-Center/test/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getAccVersion(): Observable<any> {\r\n    return this.http.get(API_URL + 'accversion', { responseType: 'text' });\r\n  }\r\n\r\n  getClusterAddress(): Observable<any> {\r\n    return this.http.get(API_URL + 'clusteraddress', httpOptions);\r\n  }\r\n\r\n  isTowStepVerRequired(): Observable<any> {\r\n    return this.http.get(API_URL + 'istsvon', httpOptions);\r\n  }\r\n\r\n  setLanguage(lang: string, username: string): Observable<any> {\r\n    return this.http.post(API_URL + 'setlang',{\r\n        lang,\r\n        username}\r\n      , httpOptions);\r\n  }\r\n\r\n  getLanguage(username: string): Observable<any> {\r\n    return this.http.post(API_URL + 'getlang',{\r\n        username}\r\n      , httpOptions);\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n\r\n  getAccountDetails(): Observable<any> {\r\n    return this.http.get(API_URL + 'getaccountdetails', { responseType: 'text' });\r\n  }\r\n\r\n  eraseUser(username: string, password: string): Observable<any> {\r\n    return this.http.post(API_URL + 'eraseuser', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "DynamicCompDirective",
            "id": "directive-DynamicCompDirective-1d25db858b6ea84ca0f9e3c6109af07f9d0743e057caa2f8490ada3b68cf8ee97f5468e6a513c9fe206d37199d83fbbad17569c11c8a2ec78a83c15acc75e0a6",
            "file": "src/stories/directive/dynamic-comp.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDynamicComp]'\r\n})\r\nexport class DynamicCompDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n\r\n}\r\n",
            "selector": "[appDynamicComp]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "viewContainerRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "PopoverInputDirective",
            "id": "directive-PopoverInputDirective-48cd9ca6480c697857be20dc7a14096c03782d0a46623c58a9dfb452591034b4db08dbb4e6f1431d99e316f1a035d1ece6f31d36b435f3937dc7a06502f36003",
            "file": "src/stories/directive/bubble-input/popover-input.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleInputComponent} from \"./bubble-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n@Directive({\r\n  selector: '[inputPopover]',\r\n})\r\nexport class PopoverInputDirective {\r\n  @Input(\"inputPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleInputComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('keydown', ['$event']) handleKeyboardEvent(event: KeyboardEvent) {\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    if (event.key != \"Tab\") this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) handleKeyboardUpEvent(event: KeyboardEvent) {\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    if (event.key != \"Tab\") this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('focusin', ['$event']) onFocus($event: any) {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('focusout', ['$event']) onFocusout($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() data?: ActionInput[] | undefined;\r\n  @Input() header?: string = '';\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleInputComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.data = this.data;\r\n    comp.instance.header = this.header;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n  }\r\n\r\n}\r\n",
            "selector": "[inputPopover]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "ActionInput[] | undefined",
                    "decorators": []
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "highlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inputPopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "PopoverOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31
                },
                {
                    "name": "focusin",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46
                },
                {
                    "name": "focusout",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50
                },
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36
                },
                {
                    "name": "keyup",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27
                },
                {
                    "name": "mouseover",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "propertiesClass": [
                {
                    "name": "popoverComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<BubbleInputComponent>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "handleKeyboardEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keydown', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyboardUpEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keyup', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focusin', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocusout",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focusout', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLeave",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseover', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "eleRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "eleRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "PopoverLanguageDirective",
            "id": "directive-PopoverLanguageDirective-7e07ca7559959846aa2cc6ecb68eb696e8255e0afa92ab6757fa7603d0c7bfe559be404b6b04b05306cae8853fa490d89ae55f5bea4bb9e138b1eb0843176529",
            "file": "src/stories/directive/bubble-language/popover-language.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef, EventEmitter,\r\n  HostListener,\r\n  Input, Output,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleLanguageComponent} from \"./bubble-language.component\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n@Directive({\r\n  selector: '[languagePopover]',\r\n})\r\nexport class PopoverLanguageDirective {\r\n  @Input(\"languagePopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleLanguageComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() header: string = '';\r\n  @Input() bubbleOn: boolean = false;\r\n  @Input() _translate?: TranslateService;\r\n  @Output() actionLanguage: EventEmitter<any> = new EventEmitter<any> ();\r\n  @Output() languageButton: EventEmitter<any> = new EventEmitter<any> ();\r\n\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleLanguageComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.header = this.header;\r\n    comp.instance.bubbleOn = this.bubbleOn;\r\n    comp.instance._translate = this._translate;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n\r\n    comp.instance.actionLanguage.subscribe(($event: any) => {\r\n      this.actionLanguage.emit($event);\r\n    });\r\n  }\r\n\r\n}\r\n",
            "selector": "[languagePopover]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "TranslateService",
                    "decorators": []
                },
                {
                    "name": "bubbleOn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "highlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "languagePopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "PopoverOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionLanguage",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "languageButton",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter<any>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28
                },
                {
                    "name": "mouseover",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "propertiesClass": [
                {
                    "name": "popoverComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<BubbleLanguageComponent>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLeave",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseOver",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseover', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "eleRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "eleRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TranslateService",
            "id": "directive-TranslateService-967771cfc8c922ca7d6dde323ca726e3b8f52a25b409c76293225af224a61f737cdedd58a602ee9475029a129b9559b8fe89436ca222ffb069647858e23e8bcf",
            "file": "src/stories/pipes/translate/translate.service.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, Inject, Component, Directive, InjectionToken, Type, OnInit} from \"@angular/core\";\r\nimport {AppConfig} from \"../../../app/app.config\";\r\n//import {TokenStorageService} from \"src/app/_services/token-storage.service\";\r\n//import {translateRememberLangComponent,/* TRANSLATION_PROVIDERS, TRANSLATIONS*/} from \"src/app/pipes/remember-lang/remember-lang.component\";\r\n//import {translateRememberIangComponent} from \"./translate-remember-lang/translations.component\";\r\n\r\nexport const TRANSLATIONS = new InjectionToken<any>('translations', {\r\n  providedIn: 'root',\r\n  factory: () => sessionStorage\r\n});\r\nexport const LANG_ENG_NAME = 'eng';\r\nexport const LANG_ENG_TRANS = {\r\n  \"Example\"                                                            :   \"Example\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"A registry process should be made!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Something went wrong!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Something went wrong!\",\r\n  \"Bad credentials\"                                                    :   \"Incorrect user name or password\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Try again with a password you haven`t used before\",\r\n  \"Passwords do not match!\"                                            :   \"Passwords do not match\",\r\n  \"Incorrect current password\"                                         :   \"Current password is incorrect\",\r\n  \"Something went wrong\"                                               :   \"Something went wrong!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email is already in use!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"The Verification Code does not match\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Unable to save your changes\",\r\n  \"User account is locked\"                                             :   \"Your account has been locked\",\r\n  \"size must be between 2 and 20\"                                      :   \"Enter a value between 2 to 20 characters long\",\r\n  \"Unknown User\"                                                       :   \"Unknown User\",\r\n  \"Details Saved\"                                                      :   \"Your account has been locked\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Password matches one of 4 previous passwords.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Password must contain 1 or more special characters.\",\r\n  \"* your phone number has been updated\"                               :   \"* Your phone number has been updated\",\r\n  \"* your email address has been updated\"                              :   \"* Your email address has been updated\",\r\n  \"Error: Your changes could not be saved\"                             :   'Error: Your changes could not be saved',\r\n\r\n  \"Reset Password\"                                                     :   \"Reset Password\",\r\n  \"Send me a temporary password once again\"                            :   \"Send me a temporary password once again\",\r\n  \"A new temporary password has been sent to\"                          :   \"A new temporary password has been sent to\",\r\n  \"your email address\"                                                 :   \"your email address\",\r\n  \"3 Days to expire\"                                                   :   \"3 Days to expire\",\r\n  \"A minimum of 8 characters\"                                          :   \"A minimum of 8 characters\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"At least 1 Uppercase letters\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"At least 1 Lowercase letters\",\r\n  \"A number\"                                                           :   \"A number\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No more than 2 adjacent identical characters\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"Admin\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"Agent\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CHANGE PASSWORD\",\r\n  \"Change Password\"                                                    :   \"Change Password\",\r\n  \"Change Password and Login\"                                          :   \"Change Password and Login\",\r\n  \"Change it now >\"                                                    :   \"Change it now >\",\r\n  \"Change the Initial Password\"                                        :   \"Change the Initial Password\",\r\n  \"Chinese\"                                                            :   \"Chinese\",\r\n  \"Complete Registration\"                                              :   \"Complete Registration\",\r\n  \"Continue\"                                                           :   \"Continue\",\r\n  \"EMAIL\"                                                              :   \"Email\",\r\n  \"Enable Profile Picture\"                                             :   \"Enable Profile Picture\",\r\n  \"English\"                                                            :   \"English\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                 :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"FORGOT PASSWORD\",\r\n  \"Forgot Password?\"                                                   :   \"Forgot Password?\",\r\n  \"Script-Designer\"                                                    :   \"Script Designer\",\r\n  \"Hebrew\"                                                             :   \"Hebrew\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"password\",\r\n  \"LOGIN SCREEN\"                                                       :   \"LOGIN SCREEN\",\r\n  \"Log out\"                                                            :   \"Log out\",\r\n  \"Login\"                                                              :   \"Login\",\r\n  \"My Account\"                                                         :   \"My Account\",\r\n  \"NEW PASSWORD\"                                                       :   \"NEW Password\",\r\n  \"OLD PASSWORD\"                                                       :   \"OLD PASSWORD\",\r\n  \"PASSWORD\"                                                           :   \"Password\",\r\n  \"Please enter the Verification Code\"                                 :   \"Please enter the Verification Code\",\r\n  \"you received in your mail:\"                                         :   \"you received in your mail:\",\r\n  \"Please enter your User Name:\"                                       :   \"Please enter your User Name:\",\r\n  \"Send Verification Code again\"                                       :   \"Send Verification Code again\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRATION\",\r\n  \"Russian\"                                                            :   \"Russian\",\r\n  \"Send me a Verification Code\"                                        :   \"Send me a Verification Code\",\r\n  \"Send me a Temporary Password\"                                       :   \"Send me a Temporary Password\",\r\n  \"Spanish\"                                                            :   \"Spanish\",\r\n  \"The password must contain:\"                                         :   \"The password must contain:\",\r\n  \"USER DETAILS\"                                                       :   \"USER DETAILS\",\r\n  \"USER NAME\"                                                          :   \"USERNAME\",\r\n  \"WebRT\"                                                              :   \"Real-Time Reports\",\r\n  \"You have successfully changed your password!\"                       :   \"You have successfully changed your password!\",\r\n  \"You have successfully completed your registration!\"                 :   \"You have successfully completed your registration!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Your password has expired and must be changed\",\r\n  \"Your password will expire in \"                                      :   \"Your password will expire in \",\r\n  \" Days.\"                                                             :   \" Days.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete the registration by filling the missing info:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"PHONE NUMBER FOR AUTHENTICATION\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-enter new Password\",\r\n  \"resend the verification code\"                                       :   \"resend the verification code\",\r\n  \"Strength : \"                                                        :   \"Strength : \",\r\n  \"Must contain phone:\"                                                :   \"Must contain phone:\",\r\n  \"A well-formed phone number\"                                         :   \"A well-formed phone number\",\r\n  \"Must contain email:\"                                                :   \"Must contain email:\",\r\n  \"A well-formed email address\"                                        :   \"A well-formed email address\",\r\n  \"Successfully sent\"                                                  :   \"Successfully sent\",\r\n  \"Sending failed!\"                                                    :   \"Sending failed!\",\r\n  \"Back\"                                                               :   \"Back\",\r\n\r\n};\r\nexport const LANG_HEB_NAME = 'heb';\r\nexport const LANG_HEB_TRANS = {\r\n  \"Example\"                                                            :   \"דוגמא\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"יש להשלים תהליך רישום\",\r\n  \"Error: Something went wrong!\"                                       :   \"!משהו השתבש\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"תהליך רישום לא תקין\",\r\n  \"Bad credentials\"                                                    :   \"שם משתמש או סיסמא שגויים\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"בחר סיסמא חדשה שלא הייתה בשימוש\",\r\n  \"Passwords do not match!\"                                            :   \"'הקפד להזין סיסמאות זהות בשדות 'סיסמה חדשה' ו'אימות סיסמה\",\r\n  \"Incorrect current password\"                                         :   \"סיסמה נוכחית שגויה\",\r\n  \"Something went wrong\"                                               :   \"!משהו השתבש\",\r\n  \"Error: Email is already in use!\"                                    :   'כתובת דוא\"ל נמצאת בשימוש אצל משתמש קיים',\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"קוד אימות שגוי\",\r\n  \"Error: Unable to save your changes\"                                 :   \"לא ניתן לשמור את השינויים\",\r\n  \"User account is locked\"                                             :   \"חשבונך ננעל\",\r\n  \"size must be between 2 and 20\"                                      :   \"יש להזין ערך המכיל בין 2 ל-20 תווים\",\r\n  \"Unknown User\"                                                       :   \"המשתמש אינו מוכר למערכת\",\r\n  \"Details Saved\"                                                      :   \"חשבונך ננעל\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"הסיסמה תואמת לאחת מ-4 סיסמאות קודמות\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"הסיסמה חייבת להכיל 1 או יותר תווים בהצלחה מיוחדים\",\r\n  \"* your phone number has been updated\"                               :   \"* מספר הטלפון שלך עודכן בהצלחה\",\r\n  \"* your email address has been updated\"                              :   '* כתובת הדוא\"ל שלך עודכן בהצלחה',\r\n  \"Error: Your changes could not be saved\"                             :   'שגיאה: השינויים שהזנת אינם נשמרו',\r\n\r\n  \"Reset Password\"                                                     :   \"איפוס סיסמה\",\r\n  \"Send me a temporary password once again\"                            :   \"שלח לי שוב סיסמה זמנית\",\r\n  \"A new temporary password has been sent to\"                          :   \"סיסמה זמנית חדשה נשלחה אל\",\r\n  \"your email address\"                                                 :   \"כתובת הדוא\\\"ל שלך\",\r\n  \"% Days to expire\"                                                   :   \"בעוד % ימים יפוג תוקף הסיסמה\",\r\n  \" A minimum of 8 characters\"                                         :   \"מינימום 8 ספרות\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"לפחות אות אחת גדולה\",\r\n  \" At least 1 lowercase letters\"                                      :   \"לפחות אות אחת קטנה\",\r\n  \" At least 1 special character\"                                      :   \"לפחות תו מיוחד אחד\",\r\n  \" A number\"                                                          :   \"מספר\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \"לא יותר מ-2 תווים עוקבים זהים\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"אדמיניסטרציה\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"נציג\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password and Login\"                                          :   \"שנה סיסמה והיכנס\",\r\n  \"Change it now >\"                                                    :   \" <שנה עכשיו\",\r\n  \"Change the Initial Password\"                                        :   \"שנה את הסיסמה הראשונית\",\r\n  \"Chinese\"                                                            :   \"סינית\",\r\n  \"Complete Registration\"                                              :   \"השלם תהליך רישום\",\r\n  \"Continue\"                                                           :   \"המשך\",\r\n  \"EMAIL\"                                                              :   'כתובת דוא\"ל',\r\n  \"Enable Profile Picture\"                                             :   \"אפשר תמונת פרופיל\",\r\n  \"English\"                                                            :   \"אנגלית\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"שכחתי סיסמה\",\r\n  \"Forgot Password?\"                                                   :   \"שכחתי סיסמה\",\r\n  \"Script-Designer\"                                                    :   \"עורך תסריטים\",\r\n  \"Hebrew\"                                                             :   \"עברית\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"סיסמה ראשונית\",\r\n  \"LOGIN SCREEN\"                                                       :   \"מסך כניסה\",\r\n  \"Log out\"                                                            :   \"יציאה\",\r\n  \"Login\"                                                              :   \"כניסה\",\r\n  \"My Account\"                                                         :   \"החשבון שלי\",\r\n  \"NEW PASSWORD\"                                                       :   \"סיסמה חדשה\",\r\n  \"OLD PASSWORD\"                                                       :   \"סיסמה ישנה\",\r\n  \"PASSWORD\"                                                           :   \"סיסמה\",\r\n  \"Please enter the Verification Code\"                                 :   \"אנא הקלד את קוד האימות\",\r\n  \"you received in your mail:\"                                         :   'שקיבלת בדוא\"ל',\r\n  \"Please enter your User Name:\"                                       :   \"אנא הקלד את שם המשתמש שלך\",\r\n  \"Send Verification Code again\"                                       :   \"שלח קוד אימות חדש\",\r\n  \"REGISTRATION\"                                                       :   \"רישום\",\r\n  \"Russian\"                                                            :   \"רוסית\",\r\n  \"Send me a Verification Code\"                                        :   \"שלח לי קוד אימות\",\r\n  \"Send me a Temporary Password\"                                       :   \"שלח לי סיסמה זמנית\",\r\n  \"Spanish\"                                                            :   \"ספרדית\",\r\n  \"The password must contain:\"                                         :   \"על הסיסמה לכלול:\",\r\n  \"USER DETAILS\"                                                       :   \"פרטי משתמש\",\r\n  \"USER NAME\"                                                          :   \"שם משתמש\",\r\n  \"WebRT\"                                                              :   \"דוחות זמן אמת\",\r\n  \"You have successfully changed your password!\"                       :   \"סיסמתך שונתה בהצלחה\",\r\n  \"You have successfully completed your registration!\"                 :   \"תהליך הרישום הסתיים בהצלחה\",\r\n  \"Your password has expired and must be changed\"                      :   \"פג תוקף סיסמתך. עליך לשנותה\",\r\n  \"Your password will expire in \"                                      :   \"תוקף סיסמתך יפוג בתוך \",\r\n  \" Days.\"                                                             :   \" ימים\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"הקלד את המידע הבא לצורך השלמת תהליך הרישום\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"מספר טלפון לאימות\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"האימות סיסמה\",\r\n  \"resend the verification code\"                                       :   \"שלח שוב קוד אימות\",\r\n  \"Strength : \"                                                        :   \"חוזק : \",\r\n  \"Must contain phone:\"                                                :   \"חייב לכלול מספר טלפון\",\r\n  \" A well-formed phone number\"                                        :   \"מספר טלפון תקני\",\r\n  \"Must contain email:\"                                                :   'חייב לכלול כתובת דוא\"ל',\r\n  \" A well-formed email address\"                                       :   'כתובת דוא\"ל תקנית',\r\n  \"Settings\"                                                           :   'הגדרות',\r\n  \"Successfully sent\"                                                  :   \"נשלח בהצלחה\",\r\n  \"Sending failed!\"                                                    :   \"!שליחה נכשלה\",\r\n  \"Back\"                                                               :   \"חזור\",\r\n\r\n};\r\nexport const LANG_ESP_NAME = 'esp';\r\nexport const LANG_ESP_TRANS = {\r\n  \"Example\"                                                            :   \"Ejemplo\",\r\n  \"must be a well-formed email address\"                                :   \"debe ser una dirección de correo electrónica bien formada\",\r\n  \"Error: A registry process should be made!\"                          :   \"¡Se debe completar un proceso de registro!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Algo salió mal!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"¡El proceso de registro no válido!\",\r\n  \"Bad credentials\"                                                    :   \"Usuario o contraseña incorrecta\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Vuelve a intentarlo con una contraseña que no hayas usado antes\",\r\n  \"Passwords do not match!\"                                            :   \"¡Las contraseñas no coinciden\",\r\n  \"Incorrect current password\"                                         :   \"Contraseña actual incorrecta\",\r\n  \"Something went wrong\"                                               :   \"Algo salió mal!\",\r\n  \"Error: Email is already in use!\"                                    :   \"¡Correo electrónico ya está en uso!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"El código de verificación no coincide\",\r\n  \"Error: Unable to save your changes\"                                 :   \"No se pueden guardar los cambios\",\r\n  \"User account is locked\"                                             :   \"Su cuenta ha sido bloqueada\",\r\n  \"size must be between 2 and 20\"                                      :   \"Ingrese un valor entre 2 y 20 caracteres de largo\",\r\n  \"Unknown User\"                                                       :   \"Usuario Desconocido\",\r\n  \"Details Saved\"                                                      :   \"Su cuenta ha sido bloqueada\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"La contraseña coincide con una de las 4 contraseñas anteriores.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"La contraseña debe contener 1 o más caracteres especiales.\",\r\n  \"* your phone number has been updated\"                               :   \"* Su número de teléfono ha sido actualizado\",\r\n  \"* your email address has been updated\"                              :   \"* Su dirección de correo electrónico ha sido actualizada\",\r\n\r\n  \"Reset Password\"                                                     :   \"Restablecer la contraseña\",\r\n  \"Send me a reset password once again\"                                :   \"Envíame un contraseña temporal una vez más\",\r\n  \"A new temporary password has been sent to\"                          :   \"Se ha enviado una nueva contraseña temporal a\",\r\n  \"your email address\"                                                 :   \"Su dirección de correo electrónico\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \" A minimum of 8 characters\"                                         :   \"Un mínimo de 8 caracteres\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"Al menos 1 letras mayúsculas\",\r\n  \" At least 1 lowercase letters\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" At least 1 special character\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" A number\"                                                          :   \"Un número\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No más de 2 caracteres consecutivos idénticos\",\r\n  \"APP CENTER\"                                                         :   \"CENTRO DE APLICACIONES\",\r\n  \"Admin\"                                                              :   \"Administrador\",\r\n  \"Aeonix App Center\"                                                  :   \"Centro de aplicaciones Aeonix\",\r\n  \"Agent\"                                                              :   \"Agente\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CAMBIAR LA CONTRASEÑA\",\r\n  \"Change Password\"                                                    :   \"Cambiar la contraseña\",\r\n  \"Change Password and Login\"                                          :   \"Cambiar contraseña e iniciar sesión\",\r\n  \"Change it now >\"                                                    :   \"Cámbialo ahora >\",\r\n  \"Change the Initial Password\"                                        :   \"Cambiar la contraseña inicial\",\r\n  \"Chinese\"                                                            :   \"Chino\",\r\n  \"Complete Registration\"                                              :   \"Registracion completa\",\r\n  \"Continue\"                                                           :   \"Continuar\",\r\n  \"EMAIL\"                                                              :   \"Correo electrónico\",\r\n  \"Enable Profile Picture\"                                             :   \"Habilitar imagen de perfil\",\r\n  \"English\"                                                            :   \"Inglés\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ej. Saúl Ramírez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ej: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ej: abc@ejemplo.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"HAS OLVIDADO TU CONTRASEÑA\",\r\n  \"Forgot Password?\"                                                   :   \"¿Has olvidado tu contraseña?\",\r\n  \"Script-Designer\"                                                    :   \"Diseñador de guiones\",\r\n  \"Hebrew\"                                                             :   \"Hebreo\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"Contraseña inicial\",\r\n  \"LOGIN SCREEN\"                                                       :   \"PANTALLA DE INGRESO AL SISTEMA\",\r\n  \"Log out\"                                                            :   \"Cerrar sesión\",\r\n  \"Login\"                                                              :   \"Iniciar sesión\",\r\n  \"My Account\"                                                         :   \"Mi cuenta\",\r\n  \"NEW PASSWORD\"                                                       :   \"Nueva contraseña\",\r\n  \"OLD PASSWORD\"                                                       :   \"CONTRASEÑA ANTERIOR\",\r\n  \"PASSWORD\"                                                           :   \"Contraseña\",\r\n  \"Please enter the Verification Code\"                                 :   \"Porfavor ingrese el codigo de verificacion\",\r\n  \"you received in your mail:\"                                         :   \"Lo recibiste en tu correo:\",\r\n  \"Please enter your User Name:\"                                       :   \"Por favor, ingrese su usuario:\",\r\n  \"Send Verification Code again\"                                       :   \"Enviar código de verificación de nuevo\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRACION\",\r\n  \"Russian\"                                                            :   \"Ruso\",\r\n  \"Send me a Verification Code\"                                        :   \"Envíame un código de verificación\",\r\n  \"Send me a Temporary Password\"                                       :   \"Envíame un contraseña temporal\",\r\n  \"Spanish\"                                                            :   \"Español\",\r\n  \"The password must contain:\"                                         :   \"La contraseña debe contener:\",\r\n  \"USER DETAILS\"                                                       :   \"DETALLES DE USUARIO\",\r\n  \"USER NAME\"                                                          :   \"USUARIO\",\r\n  \"WebRT\"                                                              :   \"WebRT\",\r\n  \"You have successfully changed your password!\"                       :   \"¡Has cambiado satisfactoriamente tu contraseña!\",\r\n  \"You have successfully completed your registration!\"                 :   \"¡Has completado con éxito tu registro!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Su contraseña ha expirado y debe cambiarse\",\r\n  \"Your password will expire in \"                                      :   \"Su contraseña expíra en \",\r\n  \" Days.\"                                                             :   \" días.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete el registro llenando la siguiente información:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"NÚMERO DE TELÉFONO PARA AUTENTICACIÓN\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-ingrese nueva contraseña\",\r\n  \"resend the verification code\"                                       :   \"reenviar el código de verificación\",\r\n  \"Strength : \"                                                        :   \"fortaleza : \",\r\n  \"Must contain phone:\"                                                :   \"Debe contener número de teléfono:\",\r\n  \"A well-formed phone number\"                                         :   \"Un número de teléfono bien formado\",\r\n  \"Must contain email:\"                                                :   \"Debe contener correo electrónico:\",\r\n  \"A well-formed email address\"                                        :   \"Una dirección de correo electrónico bien formada\",\r\n  \"Successfully sent\"                                                  :   \"Enviado exitosamente\",\r\n  \"Sending failed!\"                                                    :   \"¡Envío fallido!\",\r\n  \"Back\"                                                               :   \"Atrás\",\r\n};\r\nexport const LANG_CHI_NAME = 'chi';\r\nexport const LANG_CHI_TRANS = {\r\n  \"Example\"                                                            :   \"例如\",\r\n  \"must be a well-formed email address\"                                :   \"请输入正确的邮箱地址\",\r\n  \"Error: A registry process should be made!\"                          :   \"应该先完成注册！\",\r\n  \"Error: Something went wrong!\"                                       :   \"出了些问题！\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"注册无效！\",\r\n  \"Bad credentials\"                                                    :   \"用户名或密码有误\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"请用一个以前没用过的密码再试一次\",\r\n  \"Passwords do not match!\"                                            :   \"密码不符\",\r\n  \"Incorrect current password\"                                         :   \"当前密码不正确\",\r\n  \"Something went wrong\"                                               :   \"出了些问题！\",\r\n  \"Error: Email is already in use!\"                                    :   \"此邮箱已被使用！\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"验证码不符\",\r\n  \"Error: Unable to save your changes\"                                 :   \"无法保存修改的内容\",\r\n  \"User account is locked\"                                             :   \"您的账号已被锁定\",\r\n  \"size must be between 2 and 20\"                                      :   \"输入 2 到 20 个字符长的值\",\r\n  \"Unknown User\"                                                       :   \"输入 2 到 20 个字符长的值\",\r\n  \"Details Saved\"                                                      :   \"您的账号已被锁定\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"密码与之前 4 个密码中的一个相匹配。\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"密码必须包含 1 个或多个特殊字符。\",\r\n  \"* your phone number has been updated\"                               :   \"*您的电话号码已更新\",\r\n  \"* your email address has been updated\"                              :   \"*您的电子邮件地址已更新\",\r\n\r\n  \"Reset Password\"                                                     :   \"重设密码\",\r\n  \"Send me a temporary password once again\"                            :   \"再次向我发送临时密码\",\r\n  \"A new temporary password has been sent to\"                          :   \"新的临时密码已发送至\",\r\n  \"your email address\"                                                 :   \"您的电子邮件地址\",\r\n  \"3 Days to expire\"                                                   :   \"三天后到期\",\r\n  \" A minimum of 8 characters\"                                         :   \"至少包含8个字符\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"至少包含1个大写字母\",\r\n  \" At least 1 lowercase letters\"                                      :   \"至少包含1个小写字母\",\r\n  \" At least 1 special character\"                                      :   \"至少包含1个特殊字符\",\r\n  \" A number\"                                                          :   \"一个数字\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" 不超过 2 个相同的连续字符\",\r\n  \"APP CENTER\"                                                         :   \"应用中心\",\r\n  \"Admin\"                                                              :   \"管理员\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix 应用中心\",\r\n  \"Agent\"                                                              :   \"坐席\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"修改密码\",\r\n  \"Change Password\"                                                    :   \"修改密码\",\r\n  \"Change Password and Login\"                                          :   \"修改密码然后登录\",\r\n  \"Change it now >\"                                                    :   \"立即修改>\",\r\n  \"Change the Initial Password\"                                        :   \"修改初始密码\",\r\n  \"Chinese\"                                                            :   \"中文\",\r\n  \"Complete Registration\"                                              :   \"完成注册\",\r\n  \"Continue\"                                                           :   \"继续\",\r\n  \"EMAIL\"                                                              :   \"电子邮件\",\r\n  \"Enable Profile Picture\"                                             :   \"使用个人资料图片\",\r\n  \"English\"                                                            :   \"英语\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"例如：Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"例如：+972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"例如：abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"忘记密码\",\r\n  \"Forgot Password?\"                                                   :   \"忘记密码？\",\r\n  \"Script-Designer\"                                                    :   \"脚本设计器\",\r\n  \"Hebrew\"                                                             :   \"希伯来语\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"初始密码\",\r\n  \"LOGIN SCREEN\"                                                       :   \"登录界面\",\r\n  \"Log out\"                                                            :   \"注销\",\r\n  \"Login\"                                                              :   \"登录\",\r\n  \"My Account\"                                                         :   \"我的账户\",\r\n  \"NEW PASSWORD\"                                                       :   \"新密码\",\r\n  \"OLD PASSWORD\"                                                       :   \"旧密码\",\r\n  \"PASSWORD\"                                                           :   \"密码\",\r\n  \"Please enter the Verification Code\"                                 :   \"请输入验证码\",\r\n  \"you received in your mail:\"                                         :   \"你在邮件中收到的：\",\r\n  \"Please enter your User Name:\"                                       :   \"请输入你的用户名：\",\r\n  \"Send Verification Code again\"                                       :   \"再次发送验证码\",\r\n  \"REGISTRATION\"                                                       :   \"注册\",\r\n  \"Russian\"                                                            :   \"俄语\",\r\n  \"Send me a Verification Code\"                                        :   \"给我发送验证码\",\r\n  \"Send me a Temporary Password\"                                       :   \"给我临时密码\",\r\n  \"Spanish\"                                                            :   \"西班牙语\",\r\n  \"The password must contain:\"                                         :   \"密码必须包含：\",\r\n  \"USER DETAILS\"                                                       :   \"用户信息\",\r\n  \"USER NAME\"                                                          :   \"用户名\",\r\n  \"WebRT\"                                                              :   \"实时报告\",\r\n  \"You have successfully changed your password!\"                       :   \"您已成功修改密码！\",\r\n  \"You have successfully completed your registration!\"                 :   \"您已成功完成注册！\",\r\n  \"Your password has expired and must be changed\"                      :   \"您的密码已过期，必须修改\",\r\n  \"Your password will expire in \"                                      :   \"您的密码将在\",\r\n  \" Days.\"                                                             :   \"天后过期。\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"通过填写以下信息完成注册：\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"输入电话号码进行验证\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"重新输入新密码\",\r\n  \"resend the verification code\"                                       :   \"重新发送验证码\",\r\n  \"Strength : \"                                                        :   \"强度 : \",\r\n  \"Must contain phone:\"                                                :   \"必须包含电话：\",\r\n  \"A well-formed phone number\"                                         :   \"一个正确的电话号码\",\r\n  \"Must contain email:\"                                                :   \"必须包含电邮地址：\",\r\n  \"A well-formed email address\"                                        :   \"一个正确的电子邮件地址\",\r\n  \"Successfully sent\"                                                  :   \"发送成功\",\r\n  \"Sending failed!\"                                                    :   \"发送失败！\",\r\n  \"Back\"                                                               :   \"后退\",\r\n};\r\nexport const LANG_RUS_NAME = 'rus';\r\nexport const LANG_RUS_TRANS = {\r\n  \"Example\"                                                            :   \"Пример\",\r\n  \"must be a well-formed email address\"                                :   \"должен быть корректно оформленным адресом электронной почты\",\r\n  \"Error: A registry process should be made!\"                          :   \"Должен быть проведен процесс регистрации!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Что-то пошло не так!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Процесс реестра недействителен!\",\r\n  \"Bad credentials\"                                                    :   \"Неверное имя пользователя или пароль\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Попробуйте еще раз с паролем, который вы раньше не использовали\",\r\n  \"Passwords do not match!\"                                            :   \"Пароли не совпадают\",\r\n  \"Incorrect current password\"                                         :   \"Неверный текущий пароль\",\r\n  \"Something went wrong\"                                               :   \"Что-то пошло не так!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email уже используется!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"Код подтверждения не совпадает\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Не удалось сохранить изменения\",\r\n  \"User account is locked\"                                             :   \"Ваш аккаунт заблокирован\",\r\n  \"size must be between 2 and 20\"                                      :   \"Введите значение длиной от 2 до 20 символов.\",\r\n  \"Unknown User\"                                                       :   \"Неизвестный пользователь\",\r\n  \"Details Saved\"                                                      :   \"Ваш аккаунт заблокирован\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Пароль совпадает с одним из 4 предыдущих паролей.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Пароль должен содержать 1 или более специальных символов.\",\r\n  \"* your phone number has been updated\"                               :   \"* Ваш номер телефона был обновлен\",\r\n  \"* your email address has been updated\"                              :   \"* Ваш адрес электронной почты был обновлен\",\r\n\r\n\r\n  \"Reset Password\"                                                     :   \"Сброс пароля\",\r\n  \"Send me a temporary password once again\"                            :   \"Отправьте мне временный пароль еще раз\",\r\n  \"A new temporary password has been sent to\"                          :   \"Новый временный пароль был отправлен на\",\r\n  \"your email address\"                                                 :   \"ваш адрес электронной почты\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \"A minimum of 8 characters\"                                          :   \"Минимум 8 символов\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"Минимум 1 заглавная буква\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"Минимум 1 строчная буква\",\r\n  \"A number\"                                                           :   \"Число\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" Не более 2 одинаковых последовательных символов\",\r\n  \"APP CENTER\"                                                         :   \"ЦЕНТР ПРИЛОЖЕНИЙ\",\r\n  \"Admin\"                                                              :   \"Админ\",\r\n  \"Aeonix App Center\"                                                  :   \"Центр приложений Aeonix\",\r\n  \"Agent\"                                                              :   \"Агент\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"ИЗМЕНИТЬ ПАРОЛЬ\",\r\n  \"Change Password\"                                                    :   \"Изменить пароль\",\r\n  \"Change Password and Login\"                                          :   \"Изменить пароль и логин\",\r\n  \"Change it now >\"                                                    :   \"Измените его сейчас >\",\r\n  \"Change the Initial Password\"                                        :   \"Изменить начальный пароль\",\r\n  \"Chinese\"                                                            :   \"Китайский язык\",\r\n  \"Complete Registration\"                                              :   \"Завершите регистрацию\",\r\n  \"Continue\"                                                           :   \"Продолжать\",\r\n  \"EMAIL\"                                                              :   \"Электронная почта\",\r\n  \"Enable Profile Picture\"                                             :   \"Включить изображение профиля\",\r\n  \"English\"                                                            :   \"Английский\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Бывший. Саул Рамирес\",\r\n  \"Ex: +972547762084\"                                                  :   \"Пример: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Пример: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"ЗАБЫЛИ ПАРОЛЬ\",\r\n  \"Forgot Password?\"                                                   :   \"Забыли пароль?\",\r\n  \"Script-Designer\"                                                    :   \"Сценарист\",\r\n  \"Hebrew\"                                                             :   \"Иврит\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"пароль\",\r\n  \"LOGIN SCREEN\"                                                       :   \"ЭКРАН ВХОДА\",\r\n  \"Log out\"                                                            :   \"Выйти\",\r\n  \"Login\"                                                              :   \"Авторизоваться\",\r\n  \"My Account\"                                                         :   \"Мой счет\",\r\n  \"NEW PASSWORD\"                                                       :   \"Новый пароль\",\r\n  \"OLD PASSWORD\"                                                       :   \"СТАРЫЙ ПАРОЛЬ\",\r\n  \"PASSWORD\"                                                           :   \"Пароль\",\r\n  \"Please enter the Verification Code\"                                 :   \"Пожалуйста, введите проверочный код\",\r\n  \"you received in your mail:\"                                         :   \"вы получили на почту:\",\r\n  \"Please enter your User Name:\"                                       :   \"Пожалуйста, введите Ваш логин:\",\r\n  \"Send Verification Code again\"                                       :   \"Отправить код подтверждения еще раз\",\r\n  \"REGISTRATION\"                                                       :   \"ПОСТАНОВКА НА УЧЕТ\",\r\n  \"Russian\"                                                            :   \"Русский\",\r\n  \"Send me a Verification Code\"                                        :   \"Пришлите мне код подтверждения\",\r\n  \"Send me a Temporary Password\"                                       :   \"Пришлите мне временный пароль\",\r\n  \"Spanish\"                                                            :   \"Испанский язык\",\r\n  \"The password must contain:\"                                         :   \"Пароль должен содержать:\",\r\n  \"USER DETAILS\"                                                       :   \"ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"USER NAME\"                                                          :   \"ИМЯ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"WebRT\"                                                              :   \"ВебРТ\",\r\n  \"You have successfully changed your password!\"                       :   \"Вы успешно изменили ваш пароль!\",\r\n  \"You have successfully completed your registration!\"                 :   \"Вы успешно завершили регистрацию!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Срок действия вашего пароля истек, и его необходимо изменить\",\r\n  \"Your password will expire in \"                                      :   \"Срок действия вашего пароля истечет через \",\r\n  \" Days.\"                                                             :   \"  Дни.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Завершите регистрацию, заполнив недостающую информацию:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"НОМЕР ТЕЛЕФОНА ДЛЯ АУТЕНТИФИКАЦИИ\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"Повторно введите новый пароль\",\r\n  \"resend the verification code\"                                       :   \"повторно отправить код подтверждения\",\r\n  \"Strength : \"                                                        :   \"Сила : \",\r\n  \"Must contain phone:\"                                                :   \"Должен содержать телефон:\",\r\n  \"A well-formed phone number\"                                         :   \"Правильно сформированный номер телефона\",\r\n  \"Must contain email:\"                                                :   \"Должен содержать электронную почту:\",\r\n  \"A well-formed email address\"                                        :   \"Правильно сформированный адрес электронной почты\",\r\n  \"Successfully sent\"                                                  :   \"Успешно отправлено\",\r\n  \"Sending failed!\"                                                    :   \"Отправка не удалась!\",\r\n  \"Back\"                                                               :   \"Назад\",\r\n\r\n};\r\n\r\n\r\n\r\nexport declare type Direction = 'ltr' | 'rtl';\r\nexport const dictionary = {\r\n  [LANG_ENG_NAME]: {dir: 'ltr', trans: LANG_ENG_TRANS},\r\n  [LANG_HEB_NAME]: {dir: 'rtl', trans: LANG_HEB_TRANS},\r\n  [LANG_ESP_NAME]: {dir: 'ltr', trans: LANG_ESP_TRANS},\r\n  [LANG_CHI_NAME]: {dir: 'ltr', trans: LANG_CHI_TRANS},\r\n  [LANG_RUS_NAME]: {dir: 'ltr', trans: LANG_RUS_TRANS},\r\n\r\n};\r\nexport const TRANSLATION_PROVIDERS = [\r\n  { provide: TRANSLATIONS, useValue: dictionary },\r\n];\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@Directive({\r\n  selector: 'translate',\r\n})\r\nexport class TranslateService implements OnInit {\r\n  private _currentLang: string = AppConfig.translateLanguage.lang;\r\n  private _currentDir: Direction = 'ltr';\r\n  public get currentLang() {\r\n    return this._currentLang;\r\n  }\r\n\r\n  public get currentDir(): Direction {\r\n    //console.log(\"this.currentLang:\" + this._currentLang)\r\n    return this._currentDir;\r\n  }\r\n\r\n  constructor(@Inject(TRANSLATIONS) private _translations: any,\r\n              /*private translations: translateRememberLangComponent,\r\n              private tokenService: TokenStorageService*/) {\r\n    //this.getLang();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.getLang();\r\n  }\r\n\r\n  getLang() {\r\n    //const {_currentLang, _currentDir} = this.translations.getLang(this._translations).values\r\n    this._currentLang = AppConfig.translateLanguage.lang; //_currentLang;\r\n    this._currentDir = (AppConfig.translateLanguage.dir.match('ltr') ? 'ltr' : 'rtl'); //_currentDir;\r\n  }\r\n\r\n  setLang(lang: string) {\r\n    //this.translations.setLang(lang);\r\n    AppConfig.translateLanguage.lang = this._currentLang.toString();\r\n    AppConfig.translateLanguage.dir = this._currentDir.toString();\r\n  }\r\n\r\n/*  getLang() {\r\n    let lang = 'eng';\r\n    let username = null;\r\n    if (this.tokenService?.getUser() != null ) {username = this.tokenService.getUsername();}\r\n    this.userService.getLanguage((username != null ? username : '')).subscribe(\r\n      data => {\r\n        console.log('get language: '+data.data)\r\n        AppConfig.translateLanguage.lang = data.data;\r\n        this._currentLang = (data.data);\r\n        this._currentDir = (this._translations[data.data]?.dir ?? 'ltr');\r\n        lang = data.data\r\n      },\r\n      err => {\r\n        console.log(JSON.parse(err.error).message);\r\n      }\r\n    );\r\n    return lang;\r\n  }\r\n\r\n  setLang(lang: string) {\r\n    if (lang) {\r\n      const username = this.tokenService?.getUsername();\r\n      this.userService.setLanguage(lang, (username != null ? username : '')).subscribe(\r\n        data => {\r\n          console.log(data.message);\r\n        },\r\n        err => {\r\n          console.log(JSON.parse(err.error).message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n*/\r\n  public use(lang: string): void {\r\n    this._currentLang = lang;\r\n    //this.setLang(lang);\r\n    this._currentDir = (this._translations[lang]?.dir ?? 'ltr'); //\r\n  }\r\n\r\n  public translate(key: string): string{\r\n    if  (typeof(key) ==  undefined) {return \"\";}\r\n    let translation = key;\r\n    if (this._translations[this.currentLang] && this._translations[this.currentLang].trans[key]) {\r\n      return this._translations[this.currentLang].trans[key];\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  public instant(key: string) {\r\n    return this.translate(key);\r\n  }\r\n}\r\n",
            "selector": "translate",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_currentDir",
                    "defaultValue": "'ltr'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Direction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 523,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_currentLang",
                    "defaultValue": "AppConfig.translateLanguage.lang",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 522,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getLang",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 543,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "instant",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 603,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 539,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLang",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 549,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "translate",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 594,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "use",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 588,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_translations",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 531,
                "jsdoctags": [
                    {
                        "name": "_translations",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "currentLang": {
                    "name": "currentLang",
                    "getSignature": {
                        "name": "currentLang",
                        "type": "",
                        "returnType": "",
                        "line": 524
                    }
                },
                "currentDir": {
                    "name": "currentDir",
                    "getSignature": {
                        "name": "currentDir",
                        "type": "",
                        "returnType": "Direction",
                        "line": 528
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "ActionInputComponent",
            "id": "component-ActionInputComponent-f0d8a6ee778d423ea633ac0c81463742134359a3ab038276e2c96b3ede63131e0e61d28974839ea0173df49989f06f6280c285fe6a011407dc8e07bcfce8b85f",
            "file": "src/stories/actions/action-input/action-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "action-input",
            "styleUrls": [
                "./action-input.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./action-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "actionHeader",
                    "defaultValue": "'The password must contain:'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "actionInputs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionInput[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "direction",
                    "defaultValue": "this._translate.currentDir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setConditions",
                    "args": [
                        {
                            "name": "actionInputs",
                            "type": "ActionInput[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionInputs",
                            "type": "ActionInput[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeader",
                    "args": [
                        {
                            "name": "actionHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {ActionInput} from \"./action-input.interface\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n\r\n\r\ninterface USERS {\r\n  conditionName: String;\r\n  presentingMessage: String;\r\n  isFulfilled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'action-input',\r\n  templateUrl: './action-input.component.html',\r\n  styleUrls: ['./action-input.component.css']\r\n})\r\nexport class ActionInputComponent implements OnInit {\r\n\r\n  actionInputs?: ActionInput[];\r\n  actionHeader: string = 'The password must contain:';\r\n  direction = this._translate.currentDir;\r\n\r\n  constructor(public _translate: TranslateService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public async setConditions(actionInputs: ActionInput[]) {\r\n    this.actionInputs = actionInputs;\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".password-alert-text {\r\n\r\n\r\n  /* D Regular */\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 13px;\r\n  line-height: 12px;\r\n  text-align: start;\r\n  /* or 94% */\r\n\r\n  letter-spacing: -0.011em;\r\n\r\n  color: #0A0000;\r\n\r\n}\r\n\r\n.password-condition-text {\r\n\r\n\r\n  /* D Regular */\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 13px;\r\n  line-height: 25px;\r\n  /* or 94% */\r\n\r\n  letter-spacing: -0.011em;\r\n\r\n  color: #0A0000;\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./action-input.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div  [dir]=\"this.direction\" class=\"password-alert-text\" Style=\"margin-left: 20px; padding-bottom: 15px\">\r\n<tr><strong>{{this.actionHeader  |translate }}</strong></tr>\r\n</div>\r\n<div [dir]=\"this.direction\" >\r\n\r\n  <table>\r\n\r\n    <!--thead>\r\n\r\n    </thead-->\r\n    <tbody>\r\n      <tr  *ngFor=\"let actionInput of actionInputs\">\r\n        <td  *ngIf=\"actionInput.isFulfilled == true\" Style=\"color: green\">✔</td>\r\n        <td  *ngIf=\"actionInput.isFulfilled != true\" Style=\"color: red\">X</td>\r\n        <td Style=\"border-left-width: 7px; border-color: white; line-height: 15px\">{{ actionInput.presentingMessage |translate  }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n"
        },
        {
            "name": "ActionLanguageComponent",
            "id": "component-ActionLanguageComponent-7cdc18dff0af21cc7ce94888e2d976296af92beaeea315ee482d3c8ba612a10bf5e180b5cfb5a41fa85e335c481707ce1f9393dea8c73b9a0968ab095ab7364e",
            "file": "src/stories/actions/action-language/action-language.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "action-lang",
            "styleUrls": [
                "./action-language.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./action-language.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "actionLanguage",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "actionHeader",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "availableLanguages",
                    "defaultValue": "{\r\n                                            eng: true,\r\n                                            heb: true,\r\n                                            esp: false,\r\n                                            chi: false,\r\n                                            rus: false\r\n                                          }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AvailableLanguages",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "bubbleOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "changeLanguage",
                    "args": [
                        {
                            "name": "newLang",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newLang",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setBubbleOn",
                    "args": [
                        {
                            "name": "bubbleOn",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "bubbleOn",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeader",
                    "args": [
                        {
                            "name": "actionHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "actionHeader",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTranslate",
                    "args": [
                        {
                            "name": "_translate",
                            "type": "TranslateService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "_translate",
                            "type": "TranslateService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\nimport {AppConfig} from \"../../../app/app.config\";\r\nimport { AvailableLanguages } from './available-languages.model'\r\n\r\n@Component({\r\n  selector: 'action-lang',\r\n  templateUrl: './action-language.component.html',\r\n  styleUrls: ['./action-language.component.css']\r\n})\r\nexport class ActionLanguageComponent implements OnInit {\r\n\r\n\r\n\r\n  bubbleOn?: boolean;\r\n  actionHeader?: string = \"\";\r\n  _translate!: TranslateService;\r\n\r\n  @Output() actionLanguage = new EventEmitter<any>();\r\n\r\n  availableLanguages: AvailableLanguages = {\r\n                                            eng: true,\r\n                                            heb: true,\r\n                                            esp: false,\r\n                                            chi: false,\r\n                                            rus: false\r\n                                          };\r\n\r\n\r\n  changeLanguage(newLang: any){\r\n    console.log(\"lang set to: \"+newLang);\r\n    this._translate.use(newLang);\r\n    AppConfig.translateLanguage.lang = newLang;\r\n    AppConfig.translateLanguage.dir = (newLang == 'heb' ? 'rtl' : 'ltr');\r\n  }\r\n\r\n\r\n  constructor(/*public _translate: TranslateService*/) {}\r\n\r\n  ngOnInit() {\r\n    this._translate?.use(AppConfig.translateLanguage.lang);\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n\r\n  public setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n  public setTranslate(_translate: TranslateService) {\r\n    this._translate = _translate;\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".password-alert-text {\r\n\r\n  /* D Regular */\r\n  text-align: start;\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 17px;\r\n  line-height: 31px;\r\n  /* or 183% */\r\n\r\n  letter-spacing: -0.011em;\r\n\r\n  color: #000000;\r\n\r\n}\r\n\r\n.action-text {\r\n  text-decoration-line: underline;\r\n}\r\n\r\n\r\n\r\n",
                    "styleUrl": "./action-language.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"password-alert-text\">\r\n  <form name=\"languages\" >\r\n\r\n  <div [hidden]=\"!this.availableLanguages.eng\" >\r\n    <input\r\n           type=\"radio\"\r\n           id=\"English\"\r\n           name=\"fav_language\"\r\n           (click)=\"changeLanguage('eng')\"\r\n           value=\"English\"\r\n           [checked]=\"this._translate?.currentLang == 'eng'\">\r\n    <label for=\"English\">English</label><br>\r\n  </div>\r\n\r\n  <span [hidden]=\"!this.availableLanguages.heb\" >\r\n    <input\r\n           type=\"radio\"\r\n           id=\"Hebrew\"\r\n           name=\"fav_language\"\r\n           (click)=\"changeLanguage('heb')\"\r\n           value=\"Hebrew\"\r\n           [checked]=\"this._translate?.currentLang == 'heb'\">\r\n    <label  for=\"Hebrew\">עברית</label><br>\r\n  </span>\r\n\r\n  <div [hidden]=\"!availableLanguages.esp\" >\r\n    <input\r\n           type=\"radio\"\r\n           id=\"Spanish\"\r\n           name=\"fav_language\"\r\n           (click)=\"changeLanguage('esp')\"\r\n           value=\"Spanish\"\r\n           [checked]=\"this._translate?.currentLang == 'esp'\">\r\n    <label  for=\"Spanish\">Español</label><br>\r\n  </div>\r\n\r\n  <div [hidden]=\"!this.availableLanguages.chi\" >\r\n    <input\r\n           type=\"radio\"\r\n           id=\"Chainese\"\r\n           name=\"fav_language\"\r\n           (click)=\"changeLanguage('chi')\"\r\n           value=\"Chainese\"\r\n           [checked]=\"this._translate?.currentLang == 'chi'\">\r\n    <label  for=\"Chainese\">中文</label><br>\r\n  </div>\r\n\r\n  <div [hidden]=\"!this.availableLanguages.rus\" >\r\n    <input\r\n           type=\"radio\"\r\n           id=\"Russian\"\r\n           name=\"fav_language\"\r\n           (click)=\"changeLanguage('rus')\"\r\n           value=\"Russian\">\r\n    <label  for=\"Russian\">Русский</label><br>\r\n  </div>\r\n\r\n  </form>\r\n\r\n  <!-- Show Current lang -->\r\n<!--p>\"{{this._translate.currentLang}}\"</p>\r\n<p>\"{{this._translate.currentDir}}\"</p-->\r\n\r\n</div>\r\n"
        },
        {
            "name": "AdminComponent",
            "id": "component-AdminComponent-2a675f57b60fde7a0feacd246dfeff8dcb4fd713306c7b4f63cf8eb721c1d7f343931149bbabc446927dd6485ad4a1a20ca41003633dd25fa873babd9dd95ad3",
            "file": "src/app/components/admin/admin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-admin",
            "styleUrls": [
                "./admin.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./admin.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cacheElement",
                    "defaultValue": "document.createElement(\"span\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "dp_app_center",
                    "defaultValue": "'DP_ENABLE'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "errors",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "font",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isPaused",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isWSChanged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "lang",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "lastPing",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "pathToGo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pingXmlHttpReq",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "Request_TIMEOUT",
                    "defaultValue": "3000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "table",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "tableObj",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableRow[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "timer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "url",
                    "defaultValue": "'accRealTime/nlat/Agents.Brief_Report.nlat?agentId=1,2,3,554,555'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "ws_list",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "xmlHttpReq",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "closeAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 380,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 396,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doContextUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doPingContextUpdate",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getIp",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 328,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getParams",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 313,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isRefreshing",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 404,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshToken",
                    "args": [
                        {
                            "name": "toClusterIp",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 265,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "toClusterIp",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "requestUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "requestUpdatePing",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "runUpdateTimer",
                    "args": [
                        {
                            "name": "delay",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.Request_TIMEOUT"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "delay",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.Request_TIMEOUT",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 371,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 388,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "titleOrTiltle_md",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpXhrBackend} from '@angular/common/http';\r\n\r\n\r\ntype TableRow = {agentName: string, agentExten: string, state: string, agentNo: string, stateTime: string, releaseCode: string, aCDCalls: string, nonACDCalls: string, dNIS: string, aN: string};\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  timer: any;\r\n  errors = 0;\r\n  lastPing = '';\r\n  pathToGo = '';\r\n  isPaused: boolean | null = null;\r\n  isWSChanged = false;\r\n  // tslint:disable-next-line:variable-name\r\n  ws_list = '';\r\n  font = '';\r\n  lang = '';\r\n  url = 'accRealTime/nlat/Agents.Brief_Report.nlat?agentId=1,2,3,554,555';\r\n  dp_app_center = 'DP_ENABLE';\r\n  Request_TIMEOUT = 3000;\r\n  pingXmlHttpReq: any;\r\n  xmlHttpReq: any;\r\n  table: HTMLElement | null = null;\r\n  tableObj: TableRow[] = [];\r\n  headers: any;\r\n\r\n  constructor(private http: HttpClient, private xmlHttp: HttpXhrBackend) {\r\n    this.ws_list = localStorage.getItem('ws_list') || '';\r\n    this.font = localStorage.getItem('ws_dynamicFrontSize') || '';\r\n    this.lang = localStorage.getItem('ws_Accept-Language') || '';\r\n    this.dp_app_center = sessionStorage.getItem('DP_APP_CENTER') || '';\r\n    //setInterval(()=> { this.runUpdateTimer() }, this.Request_TIMEOUT);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initRequest();\r\n    this.runUpdateTimer();\r\n  }\r\n\r\n  initRequest() {\r\n    console.log('initRequest');\r\n    this.pingXmlHttpReq = new XMLHttpRequest();\r\n    this.xmlHttpReq = new XMLHttpRequest();\r\n/*    this.pingXmlHttpReq.open('GET', path, true);\r\n    this.pingXmlHttpReq.onload = () => {\r\n      if (this.pingXmlHttpReq.readyState === 4 && this.pingXmlHttpReq.status === 200) {\r\n        this.xmlHttpReq = this.pingXmlHttpReq;\r\n      }\r\n    };\r\n    this.pingXmlHttpReq.send();*/\r\n  }\r\n\r\n\r\n  requestUpdate() {\r\n    console.log('requestUpdate');\r\n    if (this.xmlHttpReq) {\r\n      this.xmlHttpReq.open('GET', this.url, true);\r\n      this.xmlHttpReq.setRequestHeader('RefreshMode', 'true');\r\n      this.xmlHttpReq.onreadystatechange = () => {\r\n        if (this.xmlHttpReq.readyState === XMLHttpRequest.DONE)\r\n        {\r\n          if (this.xmlHttpReq.status == 200)\r\n          {\r\n            //alert(self.xmlHttpReq.responseText);\r\n            this.cacheElement.innerHTML=this.xmlHttpReq.responseText;\r\n            let mTable = this.xmlHttpReq.responseText;\r\n            //console.log(\"doContextUpdate: table - \" + mTable);\r\n\r\n            function isHTMLTableElement(elem: HTMLTableElement | HTMLElement) : elem is HTMLTableElement {\r\n              return elem.tagName === 'TABLE';\r\n            }\r\n\r\n\r\n\r\n            const dom = new DOMParser().parseFromString(this.xmlHttpReq.responseText,'text/html')\r\n            const table = dom.querySelector('table');\r\n            this.table = table;\r\n\r\n\r\n            this.headers = ['agentName', 'agentExten' ,'state' ,'agentNo' ,'stateTime' ,'releaseCode' ,'aCDCalls' ,'nonACDCalls' ,'dNIS' ,'aN' ]\r\n\r\n            //const result: {agentName: string, agentExten: string, state: string, agentNo: string, stateTime: string, releaseCode: string, aCDCalls: string, nonACDCalls: string, dNIS: string, aN: string}[] = [];\r\n            this.tableObj = [];\r\n\r\n\r\n            if (table) {\r\n                const rows: HTMLElement[] = [].slice.call(table.querySelectorAll('tbody tr'));\r\n              for (const row of rows) {\r\n                const cells: HTMLElement[] = [].slice.call(row.querySelectorAll('td'));\r\n                const [agentName, agentExten ,state ,agentNo ,stateTime ,releaseCode ,aCDCalls ,nonACDCalls ,dNIS ,aN ]  = cells.map(c => c.innerText);\r\n                this.tableObj.push({\r\n                  agentName: agentName,\r\n                  agentExten: agentExten,\r\n                  state: state,\r\n                  agentNo: agentNo,\r\n                  stateTime: stateTime,\r\n                  releaseCode: releaseCode,\r\n                  aCDCalls: aCDCalls,\r\n                  nonACDCalls: nonACDCalls,\r\n                  dNIS: dNIS,\r\n                  aN: aN\r\n                });\r\n              }\r\n              //this.tableObj = result;\r\n              //console.log(JSON.stringify(result).toString());\r\n            }\r\n\r\n\r\n\r\n            this.runUpdateTimer();\r\n            this.errors=0;\r\n\r\n            var ServerTime = this.xmlHttpReq.getResponseHeader(\"accServerTime\");\r\n\r\n\r\n\r\n            /*var spanServerTime = this.titleOrTiltle_md().document.getElementById(\"accServerTime\");\r\n            if((spanServerTime != null) && (ServerTime != null) && (spanServerTime.innerHTML != ServerTime)){\r\n              console.log(\"Updating accServerTime - \" + ServerTime);\r\n              spanServerTime.innerHTML = ServerTime;\r\n            }*/\r\n          }\r\n          else if (this.xmlHttpReq.status == 401 )\r\n          {\r\n            this.runUpdateTimer(this.Request_TIMEOUT);\r\n\r\n            if ( this.isRefreshing() == false )\r\n            {\r\n              this.refreshToken(false);\r\n\r\n            }\r\n            else\r\n            {\r\n              console.log( \"Token is expired and refresh process is already on\");\r\n            }\r\n          }\r\n          else\r\n          {\r\n            this.errors++;\r\n            this.runUpdateTimer(this.Request_TIMEOUT*5);\r\n          }\r\n        }\r\n      };\r\n      this.xmlHttpReq.setRequestHeader('Authorization', 'Bearer ' + sessionStorage.getItem(\"token\"));\r\n      this.xmlHttpReq.send();\r\n    }\r\n  }\r\n\r\n  requestUpdatePing(url: string) {\r\n    if (this.pingXmlHttpReq) {\r\n      this.http.get(url, {observe: 'response'}).subscribe(response => {\r\n        this.doPingContextUpdate(response);\r\n      });\r\n    }\r\n  }\r\n\r\n  cacheElement=document.createElement(\"span\");\r\n  doContextUpdate()\r\n  {\r\n    console.log(\"doContextUpdate: this.xmlHttpReq.readyState - \" + this.xmlHttpReq.readyState);\r\n    if (this.xmlHttpReq.readyState === XMLHttpRequest.DONE)\r\n    {\r\n      if (this.xmlHttpReq.status == 200)\r\n      {\r\n        //alert(self.xmlHttpReq.responseText);\r\n        this.cacheElement.innerHTML=this.xmlHttpReq.responseText;\r\n        console.log(\"doContextUpdate: table - \" + this.xmlHttpReq.responseText);\r\n        var table = this.xmlHttpReq.responseText.tableToJSON();\r\n        console.log(\"doContextUpdate: table - \" + table);\r\n        let x=this.cacheElement.getElementsByTagName(\"onRefresh\");\r\n        //alert(x.length);\r\n        //console.log(\"doContextUpdate: cacheElement - \" + cacheElement + \", x - \" + x + \", length - \" + x.length);\r\n        for(var i=0; i< x.length ; i++) {\r\n          //console.log(\"doContextUpdate: eval(x[i].getAttribute(\\\"event\\\") - \" + eval(x[i].getAttribute(\"event\"));\r\n          //alert(x[i].getAttribute(\"event\")+\"(cacheElement)\");\r\n          const eventFunction = new Function('cacheElement', x[i].getAttribute(\"event\") + \"(cacheElement)\");\r\n          eventFunction(this.cacheElement);\r\n        }\r\n        this.runUpdateTimer();\r\n        this.errors=0;\r\n\r\n        //10-Aug-2022 YR BZ#56641\r\n        //var today = new Date();\r\n        //var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        var ServerTime = this.xmlHttpReq.getResponseHeader(\"accServerTime\");\r\n\r\n\r\n\r\n        var spanServerTime = this.titleOrTiltle_md().document.getElementById(\"accServerTime\");\r\n        //console.log(\"accServerTime: \" + ServerTime + \", Local: \" + time);.contains(\"Period\")\r\n        if((spanServerTime != null) && (ServerTime != null) && (spanServerTime.innerHTML != ServerTime)){\r\n          //spanServerTime.innerHTML = time;\r\n          console.log(\"Updating accServerTime - \" + ServerTime);\r\n          spanServerTime.innerHTML = ServerTime;\r\n          //spanServerTime.innerHTML = self.xmlHttpReq.getResponseHeader(\"accServerTime\");\r\n\r\n          //var spanServerTime = parent.parent.title.document.createElement('div');\r\n          //spanServerTime.innerHTML = self.xmlHttpReq.getResponseHeader(\"accServerTime\");\r\n          //parent.parent.title.document.getElementById(\"accServerTime\").appendChild(spanServerTime);\r\n        }\r\n      }\r\n      else if (this.xmlHttpReq.status == 401 )\r\n      {\r\n        this.runUpdateTimer(this.Request_TIMEOUT);\r\n\r\n        if ( this.isRefreshing() == false )\r\n        {\r\n          this.refreshToken(false);\r\n\r\n        }\r\n        else\r\n        {\r\n          console.log( \"Token is expired and refresh process is already on\");\r\n        }\r\n      }\r\n      else\r\n      {\r\n        this.errors++;\r\n        this.runUpdateTimer(this.Request_TIMEOUT*5);\r\n      }\r\n    }\r\n  }\r\n\r\n  titleOrTiltle_md() {\r\n    const mainPage = parent.parent.document.getElementById(\"main-page\");\r\n    if (mainPage) {\r\n      var currentTitle = mainPage.getElementsByTagName(\"frame\")[0].name;\r\n      var Obj: any = null;\r\n      if (currentTitle == \"title\") {\r\n        Obj = parent.parent.document.getElementsByTagName('title');\r\n      }\r\n      if (currentTitle == \"title_md\") {\r\n        Obj = parent.parent.document.getElementsByTagName('title_md');\r\n      }\r\n      return Obj;\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  doPingContextUpdate(response: any) {\r\n    if (response.status === 200) {\r\n      window.location.assign(this.pathToGo + this.getParams());\r\n    } else if (response.status === 401) {\r\n      this.errors++;\r\n      this.runUpdateTimer(this.Request_TIMEOUT * 5);\r\n      if (!this.isRefreshing()) {\r\n        if (this.refreshToken(true)) {\r\n          window.location.assign(this.pathToGo + this.getParams());\r\n        }\r\n      }\r\n    } else {\r\n      this.errors = 8;\r\n      this.isPaused = null;\r\n      this.runUpdateTimer();\r\n    }\r\n  }\r\n\r\n  refreshToken(toClusterIp: boolean): boolean {\r\n    this.showRefresh();\r\n    console.log('Starting Token refresh process.');\r\n    const data = JSON.stringify({\r\n      refreshToken: sessionStorage.getItem('auth-refreshtoken') || ''\r\n    });\r\n\r\n    const myUrl = window.location.href;\r\n    const myIp = myUrl.split('//')[1].split(':')[0];\r\n    let clusterIp;\r\n    const [ws1, ws2] = this.ws_list.split(';');\r\n    const ws1Ip = this.getIp(ws1);\r\n    const ws2Ip = this.getIp(ws2);\r\n    clusterIp = myIp === ws1Ip && ws2Ip ? ws2Ip : ws1Ip;\r\n    const myHost = toClusterIp ? clusterIp : myIp;\r\n    const myPort = myUrl.split(':')[2].split('/')[0];\r\n    this.http\r\n      .post(\r\n        `https://${myHost}:${myPort}/Aeonix-App-Center/auth/refreshtoken`,\r\n        data,\r\n        {\r\n          headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${sessionStorage.getItem('token') || ''}`\r\n          })\r\n        }\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          const responseBody = JSON.parse(response as any);\r\n          sessionStorage.setItem('auth-refreshtoken', responseBody.refreshToken.toString());\r\n          sessionStorage.setItem('token', responseBody.accessToken.toString());\r\n          document.cookie = `Authorization=${sessionStorage.getItem('token')}; path=/accRealTime;`;\r\n          if (responseBody.accessToken.toString() !== null) {\r\n            this.requestUpdate();\r\n          }\r\n          this.closeRefresh();\r\n          return true;\r\n        },\r\n        () => {\r\n          console.log('Token refresh process failed!');\r\n          this.closeRefresh();\r\n          return false;\r\n        }\r\n      );\r\n    return false;\r\n  }\r\n\r\n  getParams(): string {\r\n    let a1: string;\r\n    if (this.dp_app_center === 'DP_ENABLE') {\r\n      const userName = `GateUser: ${JSON.parse(sessionStorage.getItem('user') as any).username}`;\r\n      const pass = sessionStorage.getItem('token') || '';\r\n      const refreshtoken = sessionStorage.getItem('auth-refreshtoken') || '';\r\n      a1 = `${userName},${pass},${refreshtoken}`;\r\n    } else {\r\n      const userName = sessionStorage.getItem('userName') || '';\r\n      const pass = sessionStorage.getItem('pass') || '';\r\n      a1 = `${userName},${pass}`;\r\n    }\r\n    return `?params=${btoa(a1)}`;\r\n  }\r\n\r\n  getIp(url: string): string | null {\r\n    return url && url !== 'null' ? url.split('//')[1].split(':')[0] : null;\r\n  }\r\n\r\n  runUpdateTimer(delay: number = this.Request_TIMEOUT) {\r\n    if (this.errors === 5) {\r\n      this.showAlert();\r\n    }\r\n\r\n    if (this.errors < 10) {\r\n      this.timer = setTimeout(() => this.requestUpdate(), delay);\r\n    } else {\r\n      console.log('ajaxRefresh::runUpdateTimer() - errors ' + this.errors);\r\n      if (this.isPaused === null) {\r\n        this.isPaused = true;\r\n        this.isWSChanged = false;\r\n        this.showAlert();\r\n        const [ws1, ws2] = this.ws_list.split(';');\r\n        const myUrl = window.location.href;\r\n        const myIp = myUrl.split('//')[1].split(':')[0];\r\n        const ws1Ip = this.getIp(ws1);\r\n        const ws2Ip = this.getIp(ws2);\r\n\r\n        const restUrl = '/accRealTime/login.jsp';\r\n\r\n        if (myIp === ws1Ip && ws2 !== null) {\r\n          if (ws2 === this.lastPing) {\r\n            this.lastPing = ws1;\r\n            this.pathToGo = `${ws1}${restUrl}`;\r\n            this.requestUpdatePing(`${ws1}/accAgent/ping`);\r\n          } else {\r\n            this.lastPing = ws2;\r\n            this.pathToGo = `${ws2}${restUrl}`;\r\n            this.requestUpdatePing(`${ws2}/accAgent/ping`);\r\n          }\r\n        } else {\r\n          this.pathToGo = `${ws1}${restUrl}`;\r\n          this.requestUpdatePing(`${ws1}/accAgent/ping`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  showAlert() {\r\n    console.log('ajaxRefresh:showAlert - connectionErr');\r\n    const spanErr = document.getElementById('connectionErr');\r\n    if (spanErr) {\r\n      spanErr.style.color = 'red';\r\n      spanErr.innerHTML = 'Connection Lost - Trying to Reconnect';\r\n    }\r\n  }\r\n\r\n  closeAlert() {\r\n    console.log('ajaxRefresh:closeAlert - connectionErr');\r\n    const spanErr = document.getElementById('connectionErr');\r\n    if (spanErr) {\r\n      spanErr.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  showRefresh() {\r\n    console.log('ajaxRefresh:showRefresh - connectionErr');\r\n    const spanErr = document.getElementById('connectionErr');\r\n    if (spanErr) {\r\n      spanErr.innerHTML = 'Refreshing..';\r\n    }\r\n  }\r\n\r\n  closeRefresh() {\r\n    console.log('ajaxRefresh:closeRefresh - connectionErr');\r\n    const spanErr = document.getElementById('connectionErr');\r\n    if (spanErr) {\r\n      spanErr.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  private isRefreshing() {\r\n    return false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  box-sizing: border-box;\n}\nhtml,\nbody {\n  background: #ecf0f3;\n}\nh1 {\n  margin: 0;\n  padding: 0;\n}\n.custom-form {\n  min-width: 300px;\n  max-width: 60%;\n  margin: 0px auto;\n  background: rgba(255, 255, 255, 0.15);\n  padding: 2rem 3rem;\n  margin: auto;\n  border-radius: 2.5rem;\n  background-color: #ecf0f3;\n  box-shadow: 13px 13px 20px #cbced1, -13px -13px 20px #ffffff;\n  color: black;\n  margin-top: 10rem;\n}\n.custom-form input {\n  display: block;\n  margin: 2rem 0;\n  width: 100%;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  border: none;\n  box-shadow: inset -5px -5px 15px rgba(255, 255, 255, 0.8), inset 5px 5px 10px\n  rgba(0, 0, 0, 0.1);\n  border: 0 none;\n  background: #ebf5fc;\n}\n.custom-form button {\n  text-transform: uppercase;\n  letter-spacing: 0.15em;\n  border: none;\n  font-size: 0.875rem;\n  color: #ffffff;\n  font-weight: bold;\n  background-color: #bcd8c1;\n  width: 100%;\n  display: block;\n  padding: 0.875rem 1rem;\n  border-radius: 1.5rem;\n  box-shadow: 3px 3px 8px #b1b1b1, -3px -3px 8px #ffffff;\n  cursor: pointer;\n}\n",
                    "styleUrl": "./admin.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "xmlHttp",
                        "type": "HttpXhrBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "xmlHttp",
                        "type": "HttpXhrBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>admin works!</p>\r\n<div>{{this.table}}</div>\r\n<h1>{{this.tableObj.length}}</h1>\r\n<table class=\"table\">\r\n  <thead>\r\n<!--  <tr>\r\n    <th scope=\"col\" >#</th>\r\n\r\n    <th scope=\"col\" *ngFor=\"let header of headers\">   {{ header }}   </th>\r\n\r\n  </tr>-->\r\n<tr *ngFor=\"let item of this.tableObj.slice(0,1); index as i\">\r\n  <th scope=\"col\" >#</th>\r\n  <th scope=\"col\" >{{ item.agentName}}</th>\r\n  <th scope=\"col\" >{{ item.agentExten }}</th>\r\n  <th scope=\"col\" >{{ item.state }}</th>\r\n  <th scope=\"col\" >{{ item.agentNo }}</th>\r\n  <th scope=\"col\" >{{ item.stateTime }}</th>\r\n  <th scope=\"col\" >{{ item.releaseCode }}</th>\r\n  <th scope=\"col\" >{{ item.aCDCalls }}</th>\r\n  <th scope=\"col\" >{{ item.nonACDCalls }}</th>\r\n  <th scope=\"col\" >{{ item.dNIS }}</th>\r\n  <th scope=\"col\" >{{ item.aN }}</th>\r\n\r\n</tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n  <tr *ngFor=\"let item of this.tableObj.slice(1,this.tableObj.length); index as i\">\r\n    <th scope=\"row\">{{i}}</th>\r\n    <td>{{ item.agentName }}</td>\r\n    <td>{{ item.agentExten }}</td>\r\n    <td>{{ item.state }}</td>\r\n    <td>{{ item.agentNo }}</td>\r\n    <td>{{ item.stateTime }}</td>\r\n    <td>{{ item.releaseCode }}</td>\r\n    <td>{{ item.aCDCalls }}</td>\r\n    <td>{{ item.nonACDCalls }}</td>\r\n    <td>{{ item.dNIS }}</td>\r\n    <td>{{ item.aN }}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c4ded49d2d3dcb701eb2c54f1f500399b22ba35b89f79b221949688df2023a449d5f274fdfd33fd90d74707899101bd93d80a4a1908011255837f3057cf47638",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Angular 17 Multiple Files Upload example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ElementRef, ViewChild} from '@angular/core';\r\nimport {ThreeService} from \"./services/three.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular 17 Multiple Files Upload example';\r\n\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<router-outlet  id=\"app\" ></router-outlet>\r\n\r\n<!--div class=\"container\" style=\"width:500px\">\r\n  <div class=\"my-3\">\r\n    <h3>bezkoder.com</h3>\r\n    <h4>{{ title }}</h4>\r\n  </div>\r\n\r\n\r\n  <app-upload-files></app-upload-files>\r\n</div-->\r\n"
        },
        {
            "name": "Background1Component",
            "id": "component-Background1Component-aae79e6f06d72902622bfd6b4111d7b1f06342b4b42549a87c97e1173a1b774e2b233a210c69e1aa4d5eec59b32a2681dbae1a0805a9b58920b5de1f9d79d746",
            "file": "src/stories/backgrounds/background1/background1Component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-background1",
            "styleUrls": [
                "./background1Component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./background1Component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ACC_VERSION",
                    "defaultValue": "'7.00.000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 760,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Page2Component'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 654,
                            "end": 667,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 655,
                                "end": 663,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changeLang",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "EventEmitter<Event>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\n\n\n\n\n@Component({\n  selector: 'storybook-background1',\n  templateUrl: './background1Component.html',\n  styleUrls: ['./background1Component.scss']\n})\nexport default class Background1Component {\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Page2Component';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  ACC_VERSION = '7.00.000';\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-background1--primary' : 'storybook-background1--secondary';\n\n    return ['storybook-background1', mode];\n  }\n\n  constructor(public _translate: TranslateService,) {}\n\n  @Output() changeLang: EventEmitter<Event> = new EventEmitter();\n\n\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.storybook-background1 {\r\n  position: absolute;\r\n  width: inherit;\r\n  height: inherit;\r\n}\r\n\r\n.Desktop-1Login-1 {\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-grow: 0;\r\n}\r\n\r\n.Desktop-APP_VERSION {\r\n  position: absolute;\r\n  align-items: start;\r\n  color: #03165e;\r\n  bottom: 2px;\r\n  right: 10px;\r\n}\r\n\r\n/* D Caps Regular */\r\n.D-Caps-Regular {\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 31px;\r\n}\r\n\r\n\r\ndiv.relative {\r\n  position: relative;\r\n  width: inherit;\r\n  height: inherit;\r\n}\r\n\r\n\r\n\r\n\r\n.Frame-1 {\r\n  width: 1920px;\r\n  height: 1080px;\r\n  flex-grow: 0;\r\n}\r\n\r\n.fa-pull-left {float:left}\r\n\r\n.fa-pull-right {float:right}\r\n\r\nimg.icon-1 {\r\n  position: absolute;\r\n  width: 305.7px;\r\n  height: 309px;\r\n  transform: rotate(0deg);\r\n  background-position: bottom;\r\n}\r\n\r\nimg.icon-2 {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 372px;\r\n  height: 343px;\r\n  flex-grow: 0;\r\n}\r\n\r\n\r\n.storybook-background1--primary {\r\n\r\n  background: linear-gradient(228.37deg, #EFF8FF 22.25%, #B0DCFF 88.18%);\r\n}\r\n",
                    "styleUrl": "./background1Component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            },
            "templateData": "\r\n<figure class=\"Desktop-1Login-1\"  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': background }\" >\r\n  <!--div [ngStyle]=\"{ 'background-color': background }\" ></div-->\r\n  <img src=\"./stories/assets/images/icon-1.webp\"\r\n       srcset=\"./stories/assets/images/icon-1@2x.webp 2x, ./stories/assets/images/icon-1@3x.webp 3x\"\r\n       alt=\"icon-1\" >\r\n\r\n  <div class=\"Desktop-APP_VERSION D-Caps-Regular\">Aeonix App Center V.{{this.ACC_VERSION}}</div>\r\n\r\n\r\n  <img src=\"./stories/assets/images/icon-2.webp\"\r\n       srcset=\"./stories/assets/images/icon-2@2x.webp 2x, ./stories/assets/images/icon-2@3x.webp 3x\"\r\n       class=\"icon-2  \" alt=\"icon-2fdf\" />\r\n\r\n</figure>\r\n\r\n\r\n\r\n<storybook-button-language\r\n  (onClick)=\"this.changeLang.emit($event);\"\r\n  [_translate]=\"this._translate\"\r\n  size=\"large\">\r\n</storybook-button-language>\r\n<storybook-button-tadiran></storybook-button-tadiran>\r\n<storybook-button-globe hidden ></storybook-button-globe>\r\n"
        },
        {
            "name": "BubbleInputComponent",
            "id": "component-BubbleInputComponent-a30a593a59ef0183e78ff313138424fecacaaad9e10b73aba5ff27a0fc4021d56b079ba716b7ac23ce5cfcffe2be73c466d3b4083e915d6c74eaabde0dea5d79",
            "file": "src/stories/directive/bubble-input/bubble-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bubble-input",
            "styleUrls": [
                "./bubble-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bubble-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "ActionInput[]",
                    "decorators": []
                },
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "PopoverOptions",
                    "decorators": []
                },
                {
                    "name": "popover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "triggerDetectionChange",
                    "defaultValue": "new EventEmitter<void> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionInputComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicCompDirective",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DynamicCompDirective, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "hidePopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ActionInput[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ActionInput[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeader",
                    "args": [
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-input',\r\n    templateUrl: './bubble-input.component.html',\r\n  styleUrls: ['./bubble-input.component.scss']\r\n})\r\nexport class BubbleInputComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() data?: ActionInput[];\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  actionInputComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionInputComponentRef.instance.setConditions(this.data);\r\n      this.actionInputComponentRef.instance.setHeader(this.header);\r\n    }\r\n\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.data != undefined && this.data?.length > 0) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setData(data: ActionInput[]) {\r\n    this.data = data;\r\n    this.actionInputComponentRef?.instance.setConditions(this.data);\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionInputComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  /*   loadCarComponent(){\r\n     const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n     //removes all views in that container\r\n     _viewContainerRef.clear();\r\n\r\n     const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n     //Create an instance of the compo\r\n     /*    const carComponentRef = _viewContainerRef.createComponent<ActionInputComponent>(componentFactory);\r\n\r\n         //Pass data to the component\r\n         carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n\r\n   }*/\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n\r\n  position: relative;\r\n  display: inline-block;\r\n  text-align: center;\r\n  background-color: yellow;\r\n  cursor: pointer;\r\n  -webkit-transform: translateZ(0); /* webkit flicker fix */\r\n  -webkit-font-smoothing: antialiased; /* webkit text rendering fix */\r\n}\r\n\r\n.tooltip {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  border: 2px solid #3D8ECF;\r\n  width: 253px;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  bottom: 55%;\r\n  color: #000000;\r\n  display: block;\r\n  right: -17px;\r\n  margin-bottom: 15px;\r\n  opacity: 0;\r\n  padding: 20px;\r\n  pointer-events: none;\r\n  -webkit-transform: translateY(10px);\r\n  -moz-transform: translateY(10px);\r\n  -ms-transform: translateY(10px);\r\n  -o-transform: translateY(10px);\r\n  transform: translateY(10px);\r\n  -webkit-transition: all .25s ease-out;\r\n  -moz-transition: all .25s ease-out;\r\n  -ms-transition: all .25s ease-out;\r\n  -o-transition: all .25s ease-out;\r\n  transition: all .25s ease-out;\r\n  -webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n}\r\n\r\n/* This bridges the gap so you can mouse into the tooltip without it disappearing */\r\n.tooltip:before {\r\n  border-left: solid transparent 10px;\r\n  border-right: solid transparent 10px;\r\n  border-top: solid  #3D8ECF 10px;\r\n\r\n\r\n  bottom: -11.5px;\r\n  content: \"\";\r\n  height: 7px;\r\n  right: 20%;\r\n  margin-left: -13px;\r\n  position: absolute;\r\n  width: 0;\r\n  /*\r\n  top: -40px;\r\n  content: \" \";\r\n  display: block;\r\n  height: 40px;\r\n  left: 0;\r\n  position: absolute;\r\n  width: 100%;*/\r\n}\r\n\r\n/* CSS Triangles - see Trevor's post */\r\n.tooltip::after {\r\n  border-left: solid transparent 10px;\r\n  border-right: solid transparent 10px;\r\n  border-top: solid  #FFFFFF 10px;\r\n\r\n  /*border-block-start: solid;\r\n  border: 10px solid #3D8ECF;*/\r\n  bottom: -9px;\r\n  content: \"\";\r\n  height: 7px;\r\n  right: 20%;\r\n  margin-left: -13px;\r\n  position: absolute;\r\n  width: 0;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n.tooltip-display {\r\n  opacity: 1;\r\n  pointer-events: auto;\r\n  -webkit-transform: translateY(0px);\r\n  -moz-transform: translateY(0px);\r\n  -ms-transform: translateY(0px);\r\n  -o-transform: translateY(0px);\r\n  transform: translateY(0px);\r\n}\r\n\r\n/* IE can just show/hide with no transition */\r\n.lte8 .wrapper .tooltip {\r\n  display: none;\r\n}\r\n\r\n.lte8 .wrapper:hover .tooltip {\r\n  display: block;\r\n}\r\n",
                    "styleUrl": "./bubble-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n"
        },
        {
            "name": "BubbleLanguageComponent",
            "id": "component-BubbleLanguageComponent-915fe3a73bbebb96a32810eef1f7f2c061e2ee2dc79f330ef50a868d8f4f713319a96fd11f0106f4cc43ede59fe0d60699aafce0f8433a7a5e28d645a9495ad0",
            "file": "src/stories/directive/bubble-language/bubble-language.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bubble-avatar",
            "styleUrls": [
                "./bubble-language.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bubble-language.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "TranslateService",
                    "decorators": []
                },
                {
                    "name": "bubbleOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "PopoverOptions",
                    "decorators": []
                },
                {
                    "name": "popover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionLanguage",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "triggerDetectionChange",
                    "defaultValue": "new EventEmitter<void> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionLanguageComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicCompDirective",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DynamicCompDirective, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "hidePopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadCarComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setBubbleOn",
                    "args": [
                        {
                            "name": "bubbleOn",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "bubbleOn",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeader",
                    "args": [
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionLanguageComponent} from \"../../actions/action-language/action-language.component\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-avatar',\r\n    templateUrl: './bubble-language.component.html',\r\n  styleUrls: ['./bubble-language.component.scss']\r\n})\r\nexport class BubbleLanguageComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() bubbleOn?: boolean;\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  @Input() _translate?: TranslateService;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  @Output() actionLanguage: EventEmitter<any> = new EventEmitter<any> ();\r\n  actionLanguageComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionLanguageComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionLanguageComponentRef.instance.setHeader(this.header);\r\n      this.actionLanguageComponentRef.instance.setBubbleOn(this.bubbleOn);\r\n      this.actionLanguageComponentRef.instance.setTranslate(this._translate);\r\n      this.actionLanguageComponentRef.instance.actionLanguage.subscribe(($event: any) => {\r\n        this.actionLanguage.emit($event);\r\n      });\r\n\r\n    }\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.bubbleOn) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionLanguageComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n  loadCarComponent(){\r\n    const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n    //removes all views in that container\r\n    _viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n    //Create an instance of the component\r\n    const carComponentRef = _viewContainerRef.createComponent<ActionLanguageComponent>(componentFactory);\r\n/*\r\n    //Pass data to the component\r\n    carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n*/\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n\r\n  position: relative;\r\n  display: inline-block;\r\n  text-align: center;\r\n  background-color: yellow;\r\n  cursor: pointer;\r\n  -webkit-transform: translateZ(0); /* webkit flicker fix */\r\n  -webkit-font-smoothing: antialiased; /* webkit text rendering fix */\r\n}\r\n\r\n.tooltip {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  border: 2px solid #3D8ECF;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  top: 40px;\r\n  color: #000000;\r\n  display: block;\r\n  right: -30px;\r\n  margin-bottom: 15px;\r\n  opacity: 0;\r\n  padding: 20px;\r\n  pointer-events: none;\r\n  /*width: 100%;*/\r\n  -webkit-transform: translateY(10px);\r\n  -moz-transform: translateY(10px);\r\n  -ms-transform: translateY(10px);\r\n  -o-transform: translateY(10px);\r\n  transform: translateY(10px);\r\n  -webkit-transition: all .15s ease-out;\r\n  -moz-transition: all .15s ease-out;\r\n  -ms-transition: all .15s ease-out;\r\n  -o-transition: all .15s ease-out;\r\n  transition: all .15s ease-out;\r\n  -webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);\r\n}\r\n\r\n/* This bridges the gap so you can mouse into the tooltip without it disappearing */\r\n.tooltip:before {\r\n  border-left: solid transparent 10px;\r\n  border-right: solid transparent;\r\n  border-right-width: 10px;\r\n  border-bottom: solid  #3D8ECF 10px;\r\n\r\n\r\n  top: -11.5px;\r\n  content: \"\";\r\n  height: 7px;\r\n  right: 15%;\r\n  margin-left: -13px;\r\n  position: absolute;\r\n  width: 0;\r\n  /*\r\n  top: -40px;\r\n  content: \" \";\r\n  display: block;\r\n  height: 40px;\r\n  left: 0;\r\n  position: absolute;\r\n  width: 100%;*/\r\n}\r\n\r\n/* CSS Triangles - see Trevor's post */\r\n.tooltip::after {\r\n  border-left: solid transparent 10px;\r\n  border-right: solid transparent;\r\n  border-right-width:10px;\r\n  border-bottom: solid  #FFFFFF 10px;\r\n\r\n  /*border-block-start: solid;\r\n  border: 10px solid #3D8ECF;*/\r\n  top: -9px;\r\n  content: \"\";\r\n  height: 7px;\r\n  right: 15%;\r\n  margin-left: -13px;\r\n  position: absolute;\r\n  width: 0;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n.tooltip-display {\r\n  opacity: 1;\r\n  pointer-events: auto;\r\n  -webkit-transform: translateY(0px);\r\n  -moz-transform: translateY(0px);\r\n  -ms-transform: translateY(0px);\r\n  -o-transform: translateY(0px);\r\n  transform: translateY(0px);\r\n}\r\n\r\n/* IE can just show/hide with no transition */\r\n.lte8 .wrapper .tooltip {\r\n  display: none;\r\n}\r\n\r\n.lte8 .wrapper:hover .tooltip {\r\n  display: block;\r\n}\r\n",
                    "styleUrl": "./bubble-language.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template    appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "ButtonContinueComponent",
            "id": "component-ButtonContinueComponent-144dc95eb47e9ecbb9ea3fede6f9e44566e1d1eee9d01d4909d89a1352234ca29a2e18d2b8bc31522a5acb5e23e6bf42be48ec03220a845ae6ef9cdcbe1f7ca9",
            "file": "src/stories/buttons/button-continue/button-continue.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-continue",
            "styleUrls": [
                "./button-continue.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-continue.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this gallery attribute are set?\n",
                    "description": "<p>Is this gallery attribute are set?</p>\n",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "gallery",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this gallery attribute are set?\n",
                    "description": "<p>Is this gallery attribute are set?</p>\n",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Continue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1054,
                            "end": 1067,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1055,
                                "end": 1063,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 42,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 56,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-continue',\n  templateUrl: './button-continue.component.html',\n  /*template: `<div class=\"storybook-button-continue\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n  </div>`,*/\n  styleUrls: ['./button-continue.component.scss'],\n})\nexport class ButtonContinueComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  disabled = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Continue';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-continue--primary' : 'storybook-button-continue--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-continue--set-in' : 'storybook-button-continue--set-out';\n    const disabledMode = this.disabled ? 'storybook-button-continue--disabled' : 'storybook-button-continue--enabled';\n\n    return ['storybook-button-continue', `storybook-button-continue--${this.size}`, mode, galleryMode, disabledMode];\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n\r\n.button {\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n.storybook-button-continue {\r\n    width: 446px;\r\n    height: 63px;\r\n    margin: 26px 0 0 1px;\r\n    padding: 17px 136px 17px 139px;\r\n    border-radius: 7px;\r\n    background-image: linear-gradient(180deg, #3D8ECF 0%, #58A6E4 100%);\r\n\r\n    font-family: 'Noto Sans', ui-serif;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 21px;\r\n    line-height: 11px;\r\n    //transition: background-color 300ms ease-out;\r\n    //box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n    &:hover {\r\n      background: #3D8ECF;\r\n    }\r\n\r\n    &:focus {\r\n      background: #ADDBFF;\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: none;\r\n      background: linear-gradient(116.01deg, #7EC6FF 2.44%, #ADDBFF 93.73%);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n.storybook-button-continue--primary {\r\n  top: 50px;\r\n  bottom: unset;\r\n  left: 30px;\r\n}\r\n\r\n.storybook-button-continue--secondary {\r\n  top: unset;\r\n  bottom: 50px;\r\n  left: 30px;\r\n}\r\n*/\r\n\r\n.storybook-button-continue--small {\r\n  font-size: 20.7945px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button-continue--medium {\r\n  font-size: 21px;\r\n  padding: 17px 136px 17px 139px;\r\n}\r\n.storybook-button-continue--large {\r\n  font-size: 28px;\r\n  padding: 17px 136px;\r\n}\r\n\r\n.storybook-button-continue--disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n.storybook-button-continue--enabled {\r\n  opacity: unset;\r\n  cursor: unset;\r\n}\r\n",
                    "styleUrl": "./button-continue.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 58
                    }
                }
            },
            "templateData": "<button id=\"login-button\" class=\"login-button\" [disabled]=\"this.disabled\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\" >\n{{label | translate}}\n</button>\n"
        },
        {
            "name": "ButtonGlobeComponent",
            "id": "component-ButtonGlobeComponent-b11f565231843b2e8069aad6cd260525c4844aa441266f76654a57bc8bc675433f989b883e9e7b5c03ba040e06ee052ede81edc9b5c3184d67f5049e8a4f9e77",
            "file": "src/stories/buttons/button-globe/button-globe.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-globe",
            "styleUrls": [
                "./button-globe.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button-globe.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'accGateButton2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 594,
                            "end": 607,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 595,
                                "end": 603,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 25,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-globe',\n  templateUrl: './button-globe.component.html',\n  styleUrls: ['./button-globe.component.css']\n})\nexport class ButtonGlobeComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n\n    return ['storybook-button-tadiran', `storybook-tadiran-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".Vector {\r\n  position: absolute;\r\n  bottom: 49px;\r\n  left: 247px;\r\n  width: 123px;\r\n  height: 45px;\r\n}\r\n\r\nimg.Language-Desktop-Icon {\r\n  position: absolute;\r\n  bottom: 1px;\r\n  left: 1px;\r\n  width: 123px;\r\n  height: 45px;\r\n  object-fit: contain;\r\n  /*box-shadow: 0 1px 1px 0 rgba(61, 142, 207, 0.15);*/\r\n}\r\n",
                    "styleUrl": "./button-globe.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 41
                    }
                }
            },
            "templateData": "<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/GlobeIcon.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n</div>\n"
        },
        {
            "name": "ButtonLanguageComponent",
            "id": "component-ButtonLanguageComponent-07f2bb687eb4b1639383bc54611b46837d23181566e894a8b918de081c97c875446284ccffe523f41fed9f465daecd08549d996d1868aea5bf78686e9322d819",
            "file": "src/stories/buttons/button-language/button-language.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-language",
            "styleUrls": [
                "./button-language.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button-language.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "TranslateService",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isNotify",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'accGateButton2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 844,
                            "end": 857,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 845,
                                "end": 853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 42,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "popover",
                    "defaultValue": "{\n    content: ActionLanguageComponent\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PopoverOptions",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {PopoverOptions} from \"../../directive/popover.interface\";\nimport {ActionLanguageComponent} from \"../../actions/action-language/action-language.component\";\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\n\n\n@Component({\n  selector: 'storybook-button-language',\n  templateUrl: './button-language.component.html',\n  styleUrls: ['./button-language.component.css']\n})\nexport class ButtonLanguageComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output() onClick = new EventEmitter<Event>();\n\n  @Input() _translate?: TranslateService;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n  popover: PopoverOptions = {\n    content: ActionLanguageComponent\n  };\n\n  @Input()\n  isNotify: boolean = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".Vector {\r\n  position: absolute;\r\n  top: 54px;\r\n  right: 38px;\r\n  width: 49px;\r\n  height: 46px;\r\n\r\n}\r\n\r\nbutton {\r\n  padding-left: 0;\r\n  padding-right: 50px;\r\n  padding-bottom: 30px;\r\n}\r\n\r\nbutton:hover, button:focus, .button:hover, .button:focus {\r\n  background-color: rgba(173, 219, 255, 0);\r\n}\r\n\r\nimg.Language-Desktop-Icon {\r\n  position: absolute;\r\n  top: 1px;\r\n  right: 1px;\r\n  width: 26px;\r\n  height: 26px;\r\n  object-fit: contain;\r\n  box-shadow: 0 1px 1px 0 rgba(61, 142, 207, 0.15);\r\n}\r\n",
                    "styleUrl": "./button-language.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 57
            },
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 46
                    }
                }
            },
            "templateData": "<div [languagePopover] = \"this.popover\" header=\"'this.header'\" [bubbleOn]=\"this.isNotify\" [_translate]=\"this._translate\" class=\"Vector\">\n  <button  (click)=\"this.onClick.emit($event);\">\n<img [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./stories/assets/images/language-desktop-icon.png\"\n       srcset=\"./stories/assets/images/language-desktop-icon@2x.png 2x,\n             ./stories/assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/></button>\n</div>\n"
        },
        {
            "name": "ButtonPassHideComponent",
            "id": "component-ButtonPassHideComponent-9b6b060b5548518daccf5dc19a8542e455f4b5da97237c0e92b7515af6f75a7fc4bfec9866940ed899ba21d90dd388777cd79f98c4fbd61eb50d123815b7cd0a",
            "file": "src/stories/buttons/button-pass-hide/button-pass-hide.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-pass-hide",
            "styleUrls": [
                "./button-pass-hide.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-pass-hide.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "'hide'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 39,
                    "type": "EventEmitter"
                },
                {
                    "name": "onStateChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 25,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeStae",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-pass-hide',\n  templateUrl: './button-pass-hide.component.html',\n  styleUrls: ['./button-pass-hide.component.scss']\n})\nexport class ButtonPassHideComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onStateChange: EventEmitter<string> = new EventEmitter<string>();\n\n  @Input()\n  state: string = 'hide';\n\n  changeStae() {\n    this.state = (this.state == 'show' ? 'hide' : 'show')\n    this.onStateChange.emit(this.state);\n  }\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-pass-hide--primary' : 'storybook-button-pass-hide--secondary';\n\n    return ['storybook-button-pass-hide', `storybook-button-pass-hide--${this.state}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button.Vector {\r\n  position: absolute;\r\n  width: 34px;\r\n  height: 22px;\r\n  padding: 0;\r\n  margin: 0;\r\n  border-bottom-width: 0;\r\n  //background-color: rgba(45, 148, 55, 0);\r\n\r\n  &:focus {\r\n    background-color: #ADDBFF;\r\n    border-radius: 25px;\r\n\r\n  }\r\n\r\n  &:hover {\r\n    border-color: #ADDBFF;\r\n    border-radius: 25px;\r\n  }\r\n}\r\n\r\n.Pass-Hide-Icon {\r\n  position: absolute;\r\n  top: 1px;\r\n  right: 1px;\r\n  width: 33px;\r\n  height: 20px;\r\n\r\n  &:focus {\r\n    background-color: #ADDBFF;\r\n    border-radius: 25px;\r\n\r\n  }\r\n\r\n  &:hover {\r\n    border-color: #ADDBFF;\r\n    border-radius: 25px;\r\n  }\r\n}\r\n\r\n\r\n.storybook-button-pass-hide--show {\r\n    background-size: cover;\r\n    background-origin: border-box;\r\n    background-image: url(\"../../assets/images/EyeIcon1.png\");\r\n    background-repeat: no-repeat;\r\n    background-position: top left;\r\n}\r\n\r\n.storybook-button-pass-hide--hide {\r\n    background-size: cover;\r\n    background-origin: border-box;\r\n    background-image: url(\"../../assets/images/EyeIcon2.png\");\r\n    background-repeat: no-repeat;\r\n    background-position: top left;\r\n}\r\n\r\n",
                    "styleUrl": "./button-pass-hide.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 41
                    }
                }
            },
            "templateData": "\n<button class=\"Vector\" (keydown.enter)=\"this.changeStae()\" (click)=\"onClick.emit($event)\" >\n\n    <image  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n           class=\"Pass-Hide-Icon\"  (click)=\"this.changeStae()\"></image>\n\n</button>\n\n"
        },
        {
            "name": "ButtonTadiranComponent",
            "id": "component-ButtonTadiranComponent-b16677aa1a775c3bc5332adb3d8e478266b6e872ddb6615317349032ec276a3053690d87b3d4c9553117bb55988c56c74e4feff947d716a0521db8d3c0467ba0",
            "file": "src/stories/buttons/button-tadiran/button-tadiran.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-tadiran",
            "styleUrls": [
                "./button-tadiran.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"storybook-button-tadiran\">    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"language-desktop-icon\"/>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "gallery",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this gallery attribute are set?\n",
                    "description": "<p>Is this gallery attribute are set?</p>\n",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'accGateButton2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 970,
                            "end": 983,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 971,
                                "end": 979,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 36,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 50,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-tadiran',\n  /*templateUrl: './button-continue.component.html',*/\n  template: `<div class=\"storybook-button-tadiran\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"language-desktop-icon\"/>\n  </div>`,\n  styleUrls: ['./button-tadiran.component.scss'],\n})\nexport class ButtonTadiranComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-tadiran--set-in' : 'storybook-button-tadiran--set-out';\n\n    return ['storybook-button-tadiran', `storybook-button-tadiran--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button-tadiran {\r\n  position: absolute;\r\n  bottom: 50px;\r\n  left: 30px;\r\n  width: 151px;\r\n  height: 39px;\r\n}\r\n\r\nimg.Language-Desktop-Icon {\r\n  position: absolute;\r\n  bottom: 1px;\r\n  left: 1px;\r\n  width: 151px;\r\n  height: 39px;\r\n  object-fit: contain;\r\n  /*box-shadow: 0 1px 1px 0 rgba(61, 142, 207, 0.15);*/\r\n}\r\n\r\n\r\n.storybook-button-tadiran--primary {\r\n  top: 50px;\r\n  bottom: unset;\r\n  left: 30px;\r\n}\r\n\r\n.storybook-button-tadiran--secondary {\r\n  top: unset;\r\n  bottom: 50px;\r\n  left: 30px;\r\n}\r\n",
                    "styleUrl": "./button-tadiran.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 52
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-dfe279c24d717c8e822567caa1cd69e8618a2dc0c07ab178f2211c08b8daabf3cc598936642d32bcb09489cf0d244d4455d38e4269c4c610aff47c3ce0088453",
            "file": "src/stories/cards/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-card",
            "styleUrls": [
                "./card.css"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 598,
                            "end": 612,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 599,
                                "end": 607,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.css']\r\n})\r\nexport default class CardComponent  {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".Vector {\r\n  position: absolute;\r\n  width: 637.5px;\r\n  height: 819px;\r\n  left: calc(50% - 637.5px/2 - 1.25px);\r\n  top: calc(50% - 819px/2 - 0.5px);\r\n}\r\n\r\n.card {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  /* Width: 42.65625%;\r\n  left: 28.671875%;\r\n   right: 28.671875%;\r\n   Width: 42.65625%;*/\r\n  border-radius: 14px;\r\n  box-shadow: -4px 4px 10px 0 rgba(88, 166, 228, 0.3);\r\n  background-color: #FFFFFF;/**/\r\n}\r\n\r\n\r\n\r\n.storybook-card {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-card--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-card--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-card--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-card--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-card--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./card.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 45
                    }
                }
            },
            "templateData": "\r\n  <div class=\"card\">\r\n\r\n  </div>\r\n\r\n\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LoginFormComponent",
            "id": "component-LoginFormComponent-e77972405bbd069b4471afa639145b4d1447d9973654d5e598386a6f57d2dd2dab3ae70b363d4786c5f0f93a31e5c5183efb700996a3754e507e0692b6c6fa1b",
            "file": "src/stories/forms/login-form/login-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-login-form",
            "styleUrls": [
                "./login-form.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "formService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "AuthService",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isLoginFailed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loginErrorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mForm",
                    "defaultValue": "new FormGroup({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "storyInputs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "StoryInput[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveInput",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onPinInput",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "sendLoginReq",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "extractDirection",
                    "args": [],
                    "optional": false,
                    "returnType": "Direction",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openReplacePassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../../inputs/input/story-input.model\";\r\nimport { AuthService } from '../../../app/_services/auth.service';\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\nexport declare type Direction = 'ltr' | 'rtl';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.css'],\r\n})\r\nexport default class LoginFormComponent implements OnInit {\r\n\r\n  constructor(public _translate: TranslateService) {}\r\n\r\n\r\n  extractDirection(): Direction {\r\n    if (this._translate)\r\n      if (this._translate.currentDir)\r\n        if (this._translate.currentDir == 'rtl')\r\n          return 'rtl';\r\n    return 'ltr'\r\n  }\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  @Input() isLoginFailed = false;\r\n\r\n  @Input() loginErrorMessage = '';\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendLoginReq = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n\r\n    this.sendLoginReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".Vector {\r\n  position: relative;\r\n  width: 637.5px;\r\n  height: 819px;\r\n  left: calc(50% - 637.5px/2 - 1.25px);\r\n  top: calc(50% - 819px/2 - 0.5px);\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  left: 3.18%;\r\n  right: 14.78%;\r\n  top: 0;\r\n  bottom: 0;\r\n  border-radius: 14px;\r\n  box-shadow: -4px 4px 10px 0 rgba(88, 166, 228, 0.3);\r\n  background-color: #fff;\r\n}\r\n\r\n.card-container.card {\r\n  max-width: 400px !important;\r\n  padding: 10px 10px;\r\n}\r\n.col-md-12{\r\n  position: center;\r\n  width: 637.5px;\r\n  height: 819px;\r\n  left: calc(50% - 637.5px/2 - 0.25px);\r\n  top: calc(50% - 819px/2 - 0.5px);\r\n}\r\n\r\n.card {\r\n  position: absolute;\r\n  left: 5.18%;\r\n  right: 4.78%;\r\n  top: 0;\r\n  bottom: 0;\r\n  border-radius: 14px;\r\n  box-shadow: -4px 4px 10px 0 rgba(88, 166, 228, 0.3);\r\n  background-color: #fff;\r\n}\r\n\r\n\r\n.form-header {\r\n  position: absolute;\r\n  top: 8.94%;\r\n  bottom: 77.05%;\r\n\r\n  width: 447px;\r\n  height: 82px;\r\n  flex-grow: 0;\r\n  margin: 0 0 19.8px;\r\n  font-family: \"Noto Sans\", ui-serif;\r\n  font-size: 40px;\r\n  font-weight: bolder;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: 45px;\r\n  letter-spacing: -0.011px;\r\n  text-align: left;\r\n  color: #000000;\r\n}\r\n\r\n.login-button {\r\n  position: relative;\r\n  width: 445px;\r\n  height: 102px;\r\n  left: calc(50% - 445px/2 - 0.5px);\r\n  top: calc(50% - 61.16px/2 - 171.58px);\r\n}\r\n\r\n\r\n.forgot-password {\r\n  /* D UnderLine Regular */\r\n\r\n  font-family: \"Noto Sans\", ui-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 17px;\r\n  line-height: 31px;\r\n  /* identical to box height, or 183% */\r\n\r\n  display: flex;\r\n  align-items: unset;\r\n  text-align: center;\r\n  letter-spacing: -0.011em;\r\n  text-decoration-line: underline;\r\n\r\n  color: #000000;\r\n}\r\n\r\n\r\n\r\n.thematic-break {\r\n  margin: 20px 2px 16px 2.5px;\r\n  background-color: #3d8ecf;\r\n  border-top-width: 1px;\r\n  border-top-color: rgb(61, 142, 207);\r\n  border-top-style: solid;\r\n\r\n\r\n\r\n}\r\n\r\n.login-failed-message {\r\n  position: relative;\r\n  height: 55px;\r\n\r\n\r\n  /* D Regular */\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 17px;\r\n  line-height: 31px;\r\n  /* identical to box height, or 183% */\r\n\r\n  align-items: start;\r\n  letter-spacing: -0.011em;\r\n\r\n  /* Red */\r\n\r\n  color: #FA4F4F;\r\n\r\n}\r\n",
                    "styleUrl": "./login-form.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "storyInputs": {
                    "name": "storyInputs",
                    "setSignature": {
                        "name": "storyInputs",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "arr",
                                "type": "StoryInput[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 67,
                        "jsdoctags": [
                            {
                                "name": "arr",
                                "type": "StoryInput[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "userName": {
                    "name": "userName",
                    "getSignature": {
                        "name": "userName",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 90
                    }
                },
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 94
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 98
                    }
                },
                "phone": {
                    "name": "phone",
                    "getSignature": {
                        "name": "phone",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 102
                    }
                }
            },
            "templateData": "\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"form-header\">\r\n      <a >{{'Aeonix App Center' | translate}}</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div  *ngIf=\"!isLoggedIn\" class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n\r\n            <div *ngIf=\"isLoggedIn\">isConfigSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              [toFocus]=true\r\n              [direction]=\"this.extractDirection()\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              [direction]=\"this.extractDirection()\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n\r\n            <br>\r\n            <div class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isLoginFailed && loginErrorMessage.length>0\" [dir]=\"this._translate?.currentDir ?? 'ltr'\">*  {{ loginErrorMessage.toString() | translate  }}</p>\r\n            </div>\r\n\r\n\r\n            <!--a (click)=\"this.openForgetPassForm.emit();\" class=\"forgot-password\" [dir]=\"this._translate!.currentDir\" >\r\n              {{ 'Forgot Password?' | translate}}\r\n            </a-->\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"{{'Continue' | translate}}\" type=\"button\" (click)=\"onSubmit()\" ></storybook-button-continue>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "LoginMainComponent",
            "id": "component-LoginMainComponent-751943e63e9c2c135c81850126bd8412be6192dc1345c8aaad316666315de4e3bdd4971644e74dfef99b8cc4e868a57722911cd85f033fd3d5e5d51b7e352c7d",
            "file": "src/app/login2/login-main/login-main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "login-main",
            "styleUrls": [
                "./login-main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-main.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Login2Component'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1896,
                            "end": 1909,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1897,
                                "end": 1905,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 71,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ACC_VERSION",
                    "defaultValue": "'ACC_VERSION'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "eventBusSubLoginMain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isLoginFailed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "loginErrorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "mainHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 82,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formHeader', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "roles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "storyInputsInOrder",
                    "defaultValue": "[\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './stories/assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './stories/assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryInput[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n"
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changLanguage",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "profile2",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reloadPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setPasswordCurrentFieldValue",
                    "args": [
                        {
                            "name": "pass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUsernameCurrentFieldValue",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ElementRef, Input, OnDestroy, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {StoryInput} from \"../../../stories/inputs/input/story-input.model\";\nimport {AuthService} from \"../../_services/auth.service\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"../../_services/token-storage.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../_services/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {AppConfig} from \"../../app.config\";\n\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss'],\n})\nexport class LoginMainComponent implements OnInit, OnDestroy {\n\n  public isLoggedIn = false;\n  isLoginFailed = false;\n  loginErrorMessage = '';\n  roles: string[] = [];\n  public isLoading = false;\n  eventBusSubLoginMain?: Subscription;\n\n\n\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  storyInputsInOrder: StoryInput[]  = [\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './stories/assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './stories/assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ];\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Login2Component';\n\n\n  loginForm: FormGroup;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-page2--primary' : 'storybook-page2--secondary';\n\n    return ['storybook-page2', mode];\n  }\n\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              public authService: AuthService,\n              public userService: UserService,\n              private tokenStorage: TokenStorageService,\n              private router: Router,\n              private activatedRoute:ActivatedRoute) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('', Validators.minLength(2)),\n    });\n\n  }\n\n\n  public ACC_VERSION: string = 'ACC_VERSION';\n\n  ngOnInit(): void {\n\n    this.userService.getAccVersion().subscribe(\n      data => { this.ACC_VERSION = data; AppConfig.webAppVersion = data; },\n      err => { this.ACC_VERSION = JSON.parse(err.error).message; }\n    );\n\n  };\n\n\n  get getUsernameCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('username')?.value;\n  }\n\n  private setUsernameCurrentFieldValue(name: string) {\n    this.loginForm.get('username')?.setValue(name);\n  }\n\n  get getPasswordCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('password')?.value;\n  }\n\n  private setPasswordCurrentFieldValue(pass: string) {\n    this.loginForm.get('password')?.setValue(pass);\n  }\n\n\n  onSubmit(): void {\n    console.warn('Login Request from login-main!');\n    const { username, password } = this.loginForm.value;\n\n    this.isLoading = true;\n    this.authService.login(username, password).subscribe(\n        (data: { accessToken: any; refreshToken: any; }) => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.profile2();\n      },\n        (err: { error: { message: string; }; }) => {\n        switch (err.error.message) {\n          case \"Error: A registry process should be made!\":\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\n            //toPromise((data) => {this.openReplacePassword()});\n            break;\n          case \"User credentials have expired\":\n            break;\n          default:\n            this.loginErrorMessage = err.error.message;\n        }\n\n        this.isLoginFailed = true;\n        this.isLoading = false;\n      },\n      () => { this.isLoading = false; })\n  }\n\n  reloadPage(): void {\n    this.router.navigate(['/login-main']).then(() => {window.location.reload()});\n  }\n\n  profile2(): void {\n    this.router.navigate(['../profile2'], {relativeTo: this.activatedRoute});\n  }\n\n\n  changLanguage(event: Event) {\n    //\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.eventBusSubLoginMain)\n      this.eventBusSubLoginMain.unsubscribe();\n  }\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.storybook-login2 {\r\n  position: absolute;\r\n  width: inherit;\r\n  height: inherit;\r\n}\r\n\r\n.Desktop-1Login-1 {\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-grow: 0;\r\n}\r\n\r\n.storybook-spinner1 {\r\n  position: absolute;\r\n  width: 70px;\r\n  height: 70px;\r\n  left: calc(50% - 75px/2 - 0.25px);\r\n  top: calc(50% - 38px/2 - 0.5px);\r\n}\r\n",
                    "styleUrl": "./login-main.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tokenStorage",
                        "type": "TokenStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 82,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tokenStorage",
                        "type": "TokenStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 76
                    }
                },
                "getUsernameCurrentFieldValue": {
                    "name": "getUsernameCurrentFieldValue",
                    "getSignature": {
                        "name": "getUsernameCurrentFieldValue",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 111
                    }
                },
                "getPasswordCurrentFieldValue": {
                    "name": "getPasswordCurrentFieldValue",
                    "getSignature": {
                        "name": "getPasswordCurrentFieldValue",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 119
                    }
                }
            },
            "templateData": "\n<html >\n<head>\n  <style>\n\n  </style>\n  <title></title>\n</head>\n<body>\n\n<!--article><div class=\"Frame-1 relative\">\n<section class=\"relative \" Style=\"{ 'background': backgroundColor }\"-->\n\n<!--storybook-button-globe></storybook-button-globe-->\n\n<storybook-background1\n  (changeLang)=\"changLanguage($event)\"\n  [ACC_VERSION]=\"this.ACC_VERSION\">\n</storybook-background1>\n\n\n<!--button mat-raised-button (click)=\"openReplacePassForm()\">ReplacePassForm</button>\n<button mat-raised-button (click)=\"openRegisterForm()\">RegisterForm</button>\n<button mat-raised-button (click)=\"openVerificationForm()\">VerificationForm</button>\n<button mat-raised-button (click)=\"openForgotPassForm()\">forgotPassForm</button>\n<button mat-raised-button (click)=\"profile2()\">profile2</button>\n<button mat-raised-button (click)=\"configuratin()\">configuratin</button>\n<button mat-raised-button (click)=\"home2()\">home2</button-->\n\n\n<storybook-login-form\n  [isLoggedIn]=\"false\"\n  [isLoading]=\"isLoading\"\n  [isLoginFailed]=\"isLoginFailed\"\n  [loginErrorMessage]=\"loginErrorMessage\"\n  [mForm]=\"loginForm\"\n  [storyInputs]=\"storyInputsInOrder\"\n  (sendLoginReq)=\"onSubmit()\"\n></storybook-login-form>\n\n<storybook-spinner1 *ngIf=\"isLoading\"  class=\"storybook-spinner1\"></storybook-spinner1>\n<!--/section></div>\n</article-->\n\n</body>\n</html>\n\n\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "Spinner1Component",
            "id": "component-Spinner1Component-93e9e7f2ec7439df4c2cfad4dbf0d9812455450bc7b0a6d74a361856e01a8c10a8fc3fe17a23efa7e9dad7c88dd615b0d205104dc1284b72859738c055b75e7a",
            "file": "src/stories/spinners/spinner1/spinner1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-spinner1",
            "styleUrls": [
                "./spinner1.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./spinner1.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'accGateButton2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 579,
                            "end": 592,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 580,
                                "end": 588,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the login-main?\n",
                    "description": "<p>Is this the principal call to action on the login-main?</p>\n",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 25,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-spinner1',\n  templateUrl: './spinner1.component.html',\n  styleUrls: ['./spinner1.component.css']\n})\nexport class Spinner1Component {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button.Vector {\r\n  position: absolute;\r\n  width: 70px;\r\n  height: 70px;\r\n  padding: 0;\r\n  margin: 0;\r\n  background: rgba(255, 255, 255, 0);\r\n}\r\n\r\nimg.Ex-Icon {\r\n  position: absolute;\r\n  top: 1px;\r\n  right: 1px;\r\n  width: 69px;\r\n  height: 69px;\r\n  object-fit: contain;\r\n  box-shadow: 0 1px 1px 0 rgba(61, 142, 207, 0.15);\r\n}\r\n",
                    "styleUrl": "./spinner1.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 41
                    }
                }
            },
            "templateData": "\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./stories/assets/images/Spinner1.gif\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n"
        },
        {
            "name": "StoryInputComponent",
            "id": "component-StoryInputComponent-9aa1f96d960e36ae52f28e58bdb921605d7cf053eebf3ebe59ce734de61203d88c458f9872f71808bf05d474bb0b24e29137a51ddd92046cb89cbd5e17fe5319",
            "file": "src/stories/inputs/input/story-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-input",
            "styleUrls": [
                "./story-input.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./story-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "conditionList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "currentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "defaultValue": "'ltr'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "\"rtl\" | \"ltr\"",
                    "decorators": []
                },
                {
                    "name": "hideInput",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "'edit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "storyInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "StoryInput",
                    "decorators": []
                },
                {
                    "name": "toFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveInput",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinInput",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isPasswordTextHide",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isStrength",
                    "defaultValue": "(this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 79,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mInput', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "popover",
                    "defaultValue": "{\r\n    content: ActionInputComponent\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PopoverOptions",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrorHeader",
                    "args": [
                        {
                            "name": "controllerType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "controllerType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrorList",
                    "args": [
                        {
                            "name": "conditionList",
                            "type": "String[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ActionInput[]",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "conditionList",
                            "type": "String[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 295,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onArchive",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 281,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nComponent method to trigger the onArchive event\n",
                    "description": "<p>Component method to trigger the onArchive event</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 8080,
                                "end": 8082,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "id"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 8074,
                                "end": 8079,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPin",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nComponent method to trigger the onPin event\n",
                    "description": "<p>Component method to trigger the onPin event</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7931,
                                "end": 7933,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "id"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7925,
                                "end": 7930,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                },
                {
                    "name": "onStateChange",
                    "args": [
                        {
                            "name": "state",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showPassChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  Component, ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output, Renderer2, Type, ViewChild\r\n} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\nimport {TranslateService} from \"../../pipes/translate/translate.service\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit, AfterViewInit{\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n  @Input() hideInput = false;\r\n\r\n  @Input() toFocus: boolean = false;\r\n\r\n  @Input() direction: 'rtl' | 'ltr' = 'ltr';\r\n\r\n  constructor(public _translate: TranslateService,\r\n              public renderer: Renderer2) {}\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n\r\n  @ViewChild('mInput', { static: false }) mInput?: ElementRef;\r\n\r\n  @Input() state: string = 'edit';\r\n\r\n  onStateChange(state: string) {\r\n    if (state == 'edit' || state == 'gray') {this.state = state;}\r\n    switch (state) {\r\n      case 'gray':\r\n        this.renderer.setAttribute(this.mInput?.nativeElement ,'readonly', 'true');\r\n        this.renderer.setAttribute(this.mInput?.nativeElement ,'style', 'background-color: #ebf1f2;');\r\n        break;\r\n      case 'edit':\r\n        this.renderer.removeAttribute(this.mInput?.nativeElement ,'readonly');\r\n        this.renderer.removeAttribute(this.mInput?.nativeElement ,'style');\r\n        break;\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"requiresMinLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresMinLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters ',\r\n            \"isFulfilled\":  !(this.requiresMinLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"no2AdjacentIdenticalChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"no2AdjacentIdenticalCharsValid\",\r\n            \"presentingMessage\": \" No more than 2 adjacent identical characters\",\r\n            \"isFulfilled\": (this.no2AdjacentIdenticalCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEnglishLettersOnly\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEnglishLettersOnlyValid\",\r\n            \"presentingMessage\": \" English letters only\",\r\n            \"isFulfilled\": (this.requiresEnglishLettersOnlyValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresMinLengthValid() {\r\n    return this.formControler.hasError(\"requiresMinLength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get no2AdjacentIdenticalCharsValid() {\r\n    return this.formControler.hasError(\"no2AdjacentIdenticalChars\");\r\n  }\r\n\r\n  get requiresEnglishLettersOnlyValid() {\r\n    return this.formControler.hasError(\"requiresEnglishLettersOnly\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength', `storybook-input--${this.direction}`, this.isStrength];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.onStateChange(this.state);\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n\r\n\r\n$direction-start: left !default;\r\n$tottal-height: 160px !default;\r\n\r\n\r\n\r\n.main {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 102px;\r\n  top: 0;\r\n  /*left: calc(50% - 445px/2 - 0.5px);\r\n  top: calc(50% - 101.16px/2 - 171.58px);\r\n  margin-bottom: 20px;*/\r\n  background-color: rgba(255, 255, 255, 0);\r\n\r\n}\r\n\r\n#storybook-pass {\r\n  border: 1px solid rgba(255, 0, 0, 0.11);\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n#parent1 {\r\n  position: sticky;\r\n  top: 1px;\r\n  height: 100px;\r\n  width: 100%;\r\n  /*border: 1px solid #c0077f;*/\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n#parent2 {\r\n  position: absolute;\r\n  height: 45px;\r\n  width: 100%;\r\n  margin-top: 3px;\r\n  /*margin-bottom: 3px;*/\r\n  bottom: 0;\r\n  /*border: 1px solid #8AC007;\r\n  background-color: rgba(255, 255, 255, 0);*/\r\n}\r\n\r\n#parent3 {\r\n  position: relative;\r\n  width: 100%;\r\n  /*height: 160px ;\r\n   border: 1px solid #072cc0;\r\nmargin-bottom: 3px;*/\r\n  /*background-color: rgba(255, 255, 255, 0);*/\r\n}\r\n\r\n/*\r\nspan.absolute {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 28px;\r\n  bottom: 0;\r\n  border: 1px solid #8AC007;\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n*/\r\n\r\n\r\n.user-name:dir(ltr) {\r\n\r\n  position: absolute;\r\n  width: 300px;\r\n  height: 35px;\r\n  left: 0;\r\n\r\n /* right: 82.7%;*/\r\n  top: 10%;\r\n  bottom: 68.37%;\r\n  /* identical to box height, or 223% */\r\n  display: flex;\r\n  align-items: center;\r\n  letter-spacing: -0.011em;\r\n  text-transform: uppercase;\r\n\r\n  color: #000000;\r\n}\r\n\r\n\r\n.user-name:dir(rtl) {\r\n\r\n  position: absolute;\r\n  width: 300px;\r\n  height: 35px;\r\n  right: 0;\r\n  /*right: 82.7%;*/\r\n  top: 10%;\r\n  bottom: 68.37%;\r\n  /* identical to box height, or 223% */\r\n  display: flex;\r\n  align-items: center;\r\n  letter-spacing: -0.011em;\r\n  text-transform: uppercase;\r\n\r\n  color: #000000;\r\n}\r\n\r\n\r\n/* D Caps Regular */\r\n.D-Caps-Regular {\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 31px;\r\n}\r\n\r\n\r\n\r\nimg.icon-input {\r\n  position: absolute;\r\n  width: 22.72px;\r\n  height: 26.74px;\r\n  bottom: 7px;\r\n\r\n  transform: rotate(0deg);\r\n  background-position: bottom;\r\n}\r\n\r\n\r\n\r\n.inputField {\r\n  position: relative;\r\n  height: 25px;\r\n  width: 345px;\r\n  left: 45px;\r\n  bottom: -5px;\r\n  margin: 4.2px 1px 2.8px 0.3px;\r\n\r\n  /* D Example Italic */\r\n  object-fit: contain;\r\n  font-family: Noto Sans, ui-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 17px;\r\n  line-height: 48%;\r\n  /* or 65% */\r\n\r\n  box-shadow: none;\r\n  display: flex;\r\n  align-items: center;\r\n  letter-spacing: -0.19px;\r\n\r\n  border-color: rgba(255, 255, 255, 0);\r\n  color: #000000;\r\n}\r\n\r\n\r\n.icon-input-showpass {\r\n  position: absolute;\r\n  width: 34px;\r\n  height: 22px;\r\n  left: 5px;\r\n  bottom: 12px;\r\n  padding: 0px;\r\n  margin: 0;\r\n  border-bottom-width: 0px;\r\n  background-color: rgba(45, 148, 55, 0);\r\n}\r\n\r\nimg.icon-input-showpass {\r\n  position: absolute;\r\n  bottom: 1px;\r\n  right: 1px;\r\n  width: inherit;\r\n  height: inherit;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  /*object-fit: contain;\r\n  box-shadow: 0 1px 1px 0 rgba(61, 142, 207, 0.15);*/\r\n\r\n}\r\n\r\ninput:focus {\r\n  background: #99999900;\r\n  box-shadow: 0 0 5px #99999900;\r\n  border-top-color: #99999900;\r\n  border-left-color: #99999900;\r\n  border-right-color: #99999900;\r\n}\r\n\r\ninput:focus-visible {\r\n  color: #000000;\r\n  background: #99999900;\r\n  box-shadow: 0 0 5px #99999900;\r\n  border-top-color: #99999900;\r\n  border-left-color: #99999900;\r\n  border-right-color: #99999900;\r\n}\r\n\r\ninput::placeholder {\r\n  color: #C8C8C8;\r\n}\r\n\r\ninput[type=password]:focus {\r\n  color: #000000;\r\n  background: #99999900;\r\n  box-shadow: 0 0 5px #99999900;\r\n  border-top-color: #99999900;\r\n  border-left-color: #99999900;\r\n  border-right-color: #99999900;\r\n}\r\n\r\ninput[type=tel]:focus {\r\n  background: #99999900;\r\n  box-shadow: 0 0 5px #99999900;\r\n  border-top-color: #99999900;\r\n  border-left-color: #99999900;\r\n  border-right-color: #99999900;\r\n}\r\n\r\n.Vector2 {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n\r\n\r\n  left: 0.2%;\r\n  right: 0.03%;\r\n  top: 42.66%;\r\n  bottom: 0;\r\n\r\n  /* Blue */\r\n  border: 2px solid #3D8ECF;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\n\r\n.Button-App-Label {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 33px;\r\n  horiz-align: center;\r\n\r\n}\r\n\r\n.storybook-input--addStrength {\r\n    height: 160px;\r\n}\r\n\r\n.storybook-input--clearStrength {\r\n    height: 110px;\r\n}\r\n\r\n\r\n.storybook-input--rtl {\r\n  img.icon-input {\r\n    left: unset;\r\n    right: 17px;\r\n  }\r\n\r\n  .icon-input-showpass {\r\n    right: unset;\r\n    left: 5px;\r\n  }\r\n\r\n}\r\n\r\n.storybook-input--ltr {\r\n  img.icon-input {\r\n    right: unset;\r\n    left: 17px;\r\n  }\r\n\r\n  .icon-input-showpass {\r\n    left: unset;\r\n    right: 5px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./story-input.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "_translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "accessors": {
                "username": {
                    "name": "username",
                    "getSignature": {
                        "name": "username",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 97
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 101
                    }
                },
                "passwordValid": {
                    "name": "passwordValid",
                    "getSignature": {
                        "name": "passwordValid",
                        "type": "",
                        "returnType": "",
                        "line": 217
                    }
                },
                "requiredValid": {
                    "name": "requiredValid",
                    "getSignature": {
                        "name": "requiredValid",
                        "type": "",
                        "returnType": "",
                        "line": 221
                    }
                },
                "minLengthValid": {
                    "name": "minLengthValid",
                    "getSignature": {
                        "name": "minLengthValid",
                        "type": "",
                        "returnType": "",
                        "line": 225
                    }
                },
                "requiresMinLengthValid": {
                    "name": "requiresMinLengthValid",
                    "getSignature": {
                        "name": "requiresMinLengthValid",
                        "type": "",
                        "returnType": "",
                        "line": 229
                    }
                },
                "requiresDigitValid": {
                    "name": "requiresDigitValid",
                    "getSignature": {
                        "name": "requiresDigitValid",
                        "type": "",
                        "returnType": "",
                        "line": 233
                    }
                },
                "requiresUppercaseValid": {
                    "name": "requiresUppercaseValid",
                    "getSignature": {
                        "name": "requiresUppercaseValid",
                        "type": "",
                        "returnType": "",
                        "line": 237
                    }
                },
                "requiresLowercaseValid": {
                    "name": "requiresLowercaseValid",
                    "getSignature": {
                        "name": "requiresLowercaseValid",
                        "type": "",
                        "returnType": "",
                        "line": 241
                    }
                },
                "requiresSpecialCharsValid": {
                    "name": "requiresSpecialCharsValid",
                    "getSignature": {
                        "name": "requiresSpecialCharsValid",
                        "type": "",
                        "returnType": "",
                        "line": 245
                    }
                },
                "no2AdjacentIdenticalCharsValid": {
                    "name": "no2AdjacentIdenticalCharsValid",
                    "getSignature": {
                        "name": "no2AdjacentIdenticalCharsValid",
                        "type": "",
                        "returnType": "",
                        "line": 249
                    }
                },
                "requiresEnglishLettersOnlyValid": {
                    "name": "requiresEnglishLettersOnlyValid",
                    "getSignature": {
                        "name": "requiresEnglishLettersOnlyValid",
                        "type": "",
                        "returnType": "",
                        "line": 253
                    }
                },
                "requiresEmailValid": {
                    "name": "requiresEmailValid",
                    "getSignature": {
                        "name": "requiresEmailValid",
                        "type": "",
                        "returnType": "",
                        "line": 257
                    }
                },
                "requiresPhoneValid": {
                    "name": "requiresPhoneValid",
                    "getSignature": {
                        "name": "requiresPhoneValid",
                        "type": "",
                        "returnType": "",
                        "line": 261
                    }
                },
                "formControler": {
                    "name": "formControler",
                    "getSignature": {
                        "name": "formControler",
                        "type": "",
                        "returnType": "AbstractControl",
                        "line": 265
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 285
                    }
                }
            },
            "templateData": "<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n<div  id=\"parent1\" >\r\n  <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n  <div>\r\n  <p [dir]=\"this.direction\" class=\"user-name D-Caps-Regular\">{{storyInput.state  | translate}} </p>\r\n\r\n  <br>\r\n  <label  [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n    <img  src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n    <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n    <input #mInput\r\n      readonly=\"true\"\r\n      style=\"background-color: #ebf1f2;\"\r\n      [dir]=\"direction\"\r\n      type=\"{{storyInput?.type}}\"\r\n      id=\"{{ storyInput?.id }}\"\r\n      class=\"inputField\"\r\n      name=\"{{storyInput?.title}}\"\r\n      formControlName=\"{{storyInput?.title}}\"\r\n      placeholder=\"{{storyInput.placeholder | translate }}\"\r\n      oninput=\"/*this.value=this.value.replace(/[^A-Za-z0-9$@!%*#&><{}()+~.?\\n\\r\\s\\t]+/g,'').replace(/ /g,'');*/\"\r\n      required />\r\n    </div>\r\n\r\n    <storybook-button-pass-hide *ngIf=\"this.isPasswordTextHide\" class=\"icon-input-showpass\"\r\n                                (onClick)=\"showPassChange()\"></storybook-button-pass-hide>\r\n\r\n\r\n  <br>\r\n\r\n  <span hidden [ngSwitch]=\"storyInput?.title\" class=\"D-Caps-Regular\"  style=\"line-height: 0\" >\r\n      <span  class=\"position-absolute\"  *ngIf=\"formControler?.invalid && (formControler?.dirty || formControler?.touched)\"  >\r\n          <span *ngSwitchCase=\"'username'\"><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'password'\">\r\n            <br>\r\n            {{storyInput?.state}} is required!\r\n            <!--div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div-->\r\n          </span>\r\n          <span *ngSwitchCase=\"'email'\"   ><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'phone'\"   ><br>{{storyInput?.state}} is required!</span>\r\n\r\n      </span>\r\n      <div   *ngIf=\"formControler?.valid && (formControler?.dirty || formControler?.touched)\">\r\n        <div *ngSwitchCase=\"'username'\">ok!</div>\r\n        <div *ngSwitchCase=\"'password'\">ok!</div>\r\n        <div *ngSwitchCase=\"'email'\"   >ok!</div>\r\n        <div *ngSwitchCase=\"'phone'\"   >ok!</div>\r\n      </div>\r\n\r\n </span>\r\n\r\n  </label>\r\n\r\n\r\n\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n</div>\r\n"
        },
        {
            "name": "UploadFilesComponent",
            "id": "component-UploadFilesComponent-40b9a445286ccadc22ed578ec8373f11e22c366a3f3d4570967cf6b6723f8e7d86d9416cf59a39519de7b347b8f7bf8cb8a63cd59aae2fa07e547a7de4403303",
            "file": "src/app/components/upload-files/upload-files.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-upload-files",
            "styleUrls": [
                "./upload-files.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./upload-files.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<any>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'background', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "fileInfos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "message",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectedFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FileList",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectFiles",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { FileUploadService } from '../../services/file-upload.service';\r\nimport {ThreeService} from \"../../services/three.service\";\r\n\r\n@Component({\r\n  selector: 'app-upload-files',\r\n  templateUrl: './upload-files.component.html',\r\n  styleUrls: ['./upload-files.component.css']\r\n})\r\nexport class UploadFilesComponent implements OnInit {\r\n\r\n\r\n\r\n  @ViewChild('background', { static: true }) background!: ElementRef<any>;\r\n\r\n  selectedFiles?: FileList;\r\n  message: string[] = [];\r\n\r\n  fileInfos!: Observable<any>;\r\n\r\n  constructor(private uploadService: FileUploadService, private threeService: ThreeService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.threeService.init(this.background);\r\n    this.fileInfos = this.uploadService.getFiles();\r\n  }\r\n\r\n  selectFiles(event: any): void {\r\n    this.message = [];\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  upload(file: File): void {\r\n    if (file) {\r\n      this.uploadService.upload(file).subscribe({\r\n        next: (event: any) => {\r\n          if (event instanceof HttpResponse) {\r\n            const msg = file.name + \": Successful!\";\r\n            this.message.push(msg);\r\n            this.fileInfos = this.uploadService.getFiles();\r\n          }\r\n        },\r\n        error: (err: any) => {\r\n          let msg = file.name + \": Failed!\";\r\n\r\n          if (err.error && err.error.message) {\r\n            msg += \" \" + err.error.message;\r\n          }\r\n\r\n          this.message.push(msg);\r\n          this.fileInfos = this.uploadService.getFiles();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadFiles(): void {\r\n    this.message = [];\r\n\r\n    if (this.selectedFiles) {\r\n      for (let i = 0; i < this.selectedFiles.length; i++) {\r\n        this.upload(this.selectedFiles[i]);\r\n      }\r\n      this.selectedFiles = undefined;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.alert {\r\n  padding-left: 0;\r\n}\r\n\r\n.background {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -100;\r\n  background: linear-gradient(0deg, rgb(164, 164, 164), rgb(255, 255, 255)); /* Gradient from light gray to dark gray */\r\n  /* //background: linear-gradient(45deg, #3164d3, #acdbf5);  Gradient from light gray to dark gray */\r\n}\r\n",
                    "styleUrl": "./upload-files.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "uploadService",
                        "type": "FileUploadService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "threeService",
                        "type": "ThreeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "uploadService",
                        "type": "FileUploadService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "threeService",
                        "type": "ThreeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div #background class=\"background\">\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-8\">\r\n    <label class=\"btn btn-default p-0\">\r\n      <input type=\"file\" multiple (change)=\"selectFiles($event)\" />\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"col-4\">\r\n    <button\r\n      class=\"btn btn-success btn-sm\"\r\n      [disabled]=\"!selectedFiles\"\r\n      (click)=\"uploadFiles()\"\r\n    >\r\n      Upload\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n@if (message.length) {\r\n<div class=\"alert alert-secondary my-3\" role=\"alert\">\r\n  <ul>\r\n    @for (msg of message; track i; let i = $index) {\r\n    <li>{{ msg }}</li>\r\n    }\r\n  </ul>\r\n</div>\r\n}\r\n\r\n<div class=\"card mt-3\">\r\n  <div class=\"card-header\">List of Files</div>\r\n  <ul class=\"list-group list-group-flush\">\r\n    @for (file of fileInfos | async; track file.name) {\r\n    <li class=\"list-group-item\">\r\n      <a href=\"{{ file.url }}\">{{ file.name }}</a>\r\n    </li>\r\n    }\r\n  </ul>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-82ac810bcb0af2408a4fcaf0620fa260a21e20f164e584cb7d472000d83988b2342138495f022134945deba921c18dc4d866cfc057b83a33d9d18c33ee5fda4d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n//import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n//import { AdminComponent } from './admin/admin.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\r\n//import {LoginComponent} from \"./login/login.component\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {UploadFilesComponent} from \"./components/upload-files/upload-files.component\";\r\nimport {RouterModule, RouterOutlet} from \"@angular/router\";\r\nimport { Routes } from '@angular/router';\r\nimport {AdminComponent} from \"./components/admin/admin.component\";\r\nimport {StorybookModule} from \"../stories/storybook/storybook.module\";\r\n\r\nexport const routes: Routes = [\r\n  { path: 'login2', loadChildren: () => \"import('./login2/login2.module').then(m => m.Login2Module)\", },\r\n\r\n  { path: '', redirectTo: 'login2', pathMatch: 'full' },\r\n  //{ path: \"\", component: AppComponent, pathMatch: \"full\" },\r\n  { path: \"uploadfiles\", component: UploadFilesComponent, pathMatch: \"full\" },\r\n  //{ path: \"login\", component: LoginComponent, pathMatch: \"full\" }\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UploadFilesComponent,\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    RouterOutlet,\r\n    StorybookModule,\r\n\r\n  ],\r\n  providers: [\r\n    AppComponent,\r\n    UploadFilesComponent,\r\n    //{provide: LocationStrategy, useClass: HashLocationStrategy}\r\n  ],\r\n  exports: [RouterModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdminComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "UploadFilesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RouterOutlet"
                        },
                        {
                            "name": "StorybookModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Login2Module",
            "id": "module-Login2Module-30306bc5839f6ccc713d486b5daf403f166b18c9dc3837930ece12cc737a0ae45d253ab7ac8417c3bb93d46b2785c8f00b292fc68dc65d6a610d643930e31836",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/login2/login2.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { Login2RoutingModule } from './login2-routing.module';\nimport {LoginMainComponent} from './login-main/login-main.component';\nimport {StorybookModule} from \"../../stories/storybook/storybook.module\";\n\n\n\n\n\n@NgModule({\n  declarations: [\n    LoginMainComponent,\n  ],\n  imports: [\n    Login2RoutingModule,\n    StorybookModule\n  ],\n  exports: [\n\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class Login2Module { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginMainComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Login2RoutingModule"
                        },
                        {
                            "name": "StorybookModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Login2RoutingModule",
            "id": "module-Login2RoutingModule-af2e5f1f4dd6e448a6beb20f26b5f33353bac8fa618e6bf0a4b6c1d9a9bbb96df9cf012eea548c5b42e42a3c80f94500b20a0332382a0e5f9cc226efc88eb678",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/login2/login2-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginMainComponent} from \"./login-main/login-main.component\";\n\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'login-main', component: LoginMainComponent },\n  { path: '', redirectTo: 'login-main', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'login-main', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login2RoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Login2RoutingModule",
            "id": "module-Login2RoutingModule-015403b328d7ff4bdcc4a485096bb936930138bb561712a6158ccd21366e262db5878b3fccb0870905b5c94078c72fd4ecc4134f8958d292ecaf26a2833632da-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/storybook/storybook-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\n\n\nconst routes: Routes = [\n\n  //{ path: 'storybook-button-fortest', component: AvatarComponent },\n  /*{ path: 'regist', component: MyAccountForm2Component },*/\n  /*{ path: 'register-form2', component: MyAccountForm2Component },*/\n  { path: '', redirectTo: 'home', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'home', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login2RoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StorybookModule",
            "id": "module-StorybookModule-5363308d4cd1ed5a2202c13d930c74c57655306d7de7b246df8993191f6a57e0b5c9e3d9d102b6153ccccc92f2eeb1bc7a14234ba4fe0554bd023ac3fde824dd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/storybook/storybook.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {ButtonLanguageComponent} from \"../buttons/button-language/button-language.component\";\nimport {ButtonGlobeComponent} from \"../buttons/button-globe/button-globe.component\";\nimport Background1Component from \"../../stories/backgrounds/background1/background1Component\";\nimport {ButtonTadiranComponent} from \"../buttons/button-tadiran/button-tadiran.component\";\nimport CardComponent from \"../cards/card/card.component\";\nimport LoginFormComponent from \"../forms/login-form/login-form.component\";\nimport {ButtonContinueComponent} from \"../buttons/button-continue/button-continue.component\";\nimport {StoryInputComponent} from \"../inputs/input/story-input.component\";\nimport {Spinner1Component} from \"../spinners/spinner1/spinner1.component\";\nimport {TranslatePipe} from \"../pipes/translate/translate.pipe\";\nimport {TranslateService, TRANSLATION_PROVIDERS} from \"../pipes/translate/translate.service\";\nimport {PopoverInputDirective} from \"../directive/bubble-input/popover-input.directive\";\nimport {ButtonPassHideComponent} from \"../buttons/button-pass-hide/button-pass-hide.component\";\nimport {PopoverLanguageDirective} from \"../directive/bubble-language/popover-language.directive\";\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ActionLanguageComponent} from \"../actions/action-language/action-language.component\";\nimport {BubbleInputComponent} from \"../directive/bubble-input/bubble-input.component\";\nimport {BubbleLanguageComponent} from \"../directive/bubble-language/bubble-language.component\";\nimport {ActionInputComponent} from \"../actions/action-input/action-input.component\";\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    CardComponent,\n    LoginFormComponent, LoginFormComponent,\n    ButtonContinueComponent,\n    StoryInputComponent,\n    TranslatePipe,\n    ActionInputComponent, ActionLanguageComponent,\n    BubbleInputComponent, BubbleLanguageComponent,\n\n    Spinner1Component,\n    TranslateService, PopoverInputDirective, ButtonPassHideComponent, PopoverLanguageDirective\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  providers: [ TRANSLATION_PROVIDERS, TranslateService\n  ],\n  exports: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    CardComponent,\n    LoginFormComponent, LoginFormComponent,\n    ButtonContinueComponent,\n    StoryInputComponent,\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    TranslatePipe,\n    Spinner1Component,\n    TranslateService,\n    MatDialogModule,\n    MatButtonModule,\n    ActionInputComponent, ActionLanguageComponent,\n    BubbleInputComponent, BubbleLanguageComponent\n\n  ],\n  bootstrap: []\n})\nexport class StorybookModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "TranslateService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ActionInputComponent"
                        },
                        {
                            "name": "ActionLanguageComponent"
                        },
                        {
                            "name": "Background1Component"
                        },
                        {
                            "name": "BubbleInputComponent"
                        },
                        {
                            "name": "BubbleLanguageComponent"
                        },
                        {
                            "name": "ButtonContinueComponent"
                        },
                        {
                            "name": "ButtonGlobeComponent"
                        },
                        {
                            "name": "ButtonLanguageComponent"
                        },
                        {
                            "name": "ButtonPassHideComponent"
                        },
                        {
                            "name": "ButtonTadiranComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "LoginFormComponent"
                        },
                        {
                            "name": "LoginFormComponent"
                        },
                        {
                            "name": "PopoverInputDirective"
                        },
                        {
                            "name": "PopoverLanguageDirective"
                        },
                        {
                            "name": "Spinner1Component"
                        },
                        {
                            "name": "StoryInputComponent"
                        },
                        {
                            "name": "TranslatePipe"
                        },
                        {
                            "name": "TranslateService"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ActionInputComponent"
                        },
                        {
                            "name": "ActionLanguageComponent"
                        },
                        {
                            "name": "Background1Component"
                        },
                        {
                            "name": "BubbleInputComponent"
                        },
                        {
                            "name": "BubbleLanguageComponent"
                        },
                        {
                            "name": "ButtonContinueComponent"
                        },
                        {
                            "name": "ButtonGlobeComponent"
                        },
                        {
                            "name": "ButtonLanguageComponent"
                        },
                        {
                            "name": "ButtonTadiranComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "LoginFormComponent"
                        },
                        {
                            "name": "LoginFormComponent"
                        },
                        {
                            "name": "Spinner1Component"
                        },
                        {
                            "name": "StoryInputComponent"
                        },
                        {
                            "name": "TranslatePipe"
                        },
                        {
                            "name": "TranslateService"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "API_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/user.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AppConfig.accServer.ACCWEBServers+'/Aeonix-App-Center/test/'"
            },
            {
                "name": "AppConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  accServer: {\r\n    ACCWEBServers: GATE_URL_PREFIX,\r\n    ACCServerAddress1: \"\",\r\n    ACCServerAddress2: \"\"\r\n  },\r\n  endpoints: {\r\n    TOKEN_KEY: 'token',\r\n    REFRESHTOKEN_KEY: 'auth-refreshtoken',\r\n    USER_KEY: 'user'\r\n  },\r\n  translateLanguage: {\r\n    lang: 'eng',\r\n    dir: 'ltr'\r\n  },\r\n  webAppVersion: \"8.6.000\"\r\n}"
            },
            {
                "name": "AUTH_API",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AppConfig.accServer.ACCWEBServers+'/Aeonix-App-Center/auth/'"
            },
            {
                "name": "dictionary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  [LANG_ENG_NAME]: {dir: 'ltr', trans: LANG_ENG_TRANS},\r\n  [LANG_HEB_NAME]: {dir: 'rtl', trans: LANG_HEB_TRANS},\r\n  [LANG_ESP_NAME]: {dir: 'ltr', trans: LANG_ESP_TRANS},\r\n  [LANG_CHI_NAME]: {dir: 'ltr', trans: LANG_CHI_TRANS},\r\n  [LANG_RUS_NAME]: {dir: 'ltr', trans: LANG_RUS_TRANS},\r\n\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "GATE_URL_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "protocol + \"//\" + url + \":\" + port"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/user.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "LANG_CHI_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'chi'"
            },
            {
                "name": "LANG_CHI_TRANS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"Example\"                                                            :   \"例如\",\r\n  \"must be a well-formed email address\"                                :   \"请输入正确的邮箱地址\",\r\n  \"Error: A registry process should be made!\"                          :   \"应该先完成注册！\",\r\n  \"Error: Something went wrong!\"                                       :   \"出了些问题！\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"注册无效！\",\r\n  \"Bad credentials\"                                                    :   \"用户名或密码有误\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"请用一个以前没用过的密码再试一次\",\r\n  \"Passwords do not match!\"                                            :   \"密码不符\",\r\n  \"Incorrect current password\"                                         :   \"当前密码不正确\",\r\n  \"Something went wrong\"                                               :   \"出了些问题！\",\r\n  \"Error: Email is already in use!\"                                    :   \"此邮箱已被使用！\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"验证码不符\",\r\n  \"Error: Unable to save your changes\"                                 :   \"无法保存修改的内容\",\r\n  \"User account is locked\"                                             :   \"您的账号已被锁定\",\r\n  \"size must be between 2 and 20\"                                      :   \"输入 2 到 20 个字符长的值\",\r\n  \"Unknown User\"                                                       :   \"输入 2 到 20 个字符长的值\",\r\n  \"Details Saved\"                                                      :   \"您的账号已被锁定\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"密码与之前 4 个密码中的一个相匹配。\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"密码必须包含 1 个或多个特殊字符。\",\r\n  \"* your phone number has been updated\"                               :   \"*您的电话号码已更新\",\r\n  \"* your email address has been updated\"                              :   \"*您的电子邮件地址已更新\",\r\n\r\n  \"Reset Password\"                                                     :   \"重设密码\",\r\n  \"Send me a temporary password once again\"                            :   \"再次向我发送临时密码\",\r\n  \"A new temporary password has been sent to\"                          :   \"新的临时密码已发送至\",\r\n  \"your email address\"                                                 :   \"您的电子邮件地址\",\r\n  \"3 Days to expire\"                                                   :   \"三天后到期\",\r\n  \" A minimum of 8 characters\"                                         :   \"至少包含8个字符\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"至少包含1个大写字母\",\r\n  \" At least 1 lowercase letters\"                                      :   \"至少包含1个小写字母\",\r\n  \" At least 1 special character\"                                      :   \"至少包含1个特殊字符\",\r\n  \" A number\"                                                          :   \"一个数字\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" 不超过 2 个相同的连续字符\",\r\n  \"APP CENTER\"                                                         :   \"应用中心\",\r\n  \"Admin\"                                                              :   \"管理员\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix 应用中心\",\r\n  \"Agent\"                                                              :   \"坐席\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"修改密码\",\r\n  \"Change Password\"                                                    :   \"修改密码\",\r\n  \"Change Password and Login\"                                          :   \"修改密码然后登录\",\r\n  \"Change it now >\"                                                    :   \"立即修改>\",\r\n  \"Change the Initial Password\"                                        :   \"修改初始密码\",\r\n  \"Chinese\"                                                            :   \"中文\",\r\n  \"Complete Registration\"                                              :   \"完成注册\",\r\n  \"Continue\"                                                           :   \"继续\",\r\n  \"EMAIL\"                                                              :   \"电子邮件\",\r\n  \"Enable Profile Picture\"                                             :   \"使用个人资料图片\",\r\n  \"English\"                                                            :   \"英语\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"例如：Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"例如：+972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"例如：abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"忘记密码\",\r\n  \"Forgot Password?\"                                                   :   \"忘记密码？\",\r\n  \"Script-Designer\"                                                    :   \"脚本设计器\",\r\n  \"Hebrew\"                                                             :   \"希伯来语\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"初始密码\",\r\n  \"LOGIN SCREEN\"                                                       :   \"登录界面\",\r\n  \"Log out\"                                                            :   \"注销\",\r\n  \"Login\"                                                              :   \"登录\",\r\n  \"My Account\"                                                         :   \"我的账户\",\r\n  \"NEW PASSWORD\"                                                       :   \"新密码\",\r\n  \"OLD PASSWORD\"                                                       :   \"旧密码\",\r\n  \"PASSWORD\"                                                           :   \"密码\",\r\n  \"Please enter the Verification Code\"                                 :   \"请输入验证码\",\r\n  \"you received in your mail:\"                                         :   \"你在邮件中收到的：\",\r\n  \"Please enter your User Name:\"                                       :   \"请输入你的用户名：\",\r\n  \"Send Verification Code again\"                                       :   \"再次发送验证码\",\r\n  \"REGISTRATION\"                                                       :   \"注册\",\r\n  \"Russian\"                                                            :   \"俄语\",\r\n  \"Send me a Verification Code\"                                        :   \"给我发送验证码\",\r\n  \"Send me a Temporary Password\"                                       :   \"给我临时密码\",\r\n  \"Spanish\"                                                            :   \"西班牙语\",\r\n  \"The password must contain:\"                                         :   \"密码必须包含：\",\r\n  \"USER DETAILS\"                                                       :   \"用户信息\",\r\n  \"USER NAME\"                                                          :   \"用户名\",\r\n  \"WebRT\"                                                              :   \"实时报告\",\r\n  \"You have successfully changed your password!\"                       :   \"您已成功修改密码！\",\r\n  \"You have successfully completed your registration!\"                 :   \"您已成功完成注册！\",\r\n  \"Your password has expired and must be changed\"                      :   \"您的密码已过期，必须修改\",\r\n  \"Your password will expire in \"                                      :   \"您的密码将在\",\r\n  \" Days.\"                                                             :   \"天后过期。\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"通过填写以下信息完成注册：\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"输入电话号码进行验证\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"重新输入新密码\",\r\n  \"resend the verification code\"                                       :   \"重新发送验证码\",\r\n  \"Strength : \"                                                        :   \"强度 : \",\r\n  \"Must contain phone:\"                                                :   \"必须包含电话：\",\r\n  \"A well-formed phone number\"                                         :   \"一个正确的电话号码\",\r\n  \"Must contain email:\"                                                :   \"必须包含电邮地址：\",\r\n  \"A well-formed email address\"                                        :   \"一个正确的电子邮件地址\",\r\n  \"Successfully sent\"                                                  :   \"发送成功\",\r\n  \"Sending failed!\"                                                    :   \"发送失败！\",\r\n  \"Back\"                                                               :   \"后退\",\r\n}"
            },
            {
                "name": "LANG_ENG_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'eng'"
            },
            {
                "name": "LANG_ENG_TRANS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"Example\"                                                            :   \"Example\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"A registry process should be made!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Something went wrong!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Something went wrong!\",\r\n  \"Bad credentials\"                                                    :   \"Incorrect user name or password\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Try again with a password you haven`t used before\",\r\n  \"Passwords do not match!\"                                            :   \"Passwords do not match\",\r\n  \"Incorrect current password\"                                         :   \"Current password is incorrect\",\r\n  \"Something went wrong\"                                               :   \"Something went wrong!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email is already in use!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"The Verification Code does not match\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Unable to save your changes\",\r\n  \"User account is locked\"                                             :   \"Your account has been locked\",\r\n  \"size must be between 2 and 20\"                                      :   \"Enter a value between 2 to 20 characters long\",\r\n  \"Unknown User\"                                                       :   \"Unknown User\",\r\n  \"Details Saved\"                                                      :   \"Your account has been locked\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Password matches one of 4 previous passwords.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Password must contain 1 or more special characters.\",\r\n  \"* your phone number has been updated\"                               :   \"* Your phone number has been updated\",\r\n  \"* your email address has been updated\"                              :   \"* Your email address has been updated\",\r\n  \"Error: Your changes could not be saved\"                             :   'Error: Your changes could not be saved',\r\n\r\n  \"Reset Password\"                                                     :   \"Reset Password\",\r\n  \"Send me a temporary password once again\"                            :   \"Send me a temporary password once again\",\r\n  \"A new temporary password has been sent to\"                          :   \"A new temporary password has been sent to\",\r\n  \"your email address\"                                                 :   \"your email address\",\r\n  \"3 Days to expire\"                                                   :   \"3 Days to expire\",\r\n  \"A minimum of 8 characters\"                                          :   \"A minimum of 8 characters\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"At least 1 Uppercase letters\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"At least 1 Lowercase letters\",\r\n  \"A number\"                                                           :   \"A number\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No more than 2 adjacent identical characters\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"Admin\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"Agent\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CHANGE PASSWORD\",\r\n  \"Change Password\"                                                    :   \"Change Password\",\r\n  \"Change Password and Login\"                                          :   \"Change Password and Login\",\r\n  \"Change it now >\"                                                    :   \"Change it now >\",\r\n  \"Change the Initial Password\"                                        :   \"Change the Initial Password\",\r\n  \"Chinese\"                                                            :   \"Chinese\",\r\n  \"Complete Registration\"                                              :   \"Complete Registration\",\r\n  \"Continue\"                                                           :   \"Continue\",\r\n  \"EMAIL\"                                                              :   \"Email\",\r\n  \"Enable Profile Picture\"                                             :   \"Enable Profile Picture\",\r\n  \"English\"                                                            :   \"English\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                 :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"FORGOT PASSWORD\",\r\n  \"Forgot Password?\"                                                   :   \"Forgot Password?\",\r\n  \"Script-Designer\"                                                    :   \"Script Designer\",\r\n  \"Hebrew\"                                                             :   \"Hebrew\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"password\",\r\n  \"LOGIN SCREEN\"                                                       :   \"LOGIN SCREEN\",\r\n  \"Log out\"                                                            :   \"Log out\",\r\n  \"Login\"                                                              :   \"Login\",\r\n  \"My Account\"                                                         :   \"My Account\",\r\n  \"NEW PASSWORD\"                                                       :   \"NEW Password\",\r\n  \"OLD PASSWORD\"                                                       :   \"OLD PASSWORD\",\r\n  \"PASSWORD\"                                                           :   \"Password\",\r\n  \"Please enter the Verification Code\"                                 :   \"Please enter the Verification Code\",\r\n  \"you received in your mail:\"                                         :   \"you received in your mail:\",\r\n  \"Please enter your User Name:\"                                       :   \"Please enter your User Name:\",\r\n  \"Send Verification Code again\"                                       :   \"Send Verification Code again\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRATION\",\r\n  \"Russian\"                                                            :   \"Russian\",\r\n  \"Send me a Verification Code\"                                        :   \"Send me a Verification Code\",\r\n  \"Send me a Temporary Password\"                                       :   \"Send me a Temporary Password\",\r\n  \"Spanish\"                                                            :   \"Spanish\",\r\n  \"The password must contain:\"                                         :   \"The password must contain:\",\r\n  \"USER DETAILS\"                                                       :   \"USER DETAILS\",\r\n  \"USER NAME\"                                                          :   \"USERNAME\",\r\n  \"WebRT\"                                                              :   \"Real-Time Reports\",\r\n  \"You have successfully changed your password!\"                       :   \"You have successfully changed your password!\",\r\n  \"You have successfully completed your registration!\"                 :   \"You have successfully completed your registration!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Your password has expired and must be changed\",\r\n  \"Your password will expire in \"                                      :   \"Your password will expire in \",\r\n  \" Days.\"                                                             :   \" Days.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete the registration by filling the missing info:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"PHONE NUMBER FOR AUTHENTICATION\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-enter new Password\",\r\n  \"resend the verification code\"                                       :   \"resend the verification code\",\r\n  \"Strength : \"                                                        :   \"Strength : \",\r\n  \"Must contain phone:\"                                                :   \"Must contain phone:\",\r\n  \"A well-formed phone number\"                                         :   \"A well-formed phone number\",\r\n  \"Must contain email:\"                                                :   \"Must contain email:\",\r\n  \"A well-formed email address\"                                        :   \"A well-formed email address\",\r\n  \"Successfully sent\"                                                  :   \"Successfully sent\",\r\n  \"Sending failed!\"                                                    :   \"Sending failed!\",\r\n  \"Back\"                                                               :   \"Back\",\r\n\r\n}"
            },
            {
                "name": "LANG_ESP_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'esp'"
            },
            {
                "name": "LANG_ESP_TRANS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"Example\"                                                            :   \"Ejemplo\",\r\n  \"must be a well-formed email address\"                                :   \"debe ser una dirección de correo electrónica bien formada\",\r\n  \"Error: A registry process should be made!\"                          :   \"¡Se debe completar un proceso de registro!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Algo salió mal!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"¡El proceso de registro no válido!\",\r\n  \"Bad credentials\"                                                    :   \"Usuario o contraseña incorrecta\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Vuelve a intentarlo con una contraseña que no hayas usado antes\",\r\n  \"Passwords do not match!\"                                            :   \"¡Las contraseñas no coinciden\",\r\n  \"Incorrect current password\"                                         :   \"Contraseña actual incorrecta\",\r\n  \"Something went wrong\"                                               :   \"Algo salió mal!\",\r\n  \"Error: Email is already in use!\"                                    :   \"¡Correo electrónico ya está en uso!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"El código de verificación no coincide\",\r\n  \"Error: Unable to save your changes\"                                 :   \"No se pueden guardar los cambios\",\r\n  \"User account is locked\"                                             :   \"Su cuenta ha sido bloqueada\",\r\n  \"size must be between 2 and 20\"                                      :   \"Ingrese un valor entre 2 y 20 caracteres de largo\",\r\n  \"Unknown User\"                                                       :   \"Usuario Desconocido\",\r\n  \"Details Saved\"                                                      :   \"Su cuenta ha sido bloqueada\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"La contraseña coincide con una de las 4 contraseñas anteriores.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"La contraseña debe contener 1 o más caracteres especiales.\",\r\n  \"* your phone number has been updated\"                               :   \"* Su número de teléfono ha sido actualizado\",\r\n  \"* your email address has been updated\"                              :   \"* Su dirección de correo electrónico ha sido actualizada\",\r\n\r\n  \"Reset Password\"                                                     :   \"Restablecer la contraseña\",\r\n  \"Send me a reset password once again\"                                :   \"Envíame un contraseña temporal una vez más\",\r\n  \"A new temporary password has been sent to\"                          :   \"Se ha enviado una nueva contraseña temporal a\",\r\n  \"your email address\"                                                 :   \"Su dirección de correo electrónico\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \" A minimum of 8 characters\"                                         :   \"Un mínimo de 8 caracteres\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"Al menos 1 letras mayúsculas\",\r\n  \" At least 1 lowercase letters\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" At least 1 special character\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" A number\"                                                          :   \"Un número\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No más de 2 caracteres consecutivos idénticos\",\r\n  \"APP CENTER\"                                                         :   \"CENTRO DE APLICACIONES\",\r\n  \"Admin\"                                                              :   \"Administrador\",\r\n  \"Aeonix App Center\"                                                  :   \"Centro de aplicaciones Aeonix\",\r\n  \"Agent\"                                                              :   \"Agente\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CAMBIAR LA CONTRASEÑA\",\r\n  \"Change Password\"                                                    :   \"Cambiar la contraseña\",\r\n  \"Change Password and Login\"                                          :   \"Cambiar contraseña e iniciar sesión\",\r\n  \"Change it now >\"                                                    :   \"Cámbialo ahora >\",\r\n  \"Change the Initial Password\"                                        :   \"Cambiar la contraseña inicial\",\r\n  \"Chinese\"                                                            :   \"Chino\",\r\n  \"Complete Registration\"                                              :   \"Registracion completa\",\r\n  \"Continue\"                                                           :   \"Continuar\",\r\n  \"EMAIL\"                                                              :   \"Correo electrónico\",\r\n  \"Enable Profile Picture\"                                             :   \"Habilitar imagen de perfil\",\r\n  \"English\"                                                            :   \"Inglés\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ej. Saúl Ramírez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ej: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ej: abc@ejemplo.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"HAS OLVIDADO TU CONTRASEÑA\",\r\n  \"Forgot Password?\"                                                   :   \"¿Has olvidado tu contraseña?\",\r\n  \"Script-Designer\"                                                    :   \"Diseñador de guiones\",\r\n  \"Hebrew\"                                                             :   \"Hebreo\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"Contraseña inicial\",\r\n  \"LOGIN SCREEN\"                                                       :   \"PANTALLA DE INGRESO AL SISTEMA\",\r\n  \"Log out\"                                                            :   \"Cerrar sesión\",\r\n  \"Login\"                                                              :   \"Iniciar sesión\",\r\n  \"My Account\"                                                         :   \"Mi cuenta\",\r\n  \"NEW PASSWORD\"                                                       :   \"Nueva contraseña\",\r\n  \"OLD PASSWORD\"                                                       :   \"CONTRASEÑA ANTERIOR\",\r\n  \"PASSWORD\"                                                           :   \"Contraseña\",\r\n  \"Please enter the Verification Code\"                                 :   \"Porfavor ingrese el codigo de verificacion\",\r\n  \"you received in your mail:\"                                         :   \"Lo recibiste en tu correo:\",\r\n  \"Please enter your User Name:\"                                       :   \"Por favor, ingrese su usuario:\",\r\n  \"Send Verification Code again\"                                       :   \"Enviar código de verificación de nuevo\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRACION\",\r\n  \"Russian\"                                                            :   \"Ruso\",\r\n  \"Send me a Verification Code\"                                        :   \"Envíame un código de verificación\",\r\n  \"Send me a Temporary Password\"                                       :   \"Envíame un contraseña temporal\",\r\n  \"Spanish\"                                                            :   \"Español\",\r\n  \"The password must contain:\"                                         :   \"La contraseña debe contener:\",\r\n  \"USER DETAILS\"                                                       :   \"DETALLES DE USUARIO\",\r\n  \"USER NAME\"                                                          :   \"USUARIO\",\r\n  \"WebRT\"                                                              :   \"WebRT\",\r\n  \"You have successfully changed your password!\"                       :   \"¡Has cambiado satisfactoriamente tu contraseña!\",\r\n  \"You have successfully completed your registration!\"                 :   \"¡Has completado con éxito tu registro!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Su contraseña ha expirado y debe cambiarse\",\r\n  \"Your password will expire in \"                                      :   \"Su contraseña expíra en \",\r\n  \" Days.\"                                                             :   \" días.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete el registro llenando la siguiente información:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"NÚMERO DE TELÉFONO PARA AUTENTICACIÓN\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-ingrese nueva contraseña\",\r\n  \"resend the verification code\"                                       :   \"reenviar el código de verificación\",\r\n  \"Strength : \"                                                        :   \"fortaleza : \",\r\n  \"Must contain phone:\"                                                :   \"Debe contener número de teléfono:\",\r\n  \"A well-formed phone number\"                                         :   \"Un número de teléfono bien formado\",\r\n  \"Must contain email:\"                                                :   \"Debe contener correo electrónico:\",\r\n  \"A well-formed email address\"                                        :   \"Una dirección de correo electrónico bien formada\",\r\n  \"Successfully sent\"                                                  :   \"Enviado exitosamente\",\r\n  \"Sending failed!\"                                                    :   \"¡Envío fallido!\",\r\n  \"Back\"                                                               :   \"Atrás\",\r\n}"
            },
            {
                "name": "LANG_HEB_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'heb'"
            },
            {
                "name": "LANG_HEB_TRANS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"Example\"                                                            :   \"דוגמא\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"יש להשלים תהליך רישום\",\r\n  \"Error: Something went wrong!\"                                       :   \"!משהו השתבש\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"תהליך רישום לא תקין\",\r\n  \"Bad credentials\"                                                    :   \"שם משתמש או סיסמא שגויים\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"בחר סיסמא חדשה שלא הייתה בשימוש\",\r\n  \"Passwords do not match!\"                                            :   \"'הקפד להזין סיסמאות זהות בשדות 'סיסמה חדשה' ו'אימות סיסמה\",\r\n  \"Incorrect current password\"                                         :   \"סיסמה נוכחית שגויה\",\r\n  \"Something went wrong\"                                               :   \"!משהו השתבש\",\r\n  \"Error: Email is already in use!\"                                    :   'כתובת דוא\"ל נמצאת בשימוש אצל משתמש קיים',\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"קוד אימות שגוי\",\r\n  \"Error: Unable to save your changes\"                                 :   \"לא ניתן לשמור את השינויים\",\r\n  \"User account is locked\"                                             :   \"חשבונך ננעל\",\r\n  \"size must be between 2 and 20\"                                      :   \"יש להזין ערך המכיל בין 2 ל-20 תווים\",\r\n  \"Unknown User\"                                                       :   \"המשתמש אינו מוכר למערכת\",\r\n  \"Details Saved\"                                                      :   \"חשבונך ננעל\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"הסיסמה תואמת לאחת מ-4 סיסמאות קודמות\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"הסיסמה חייבת להכיל 1 או יותר תווים בהצלחה מיוחדים\",\r\n  \"* your phone number has been updated\"                               :   \"* מספר הטלפון שלך עודכן בהצלחה\",\r\n  \"* your email address has been updated\"                              :   '* כתובת הדוא\"ל שלך עודכן בהצלחה',\r\n  \"Error: Your changes could not be saved\"                             :   'שגיאה: השינויים שהזנת אינם נשמרו',\r\n\r\n  \"Reset Password\"                                                     :   \"איפוס סיסמה\",\r\n  \"Send me a temporary password once again\"                            :   \"שלח לי שוב סיסמה זמנית\",\r\n  \"A new temporary password has been sent to\"                          :   \"סיסמה זמנית חדשה נשלחה אל\",\r\n  \"your email address\"                                                 :   \"כתובת הדוא\\\"ל שלך\",\r\n  \"% Days to expire\"                                                   :   \"בעוד % ימים יפוג תוקף הסיסמה\",\r\n  \" A minimum of 8 characters\"                                         :   \"מינימום 8 ספרות\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"לפחות אות אחת גדולה\",\r\n  \" At least 1 lowercase letters\"                                      :   \"לפחות אות אחת קטנה\",\r\n  \" At least 1 special character\"                                      :   \"לפחות תו מיוחד אחד\",\r\n  \" A number\"                                                          :   \"מספר\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \"לא יותר מ-2 תווים עוקבים זהים\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"אדמיניסטרציה\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"נציג\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password and Login\"                                          :   \"שנה סיסמה והיכנס\",\r\n  \"Change it now >\"                                                    :   \" <שנה עכשיו\",\r\n  \"Change the Initial Password\"                                        :   \"שנה את הסיסמה הראשונית\",\r\n  \"Chinese\"                                                            :   \"סינית\",\r\n  \"Complete Registration\"                                              :   \"השלם תהליך רישום\",\r\n  \"Continue\"                                                           :   \"המשך\",\r\n  \"EMAIL\"                                                              :   'כתובת דוא\"ל',\r\n  \"Enable Profile Picture\"                                             :   \"אפשר תמונת פרופיל\",\r\n  \"English\"                                                            :   \"אנגלית\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"שכחתי סיסמה\",\r\n  \"Forgot Password?\"                                                   :   \"שכחתי סיסמה\",\r\n  \"Script-Designer\"                                                    :   \"עורך תסריטים\",\r\n  \"Hebrew\"                                                             :   \"עברית\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"סיסמה ראשונית\",\r\n  \"LOGIN SCREEN\"                                                       :   \"מסך כניסה\",\r\n  \"Log out\"                                                            :   \"יציאה\",\r\n  \"Login\"                                                              :   \"כניסה\",\r\n  \"My Account\"                                                         :   \"החשבון שלי\",\r\n  \"NEW PASSWORD\"                                                       :   \"סיסמה חדשה\",\r\n  \"OLD PASSWORD\"                                                       :   \"סיסמה ישנה\",\r\n  \"PASSWORD\"                                                           :   \"סיסמה\",\r\n  \"Please enter the Verification Code\"                                 :   \"אנא הקלד את קוד האימות\",\r\n  \"you received in your mail:\"                                         :   'שקיבלת בדוא\"ל',\r\n  \"Please enter your User Name:\"                                       :   \"אנא הקלד את שם המשתמש שלך\",\r\n  \"Send Verification Code again\"                                       :   \"שלח קוד אימות חדש\",\r\n  \"REGISTRATION\"                                                       :   \"רישום\",\r\n  \"Russian\"                                                            :   \"רוסית\",\r\n  \"Send me a Verification Code\"                                        :   \"שלח לי קוד אימות\",\r\n  \"Send me a Temporary Password\"                                       :   \"שלח לי סיסמה זמנית\",\r\n  \"Spanish\"                                                            :   \"ספרדית\",\r\n  \"The password must contain:\"                                         :   \"על הסיסמה לכלול:\",\r\n  \"USER DETAILS\"                                                       :   \"פרטי משתמש\",\r\n  \"USER NAME\"                                                          :   \"שם משתמש\",\r\n  \"WebRT\"                                                              :   \"דוחות זמן אמת\",\r\n  \"You have successfully changed your password!\"                       :   \"סיסמתך שונתה בהצלחה\",\r\n  \"You have successfully completed your registration!\"                 :   \"תהליך הרישום הסתיים בהצלחה\",\r\n  \"Your password has expired and must be changed\"                      :   \"פג תוקף סיסמתך. עליך לשנותה\",\r\n  \"Your password will expire in \"                                      :   \"תוקף סיסמתך יפוג בתוך \",\r\n  \" Days.\"                                                             :   \" ימים\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"הקלד את המידע הבא לצורך השלמת תהליך הרישום\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"מספר טלפון לאימות\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"האימות סיסמה\",\r\n  \"resend the verification code\"                                       :   \"שלח שוב קוד אימות\",\r\n  \"Strength : \"                                                        :   \"חוזק : \",\r\n  \"Must contain phone:\"                                                :   \"חייב לכלול מספר טלפון\",\r\n  \" A well-formed phone number\"                                        :   \"מספר טלפון תקני\",\r\n  \"Must contain email:\"                                                :   'חייב לכלול כתובת דוא\"ל',\r\n  \" A well-formed email address\"                                       :   'כתובת דוא\"ל תקנית',\r\n  \"Settings\"                                                           :   'הגדרות',\r\n  \"Successfully sent\"                                                  :   \"נשלח בהצלחה\",\r\n  \"Sending failed!\"                                                    :   \"!שליחה נכשלה\",\r\n  \"Back\"                                                               :   \"חזור\",\r\n\r\n}"
            },
            {
                "name": "LANG_RUS_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'rus'"
            },
            {
                "name": "LANG_RUS_TRANS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"Example\"                                                            :   \"Пример\",\r\n  \"must be a well-formed email address\"                                :   \"должен быть корректно оформленным адресом электронной почты\",\r\n  \"Error: A registry process should be made!\"                          :   \"Должен быть проведен процесс регистрации!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Что-то пошло не так!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Процесс реестра недействителен!\",\r\n  \"Bad credentials\"                                                    :   \"Неверное имя пользователя или пароль\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Попробуйте еще раз с паролем, который вы раньше не использовали\",\r\n  \"Passwords do not match!\"                                            :   \"Пароли не совпадают\",\r\n  \"Incorrect current password\"                                         :   \"Неверный текущий пароль\",\r\n  \"Something went wrong\"                                               :   \"Что-то пошло не так!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email уже используется!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"Код подтверждения не совпадает\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Не удалось сохранить изменения\",\r\n  \"User account is locked\"                                             :   \"Ваш аккаунт заблокирован\",\r\n  \"size must be between 2 and 20\"                                      :   \"Введите значение длиной от 2 до 20 символов.\",\r\n  \"Unknown User\"                                                       :   \"Неизвестный пользователь\",\r\n  \"Details Saved\"                                                      :   \"Ваш аккаунт заблокирован\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Пароль совпадает с одним из 4 предыдущих паролей.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Пароль должен содержать 1 или более специальных символов.\",\r\n  \"* your phone number has been updated\"                               :   \"* Ваш номер телефона был обновлен\",\r\n  \"* your email address has been updated\"                              :   \"* Ваш адрес электронной почты был обновлен\",\r\n\r\n\r\n  \"Reset Password\"                                                     :   \"Сброс пароля\",\r\n  \"Send me a temporary password once again\"                            :   \"Отправьте мне временный пароль еще раз\",\r\n  \"A new temporary password has been sent to\"                          :   \"Новый временный пароль был отправлен на\",\r\n  \"your email address\"                                                 :   \"ваш адрес электронной почты\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \"A minimum of 8 characters\"                                          :   \"Минимум 8 символов\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"Минимум 1 заглавная буква\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"Минимум 1 строчная буква\",\r\n  \"A number\"                                                           :   \"Число\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" Не более 2 одинаковых последовательных символов\",\r\n  \"APP CENTER\"                                                         :   \"ЦЕНТР ПРИЛОЖЕНИЙ\",\r\n  \"Admin\"                                                              :   \"Админ\",\r\n  \"Aeonix App Center\"                                                  :   \"Центр приложений Aeonix\",\r\n  \"Agent\"                                                              :   \"Агент\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"ИЗМЕНИТЬ ПАРОЛЬ\",\r\n  \"Change Password\"                                                    :   \"Изменить пароль\",\r\n  \"Change Password and Login\"                                          :   \"Изменить пароль и логин\",\r\n  \"Change it now >\"                                                    :   \"Измените его сейчас >\",\r\n  \"Change the Initial Password\"                                        :   \"Изменить начальный пароль\",\r\n  \"Chinese\"                                                            :   \"Китайский язык\",\r\n  \"Complete Registration\"                                              :   \"Завершите регистрацию\",\r\n  \"Continue\"                                                           :   \"Продолжать\",\r\n  \"EMAIL\"                                                              :   \"Электронная почта\",\r\n  \"Enable Profile Picture\"                                             :   \"Включить изображение профиля\",\r\n  \"English\"                                                            :   \"Английский\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Бывший. Саул Рамирес\",\r\n  \"Ex: +972547762084\"                                                  :   \"Пример: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Пример: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"ЗАБЫЛИ ПАРОЛЬ\",\r\n  \"Forgot Password?\"                                                   :   \"Забыли пароль?\",\r\n  \"Script-Designer\"                                                    :   \"Сценарист\",\r\n  \"Hebrew\"                                                             :   \"Иврит\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"пароль\",\r\n  \"LOGIN SCREEN\"                                                       :   \"ЭКРАН ВХОДА\",\r\n  \"Log out\"                                                            :   \"Выйти\",\r\n  \"Login\"                                                              :   \"Авторизоваться\",\r\n  \"My Account\"                                                         :   \"Мой счет\",\r\n  \"NEW PASSWORD\"                                                       :   \"Новый пароль\",\r\n  \"OLD PASSWORD\"                                                       :   \"СТАРЫЙ ПАРОЛЬ\",\r\n  \"PASSWORD\"                                                           :   \"Пароль\",\r\n  \"Please enter the Verification Code\"                                 :   \"Пожалуйста, введите проверочный код\",\r\n  \"you received in your mail:\"                                         :   \"вы получили на почту:\",\r\n  \"Please enter your User Name:\"                                       :   \"Пожалуйста, введите Ваш логин:\",\r\n  \"Send Verification Code again\"                                       :   \"Отправить код подтверждения еще раз\",\r\n  \"REGISTRATION\"                                                       :   \"ПОСТАНОВКА НА УЧЕТ\",\r\n  \"Russian\"                                                            :   \"Русский\",\r\n  \"Send me a Verification Code\"                                        :   \"Пришлите мне код подтверждения\",\r\n  \"Send me a Temporary Password\"                                       :   \"Пришлите мне временный пароль\",\r\n  \"Spanish\"                                                            :   \"Испанский язык\",\r\n  \"The password must contain:\"                                         :   \"Пароль должен содержать:\",\r\n  \"USER DETAILS\"                                                       :   \"ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"USER NAME\"                                                          :   \"ИМЯ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"WebRT\"                                                              :   \"ВебРТ\",\r\n  \"You have successfully changed your password!\"                       :   \"Вы успешно изменили ваш пароль!\",\r\n  \"You have successfully completed your registration!\"                 :   \"Вы успешно завершили регистрацию!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Срок действия вашего пароля истек, и его необходимо изменить\",\r\n  \"Your password will expire in \"                                      :   \"Срок действия вашего пароля истечет через \",\r\n  \" Days.\"                                                             :   \"  Дни.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Завершите регистрацию, заполнив недостающую информацию:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"НОМЕР ТЕЛЕФОНА ДЛЯ АУТЕНТИФИКАЦИИ\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"Повторно введите новый пароль\",\r\n  \"resend the verification code\"                                       :   \"повторно отправить код подтверждения\",\r\n  \"Strength : \"                                                        :   \"Сила : \",\r\n  \"Must contain phone:\"                                                :   \"Должен содержать телефон:\",\r\n  \"A well-formed phone number\"                                         :   \"Правильно сформированный номер телефона\",\r\n  \"Must contain email:\"                                                :   \"Должен содержать электронную почту:\",\r\n  \"A well-formed email address\"                                        :   \"Правильно сформированный адрес электронной почты\",\r\n  \"Successfully sent\"                                                  :   \"Успешно отправлено\",\r\n  \"Sending failed!\"                                                    :   \"Отправка не удалась!\",\r\n  \"Back\"                                                               :   \"Назад\",\r\n\r\n}"
            },
            {
                "name": "parsedUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new URL(window.location.href)"
            },
            {
                "name": "PINCODETOKEN_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/token-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'auth-pincodetoken'"
            },
            {
                "name": "port",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "parsedUrl.port"
            },
            {
                "name": "protocol",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "parsedUrl.protocol"
            },
            {
                "name": "REFRESHTOKEN_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/token-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'auth-refreshtoken'"
            },
            {
                "name": "TOKEN_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/token-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'token'"
            },
            {
                "name": "TRANSLATION_PROVIDERS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { provide: TRANSLATIONS, useValue: dictionary },\r\n]"
            },
            {
                "name": "TRANSLATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<any>('translations', {\r\n  providedIn: 'root',\r\n  factory: () => sessionStorage\r\n})"
            },
            {
                "name": "url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "parsedUrl.hostname"
            },
            {
                "name": "USER_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_services/token-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'user'"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Direction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"ltr\" | \"rtl\"",
                "file": "src/stories/forms/login-form/login-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Direction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"ltr\" | \"rtl\"",
                "file": "src/stories/pipes/translate/translate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "TableRow",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/components/admin/admin.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/_services/user.service.ts": [
                {
                    "name": "API_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/user.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AppConfig.accServer.ACCWEBServers+'/Aeonix-App-Center/test/'"
                },
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/user.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "AppConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  accServer: {\r\n    ACCWEBServers: GATE_URL_PREFIX,\r\n    ACCServerAddress1: \"\",\r\n    ACCServerAddress2: \"\"\r\n  },\r\n  endpoints: {\r\n    TOKEN_KEY: 'token',\r\n    REFRESHTOKEN_KEY: 'auth-refreshtoken',\r\n    USER_KEY: 'user'\r\n  },\r\n  translateLanguage: {\r\n    lang: 'eng',\r\n    dir: 'ltr'\r\n  },\r\n  webAppVersion: \"8.6.000\"\r\n}"
                },
                {
                    "name": "GATE_URL_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "protocol + \"//\" + url + \":\" + port"
                },
                {
                    "name": "parsedUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new URL(window.location.href)"
                },
                {
                    "name": "port",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "parsedUrl.port"
                },
                {
                    "name": "protocol",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "parsedUrl.protocol"
                },
                {
                    "name": "url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "parsedUrl.hostname"
                }
            ],
            "src/app/_services/auth.service.ts": [
                {
                    "name": "AUTH_API",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AppConfig.accServer.ACCWEBServers+'/Aeonix-App-Center/auth/'"
                },
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "src/stories/pipes/translate/translate.service.ts": [
                {
                    "name": "dictionary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  [LANG_ENG_NAME]: {dir: 'ltr', trans: LANG_ENG_TRANS},\r\n  [LANG_HEB_NAME]: {dir: 'rtl', trans: LANG_HEB_TRANS},\r\n  [LANG_ESP_NAME]: {dir: 'ltr', trans: LANG_ESP_TRANS},\r\n  [LANG_CHI_NAME]: {dir: 'ltr', trans: LANG_CHI_TRANS},\r\n  [LANG_RUS_NAME]: {dir: 'ltr', trans: LANG_RUS_TRANS},\r\n\r\n}"
                },
                {
                    "name": "LANG_CHI_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'chi'"
                },
                {
                    "name": "LANG_CHI_TRANS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"Example\"                                                            :   \"例如\",\r\n  \"must be a well-formed email address\"                                :   \"请输入正确的邮箱地址\",\r\n  \"Error: A registry process should be made!\"                          :   \"应该先完成注册！\",\r\n  \"Error: Something went wrong!\"                                       :   \"出了些问题！\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"注册无效！\",\r\n  \"Bad credentials\"                                                    :   \"用户名或密码有误\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"请用一个以前没用过的密码再试一次\",\r\n  \"Passwords do not match!\"                                            :   \"密码不符\",\r\n  \"Incorrect current password\"                                         :   \"当前密码不正确\",\r\n  \"Something went wrong\"                                               :   \"出了些问题！\",\r\n  \"Error: Email is already in use!\"                                    :   \"此邮箱已被使用！\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"验证码不符\",\r\n  \"Error: Unable to save your changes\"                                 :   \"无法保存修改的内容\",\r\n  \"User account is locked\"                                             :   \"您的账号已被锁定\",\r\n  \"size must be between 2 and 20\"                                      :   \"输入 2 到 20 个字符长的值\",\r\n  \"Unknown User\"                                                       :   \"输入 2 到 20 个字符长的值\",\r\n  \"Details Saved\"                                                      :   \"您的账号已被锁定\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"密码与之前 4 个密码中的一个相匹配。\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"密码必须包含 1 个或多个特殊字符。\",\r\n  \"* your phone number has been updated\"                               :   \"*您的电话号码已更新\",\r\n  \"* your email address has been updated\"                              :   \"*您的电子邮件地址已更新\",\r\n\r\n  \"Reset Password\"                                                     :   \"重设密码\",\r\n  \"Send me a temporary password once again\"                            :   \"再次向我发送临时密码\",\r\n  \"A new temporary password has been sent to\"                          :   \"新的临时密码已发送至\",\r\n  \"your email address\"                                                 :   \"您的电子邮件地址\",\r\n  \"3 Days to expire\"                                                   :   \"三天后到期\",\r\n  \" A minimum of 8 characters\"                                         :   \"至少包含8个字符\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"至少包含1个大写字母\",\r\n  \" At least 1 lowercase letters\"                                      :   \"至少包含1个小写字母\",\r\n  \" At least 1 special character\"                                      :   \"至少包含1个特殊字符\",\r\n  \" A number\"                                                          :   \"一个数字\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" 不超过 2 个相同的连续字符\",\r\n  \"APP CENTER\"                                                         :   \"应用中心\",\r\n  \"Admin\"                                                              :   \"管理员\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix 应用中心\",\r\n  \"Agent\"                                                              :   \"坐席\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"修改密码\",\r\n  \"Change Password\"                                                    :   \"修改密码\",\r\n  \"Change Password and Login\"                                          :   \"修改密码然后登录\",\r\n  \"Change it now >\"                                                    :   \"立即修改>\",\r\n  \"Change the Initial Password\"                                        :   \"修改初始密码\",\r\n  \"Chinese\"                                                            :   \"中文\",\r\n  \"Complete Registration\"                                              :   \"完成注册\",\r\n  \"Continue\"                                                           :   \"继续\",\r\n  \"EMAIL\"                                                              :   \"电子邮件\",\r\n  \"Enable Profile Picture\"                                             :   \"使用个人资料图片\",\r\n  \"English\"                                                            :   \"英语\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"例如：Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"例如：+972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"例如：abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"忘记密码\",\r\n  \"Forgot Password?\"                                                   :   \"忘记密码？\",\r\n  \"Script-Designer\"                                                    :   \"脚本设计器\",\r\n  \"Hebrew\"                                                             :   \"希伯来语\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"初始密码\",\r\n  \"LOGIN SCREEN\"                                                       :   \"登录界面\",\r\n  \"Log out\"                                                            :   \"注销\",\r\n  \"Login\"                                                              :   \"登录\",\r\n  \"My Account\"                                                         :   \"我的账户\",\r\n  \"NEW PASSWORD\"                                                       :   \"新密码\",\r\n  \"OLD PASSWORD\"                                                       :   \"旧密码\",\r\n  \"PASSWORD\"                                                           :   \"密码\",\r\n  \"Please enter the Verification Code\"                                 :   \"请输入验证码\",\r\n  \"you received in your mail:\"                                         :   \"你在邮件中收到的：\",\r\n  \"Please enter your User Name:\"                                       :   \"请输入你的用户名：\",\r\n  \"Send Verification Code again\"                                       :   \"再次发送验证码\",\r\n  \"REGISTRATION\"                                                       :   \"注册\",\r\n  \"Russian\"                                                            :   \"俄语\",\r\n  \"Send me a Verification Code\"                                        :   \"给我发送验证码\",\r\n  \"Send me a Temporary Password\"                                       :   \"给我临时密码\",\r\n  \"Spanish\"                                                            :   \"西班牙语\",\r\n  \"The password must contain:\"                                         :   \"密码必须包含：\",\r\n  \"USER DETAILS\"                                                       :   \"用户信息\",\r\n  \"USER NAME\"                                                          :   \"用户名\",\r\n  \"WebRT\"                                                              :   \"实时报告\",\r\n  \"You have successfully changed your password!\"                       :   \"您已成功修改密码！\",\r\n  \"You have successfully completed your registration!\"                 :   \"您已成功完成注册！\",\r\n  \"Your password has expired and must be changed\"                      :   \"您的密码已过期，必须修改\",\r\n  \"Your password will expire in \"                                      :   \"您的密码将在\",\r\n  \" Days.\"                                                             :   \"天后过期。\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"通过填写以下信息完成注册：\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"输入电话号码进行验证\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"重新输入新密码\",\r\n  \"resend the verification code\"                                       :   \"重新发送验证码\",\r\n  \"Strength : \"                                                        :   \"强度 : \",\r\n  \"Must contain phone:\"                                                :   \"必须包含电话：\",\r\n  \"A well-formed phone number\"                                         :   \"一个正确的电话号码\",\r\n  \"Must contain email:\"                                                :   \"必须包含电邮地址：\",\r\n  \"A well-formed email address\"                                        :   \"一个正确的电子邮件地址\",\r\n  \"Successfully sent\"                                                  :   \"发送成功\",\r\n  \"Sending failed!\"                                                    :   \"发送失败！\",\r\n  \"Back\"                                                               :   \"后退\",\r\n}"
                },
                {
                    "name": "LANG_ENG_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'eng'"
                },
                {
                    "name": "LANG_ENG_TRANS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"Example\"                                                            :   \"Example\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"A registry process should be made!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Something went wrong!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Something went wrong!\",\r\n  \"Bad credentials\"                                                    :   \"Incorrect user name or password\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Try again with a password you haven`t used before\",\r\n  \"Passwords do not match!\"                                            :   \"Passwords do not match\",\r\n  \"Incorrect current password\"                                         :   \"Current password is incorrect\",\r\n  \"Something went wrong\"                                               :   \"Something went wrong!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email is already in use!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"The Verification Code does not match\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Unable to save your changes\",\r\n  \"User account is locked\"                                             :   \"Your account has been locked\",\r\n  \"size must be between 2 and 20\"                                      :   \"Enter a value between 2 to 20 characters long\",\r\n  \"Unknown User\"                                                       :   \"Unknown User\",\r\n  \"Details Saved\"                                                      :   \"Your account has been locked\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Password matches one of 4 previous passwords.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Password must contain 1 or more special characters.\",\r\n  \"* your phone number has been updated\"                               :   \"* Your phone number has been updated\",\r\n  \"* your email address has been updated\"                              :   \"* Your email address has been updated\",\r\n  \"Error: Your changes could not be saved\"                             :   'Error: Your changes could not be saved',\r\n\r\n  \"Reset Password\"                                                     :   \"Reset Password\",\r\n  \"Send me a temporary password once again\"                            :   \"Send me a temporary password once again\",\r\n  \"A new temporary password has been sent to\"                          :   \"A new temporary password has been sent to\",\r\n  \"your email address\"                                                 :   \"your email address\",\r\n  \"3 Days to expire\"                                                   :   \"3 Days to expire\",\r\n  \"A minimum of 8 characters\"                                          :   \"A minimum of 8 characters\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"At least 1 Uppercase letters\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"At least 1 Lowercase letters\",\r\n  \"A number\"                                                           :   \"A number\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No more than 2 adjacent identical characters\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"Admin\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"Agent\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CHANGE PASSWORD\",\r\n  \"Change Password\"                                                    :   \"Change Password\",\r\n  \"Change Password and Login\"                                          :   \"Change Password and Login\",\r\n  \"Change it now >\"                                                    :   \"Change it now >\",\r\n  \"Change the Initial Password\"                                        :   \"Change the Initial Password\",\r\n  \"Chinese\"                                                            :   \"Chinese\",\r\n  \"Complete Registration\"                                              :   \"Complete Registration\",\r\n  \"Continue\"                                                           :   \"Continue\",\r\n  \"EMAIL\"                                                              :   \"Email\",\r\n  \"Enable Profile Picture\"                                             :   \"Enable Profile Picture\",\r\n  \"English\"                                                            :   \"English\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                 :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"FORGOT PASSWORD\",\r\n  \"Forgot Password?\"                                                   :   \"Forgot Password?\",\r\n  \"Script-Designer\"                                                    :   \"Script Designer\",\r\n  \"Hebrew\"                                                             :   \"Hebrew\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"password\",\r\n  \"LOGIN SCREEN\"                                                       :   \"LOGIN SCREEN\",\r\n  \"Log out\"                                                            :   \"Log out\",\r\n  \"Login\"                                                              :   \"Login\",\r\n  \"My Account\"                                                         :   \"My Account\",\r\n  \"NEW PASSWORD\"                                                       :   \"NEW Password\",\r\n  \"OLD PASSWORD\"                                                       :   \"OLD PASSWORD\",\r\n  \"PASSWORD\"                                                           :   \"Password\",\r\n  \"Please enter the Verification Code\"                                 :   \"Please enter the Verification Code\",\r\n  \"you received in your mail:\"                                         :   \"you received in your mail:\",\r\n  \"Please enter your User Name:\"                                       :   \"Please enter your User Name:\",\r\n  \"Send Verification Code again\"                                       :   \"Send Verification Code again\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRATION\",\r\n  \"Russian\"                                                            :   \"Russian\",\r\n  \"Send me a Verification Code\"                                        :   \"Send me a Verification Code\",\r\n  \"Send me a Temporary Password\"                                       :   \"Send me a Temporary Password\",\r\n  \"Spanish\"                                                            :   \"Spanish\",\r\n  \"The password must contain:\"                                         :   \"The password must contain:\",\r\n  \"USER DETAILS\"                                                       :   \"USER DETAILS\",\r\n  \"USER NAME\"                                                          :   \"USERNAME\",\r\n  \"WebRT\"                                                              :   \"Real-Time Reports\",\r\n  \"You have successfully changed your password!\"                       :   \"You have successfully changed your password!\",\r\n  \"You have successfully completed your registration!\"                 :   \"You have successfully completed your registration!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Your password has expired and must be changed\",\r\n  \"Your password will expire in \"                                      :   \"Your password will expire in \",\r\n  \" Days.\"                                                             :   \" Days.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete the registration by filling the missing info:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"PHONE NUMBER FOR AUTHENTICATION\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-enter new Password\",\r\n  \"resend the verification code\"                                       :   \"resend the verification code\",\r\n  \"Strength : \"                                                        :   \"Strength : \",\r\n  \"Must contain phone:\"                                                :   \"Must contain phone:\",\r\n  \"A well-formed phone number\"                                         :   \"A well-formed phone number\",\r\n  \"Must contain email:\"                                                :   \"Must contain email:\",\r\n  \"A well-formed email address\"                                        :   \"A well-formed email address\",\r\n  \"Successfully sent\"                                                  :   \"Successfully sent\",\r\n  \"Sending failed!\"                                                    :   \"Sending failed!\",\r\n  \"Back\"                                                               :   \"Back\",\r\n\r\n}"
                },
                {
                    "name": "LANG_ESP_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'esp'"
                },
                {
                    "name": "LANG_ESP_TRANS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"Example\"                                                            :   \"Ejemplo\",\r\n  \"must be a well-formed email address\"                                :   \"debe ser una dirección de correo electrónica bien formada\",\r\n  \"Error: A registry process should be made!\"                          :   \"¡Se debe completar un proceso de registro!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Algo salió mal!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"¡El proceso de registro no válido!\",\r\n  \"Bad credentials\"                                                    :   \"Usuario o contraseña incorrecta\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Vuelve a intentarlo con una contraseña que no hayas usado antes\",\r\n  \"Passwords do not match!\"                                            :   \"¡Las contraseñas no coinciden\",\r\n  \"Incorrect current password\"                                         :   \"Contraseña actual incorrecta\",\r\n  \"Something went wrong\"                                               :   \"Algo salió mal!\",\r\n  \"Error: Email is already in use!\"                                    :   \"¡Correo electrónico ya está en uso!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"El código de verificación no coincide\",\r\n  \"Error: Unable to save your changes\"                                 :   \"No se pueden guardar los cambios\",\r\n  \"User account is locked\"                                             :   \"Su cuenta ha sido bloqueada\",\r\n  \"size must be between 2 and 20\"                                      :   \"Ingrese un valor entre 2 y 20 caracteres de largo\",\r\n  \"Unknown User\"                                                       :   \"Usuario Desconocido\",\r\n  \"Details Saved\"                                                      :   \"Su cuenta ha sido bloqueada\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"La contraseña coincide con una de las 4 contraseñas anteriores.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"La contraseña debe contener 1 o más caracteres especiales.\",\r\n  \"* your phone number has been updated\"                               :   \"* Su número de teléfono ha sido actualizado\",\r\n  \"* your email address has been updated\"                              :   \"* Su dirección de correo electrónico ha sido actualizada\",\r\n\r\n  \"Reset Password\"                                                     :   \"Restablecer la contraseña\",\r\n  \"Send me a reset password once again\"                                :   \"Envíame un contraseña temporal una vez más\",\r\n  \"A new temporary password has been sent to\"                          :   \"Se ha enviado una nueva contraseña temporal a\",\r\n  \"your email address\"                                                 :   \"Su dirección de correo electrónico\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \" A minimum of 8 characters\"                                         :   \"Un mínimo de 8 caracteres\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"Al menos 1 letras mayúsculas\",\r\n  \" At least 1 lowercase letters\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" At least 1 special character\"                                      :   \"Al menos 1 letras minúsculas\",\r\n  \" A number\"                                                          :   \"Un número\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" No más de 2 caracteres consecutivos idénticos\",\r\n  \"APP CENTER\"                                                         :   \"CENTRO DE APLICACIONES\",\r\n  \"Admin\"                                                              :   \"Administrador\",\r\n  \"Aeonix App Center\"                                                  :   \"Centro de aplicaciones Aeonix\",\r\n  \"Agent\"                                                              :   \"Agente\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"CAMBIAR LA CONTRASEÑA\",\r\n  \"Change Password\"                                                    :   \"Cambiar la contraseña\",\r\n  \"Change Password and Login\"                                          :   \"Cambiar contraseña e iniciar sesión\",\r\n  \"Change it now >\"                                                    :   \"Cámbialo ahora >\",\r\n  \"Change the Initial Password\"                                        :   \"Cambiar la contraseña inicial\",\r\n  \"Chinese\"                                                            :   \"Chino\",\r\n  \"Complete Registration\"                                              :   \"Registracion completa\",\r\n  \"Continue\"                                                           :   \"Continuar\",\r\n  \"EMAIL\"                                                              :   \"Correo electrónico\",\r\n  \"Enable Profile Picture\"                                             :   \"Habilitar imagen de perfil\",\r\n  \"English\"                                                            :   \"Inglés\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ej. Saúl Ramírez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ej: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ej: abc@ejemplo.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"HAS OLVIDADO TU CONTRASEÑA\",\r\n  \"Forgot Password?\"                                                   :   \"¿Has olvidado tu contraseña?\",\r\n  \"Script-Designer\"                                                    :   \"Diseñador de guiones\",\r\n  \"Hebrew\"                                                             :   \"Hebreo\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"Contraseña inicial\",\r\n  \"LOGIN SCREEN\"                                                       :   \"PANTALLA DE INGRESO AL SISTEMA\",\r\n  \"Log out\"                                                            :   \"Cerrar sesión\",\r\n  \"Login\"                                                              :   \"Iniciar sesión\",\r\n  \"My Account\"                                                         :   \"Mi cuenta\",\r\n  \"NEW PASSWORD\"                                                       :   \"Nueva contraseña\",\r\n  \"OLD PASSWORD\"                                                       :   \"CONTRASEÑA ANTERIOR\",\r\n  \"PASSWORD\"                                                           :   \"Contraseña\",\r\n  \"Please enter the Verification Code\"                                 :   \"Porfavor ingrese el codigo de verificacion\",\r\n  \"you received in your mail:\"                                         :   \"Lo recibiste en tu correo:\",\r\n  \"Please enter your User Name:\"                                       :   \"Por favor, ingrese su usuario:\",\r\n  \"Send Verification Code again\"                                       :   \"Enviar código de verificación de nuevo\",\r\n  \"REGISTRATION\"                                                       :   \"REGISTRACION\",\r\n  \"Russian\"                                                            :   \"Ruso\",\r\n  \"Send me a Verification Code\"                                        :   \"Envíame un código de verificación\",\r\n  \"Send me a Temporary Password\"                                       :   \"Envíame un contraseña temporal\",\r\n  \"Spanish\"                                                            :   \"Español\",\r\n  \"The password must contain:\"                                         :   \"La contraseña debe contener:\",\r\n  \"USER DETAILS\"                                                       :   \"DETALLES DE USUARIO\",\r\n  \"USER NAME\"                                                          :   \"USUARIO\",\r\n  \"WebRT\"                                                              :   \"WebRT\",\r\n  \"You have successfully changed your password!\"                       :   \"¡Has cambiado satisfactoriamente tu contraseña!\",\r\n  \"You have successfully completed your registration!\"                 :   \"¡Has completado con éxito tu registro!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Su contraseña ha expirado y debe cambiarse\",\r\n  \"Your password will expire in \"                                      :   \"Su contraseña expíra en \",\r\n  \" Days.\"                                                             :   \" días.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Complete el registro llenando la siguiente información:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"NÚMERO DE TELÉFONO PARA AUTENTICACIÓN\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"re-ingrese nueva contraseña\",\r\n  \"resend the verification code\"                                       :   \"reenviar el código de verificación\",\r\n  \"Strength : \"                                                        :   \"fortaleza : \",\r\n  \"Must contain phone:\"                                                :   \"Debe contener número de teléfono:\",\r\n  \"A well-formed phone number\"                                         :   \"Un número de teléfono bien formado\",\r\n  \"Must contain email:\"                                                :   \"Debe contener correo electrónico:\",\r\n  \"A well-formed email address\"                                        :   \"Una dirección de correo electrónico bien formada\",\r\n  \"Successfully sent\"                                                  :   \"Enviado exitosamente\",\r\n  \"Sending failed!\"                                                    :   \"¡Envío fallido!\",\r\n  \"Back\"                                                               :   \"Atrás\",\r\n}"
                },
                {
                    "name": "LANG_HEB_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'heb'"
                },
                {
                    "name": "LANG_HEB_TRANS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"Example\"                                                            :   \"דוגמא\",\r\n  \"must be a well-formed email address\"                                :   \"must be a well-formed email address\",\r\n  \"Error: A registry process should be made!\"                          :   \"יש להשלים תהליך רישום\",\r\n  \"Error: Something went wrong!\"                                       :   \"!משהו השתבש\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"תהליך רישום לא תקין\",\r\n  \"Bad credentials\"                                                    :   \"שם משתמש או סיסמא שגויים\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"בחר סיסמא חדשה שלא הייתה בשימוש\",\r\n  \"Passwords do not match!\"                                            :   \"'הקפד להזין סיסמאות זהות בשדות 'סיסמה חדשה' ו'אימות סיסמה\",\r\n  \"Incorrect current password\"                                         :   \"סיסמה נוכחית שגויה\",\r\n  \"Something went wrong\"                                               :   \"!משהו השתבש\",\r\n  \"Error: Email is already in use!\"                                    :   'כתובת דוא\"ל נמצאת בשימוש אצל משתמש קיים',\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"קוד אימות שגוי\",\r\n  \"Error: Unable to save your changes\"                                 :   \"לא ניתן לשמור את השינויים\",\r\n  \"User account is locked\"                                             :   \"חשבונך ננעל\",\r\n  \"size must be between 2 and 20\"                                      :   \"יש להזין ערך המכיל בין 2 ל-20 תווים\",\r\n  \"Unknown User\"                                                       :   \"המשתמש אינו מוכר למערכת\",\r\n  \"Details Saved\"                                                      :   \"חשבונך ננעל\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"הסיסמה תואמת לאחת מ-4 סיסמאות קודמות\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"הסיסמה חייבת להכיל 1 או יותר תווים בהצלחה מיוחדים\",\r\n  \"* your phone number has been updated\"                               :   \"* מספר הטלפון שלך עודכן בהצלחה\",\r\n  \"* your email address has been updated\"                              :   '* כתובת הדוא\"ל שלך עודכן בהצלחה',\r\n  \"Error: Your changes could not be saved\"                             :   'שגיאה: השינויים שהזנת אינם נשמרו',\r\n\r\n  \"Reset Password\"                                                     :   \"איפוס סיסמה\",\r\n  \"Send me a temporary password once again\"                            :   \"שלח לי שוב סיסמה זמנית\",\r\n  \"A new temporary password has been sent to\"                          :   \"סיסמה זמנית חדשה נשלחה אל\",\r\n  \"your email address\"                                                 :   \"כתובת הדוא\\\"ל שלך\",\r\n  \"% Days to expire\"                                                   :   \"בעוד % ימים יפוג תוקף הסיסמה\",\r\n  \" A minimum of 8 characters\"                                         :   \"מינימום 8 ספרות\",\r\n  \" At least 1 Uppercase letters\"                                      :   \"לפחות אות אחת גדולה\",\r\n  \" At least 1 lowercase letters\"                                      :   \"לפחות אות אחת קטנה\",\r\n  \" At least 1 special character\"                                      :   \"לפחות תו מיוחד אחד\",\r\n  \" A number\"                                                          :   \"מספר\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \"לא יותר מ-2 תווים עוקבים זהים\",\r\n  \"APP CENTER\"                                                         :   \"APP CENTER\",\r\n  \"Admin\"                                                              :   \"אדמיניסטרציה\",\r\n  \"Aeonix App Center\"                                                  :   \"Aeonix App Center\",\r\n  \"Agent\"                                                              :   \"נציג\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password\"                                                    :   \"שנה סיסמה\",\r\n  \"Change Password and Login\"                                          :   \"שנה סיסמה והיכנס\",\r\n  \"Change it now >\"                                                    :   \" <שנה עכשיו\",\r\n  \"Change the Initial Password\"                                        :   \"שנה את הסיסמה הראשונית\",\r\n  \"Chinese\"                                                            :   \"סינית\",\r\n  \"Complete Registration\"                                              :   \"השלם תהליך רישום\",\r\n  \"Continue\"                                                           :   \"המשך\",\r\n  \"EMAIL\"                                                              :   'כתובת דוא\"ל',\r\n  \"Enable Profile Picture\"                                             :   \"אפשר תמונת פרופיל\",\r\n  \"English\"                                                            :   \"אנגלית\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Ex. Saul Ramirez\",\r\n  \"Ex: +972547762084\"                                                  :   \"Ex: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Ex: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"שכחתי סיסמה\",\r\n  \"Forgot Password?\"                                                   :   \"שכחתי סיסמה\",\r\n  \"Script-Designer\"                                                    :   \"עורך תסריטים\",\r\n  \"Hebrew\"                                                             :   \"עברית\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"סיסמה ראשונית\",\r\n  \"LOGIN SCREEN\"                                                       :   \"מסך כניסה\",\r\n  \"Log out\"                                                            :   \"יציאה\",\r\n  \"Login\"                                                              :   \"כניסה\",\r\n  \"My Account\"                                                         :   \"החשבון שלי\",\r\n  \"NEW PASSWORD\"                                                       :   \"סיסמה חדשה\",\r\n  \"OLD PASSWORD\"                                                       :   \"סיסמה ישנה\",\r\n  \"PASSWORD\"                                                           :   \"סיסמה\",\r\n  \"Please enter the Verification Code\"                                 :   \"אנא הקלד את קוד האימות\",\r\n  \"you received in your mail:\"                                         :   'שקיבלת בדוא\"ל',\r\n  \"Please enter your User Name:\"                                       :   \"אנא הקלד את שם המשתמש שלך\",\r\n  \"Send Verification Code again\"                                       :   \"שלח קוד אימות חדש\",\r\n  \"REGISTRATION\"                                                       :   \"רישום\",\r\n  \"Russian\"                                                            :   \"רוסית\",\r\n  \"Send me a Verification Code\"                                        :   \"שלח לי קוד אימות\",\r\n  \"Send me a Temporary Password\"                                       :   \"שלח לי סיסמה זמנית\",\r\n  \"Spanish\"                                                            :   \"ספרדית\",\r\n  \"The password must contain:\"                                         :   \"על הסיסמה לכלול:\",\r\n  \"USER DETAILS\"                                                       :   \"פרטי משתמש\",\r\n  \"USER NAME\"                                                          :   \"שם משתמש\",\r\n  \"WebRT\"                                                              :   \"דוחות זמן אמת\",\r\n  \"You have successfully changed your password!\"                       :   \"סיסמתך שונתה בהצלחה\",\r\n  \"You have successfully completed your registration!\"                 :   \"תהליך הרישום הסתיים בהצלחה\",\r\n  \"Your password has expired and must be changed\"                      :   \"פג תוקף סיסמתך. עליך לשנותה\",\r\n  \"Your password will expire in \"                                      :   \"תוקף סיסמתך יפוג בתוך \",\r\n  \" Days.\"                                                             :   \" ימים\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"הקלד את המידע הבא לצורך השלמת תהליך הרישום\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"מספר טלפון לאימות\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"האימות סיסמה\",\r\n  \"resend the verification code\"                                       :   \"שלח שוב קוד אימות\",\r\n  \"Strength : \"                                                        :   \"חוזק : \",\r\n  \"Must contain phone:\"                                                :   \"חייב לכלול מספר טלפון\",\r\n  \" A well-formed phone number\"                                        :   \"מספר טלפון תקני\",\r\n  \"Must contain email:\"                                                :   'חייב לכלול כתובת דוא\"ל',\r\n  \" A well-formed email address\"                                       :   'כתובת דוא\"ל תקנית',\r\n  \"Settings\"                                                           :   'הגדרות',\r\n  \"Successfully sent\"                                                  :   \"נשלח בהצלחה\",\r\n  \"Sending failed!\"                                                    :   \"!שליחה נכשלה\",\r\n  \"Back\"                                                               :   \"חזור\",\r\n\r\n}"
                },
                {
                    "name": "LANG_RUS_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'rus'"
                },
                {
                    "name": "LANG_RUS_TRANS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"Example\"                                                            :   \"Пример\",\r\n  \"must be a well-formed email address\"                                :   \"должен быть корректно оформленным адресом электронной почты\",\r\n  \"Error: A registry process should be made!\"                          :   \"Должен быть проведен процесс регистрации!\",\r\n  \"Error: Something went wrong!\"                                       :   \"Что-то пошло не так!\",\r\n  \"VALIDATION_FAILED\"                                                  :   \"Процесс реестра недействителен!\",\r\n  \"Bad credentials\"                                                    :   \"Неверное имя пользователя или пароль\",\r\n  \"Password matches one of %1$s previous passwords.\"                   :   \"Попробуйте еще раз с паролем, который вы раньше не использовали\",\r\n  \"Passwords do not match!\"                                            :   \"Пароли не совпадают\",\r\n  \"Incorrect current password\"                                         :   \"Неверный текущий пароль\",\r\n  \"Something went wrong\"                                               :   \"Что-то пошло не так!\",\r\n  \"Error: Email is already in use!\"                                    :   \"Email уже используется!\",\r\n  \"Error: Invalidate Pin-Code! User Not Approved\"                      :   \"Код подтверждения не совпадает\",\r\n  \"Error: Unable to save your changes\"                                 :   \"Не удалось сохранить изменения\",\r\n  \"User account is locked\"                                             :   \"Ваш аккаунт заблокирован\",\r\n  \"size must be between 2 and 20\"                                      :   \"Введите значение длиной от 2 до 20 символов.\",\r\n  \"Unknown User\"                                                       :   \"Неизвестный пользователь\",\r\n  \"Details Saved\"                                                      :   \"Ваш аккаунт заблокирован\",\r\n  \"Password matches one of 4 previous passwords.\"                      :   \"Пароль совпадает с одним из 4 предыдущих паролей.\",\r\n  \"Password must contain 1 or more special characters.\"                :   \"Пароль должен содержать 1 или более специальных символов.\",\r\n  \"* your phone number has been updated\"                               :   \"* Ваш номер телефона был обновлен\",\r\n  \"* your email address has been updated\"                              :   \"* Ваш адрес электронной почты был обновлен\",\r\n\r\n\r\n  \"Reset Password\"                                                     :   \"Сброс пароля\",\r\n  \"Send me a temporary password once again\"                            :   \"Отправьте мне временный пароль еще раз\",\r\n  \"A new temporary password has been sent to\"                          :   \"Новый временный пароль был отправлен на\",\r\n  \"your email address\"                                                 :   \"ваш адрес электронной почты\",\r\n  \"3 Days to expire\"                                                   :   \"3 días para caducar\",\r\n  \"A minimum of 8 characters\"                                          :   \"Минимум 8 символов\",\r\n  \"At least 1 Uppercase letters\"                                       :   \"Минимум 1 заглавная буква\",\r\n  \"At least 1 Lowercase letters\"                                       :   \"Минимум 1 строчная буква\",\r\n  \"A number\"                                                           :   \"Число\",\r\n  \" No more than 2 adjacent identical characters\"                      :   \" Не более 2 одинаковых последовательных символов\",\r\n  \"APP CENTER\"                                                         :   \"ЦЕНТР ПРИЛОЖЕНИЙ\",\r\n  \"Admin\"                                                              :   \"Админ\",\r\n  \"Aeonix App Center\"                                                  :   \"Центр приложений Aeonix\",\r\n  \"Agent\"                                                              :   \"Агент\",\r\n  \"CHANGE PASSWORD\"                                                    :   \"ИЗМЕНИТЬ ПАРОЛЬ\",\r\n  \"Change Password\"                                                    :   \"Изменить пароль\",\r\n  \"Change Password and Login\"                                          :   \"Изменить пароль и логин\",\r\n  \"Change it now >\"                                                    :   \"Измените его сейчас >\",\r\n  \"Change the Initial Password\"                                        :   \"Изменить начальный пароль\",\r\n  \"Chinese\"                                                            :   \"Китайский язык\",\r\n  \"Complete Registration\"                                              :   \"Завершите регистрацию\",\r\n  \"Continue\"                                                           :   \"Продолжать\",\r\n  \"EMAIL\"                                                              :   \"Электронная почта\",\r\n  \"Enable Profile Picture\"                                             :   \"Включить изображение профиля\",\r\n  \"English\"                                                            :   \"Английский\",\r\n  \"Ex. Saul Ramirez\"                                                   :   \"Бывший. Саул Рамирес\",\r\n  \"Ex: +972547762084\"                                                  :   \"Пример: +972547762084\",\r\n  \"Ex: abc@example.com\"                                                :   \"Пример: abc@example.com\",\r\n  \"FORGOT PASSWORD\"                                                    :   \"ЗАБЫЛИ ПАРОЛЬ\",\r\n  \"Forgot Password?\"                                                   :   \"Забыли пароль?\",\r\n  \"Script-Designer\"                                                    :   \"Сценарист\",\r\n  \"Hebrew\"                                                             :   \"Иврит\",\r\n  \"INITIAL PASSWORD\"                                                   :   \"пароль\",\r\n  \"LOGIN SCREEN\"                                                       :   \"ЭКРАН ВХОДА\",\r\n  \"Log out\"                                                            :   \"Выйти\",\r\n  \"Login\"                                                              :   \"Авторизоваться\",\r\n  \"My Account\"                                                         :   \"Мой счет\",\r\n  \"NEW PASSWORD\"                                                       :   \"Новый пароль\",\r\n  \"OLD PASSWORD\"                                                       :   \"СТАРЫЙ ПАРОЛЬ\",\r\n  \"PASSWORD\"                                                           :   \"Пароль\",\r\n  \"Please enter the Verification Code\"                                 :   \"Пожалуйста, введите проверочный код\",\r\n  \"you received in your mail:\"                                         :   \"вы получили на почту:\",\r\n  \"Please enter your User Name:\"                                       :   \"Пожалуйста, введите Ваш логин:\",\r\n  \"Send Verification Code again\"                                       :   \"Отправить код подтверждения еще раз\",\r\n  \"REGISTRATION\"                                                       :   \"ПОСТАНОВКА НА УЧЕТ\",\r\n  \"Russian\"                                                            :   \"Русский\",\r\n  \"Send me a Verification Code\"                                        :   \"Пришлите мне код подтверждения\",\r\n  \"Send me a Temporary Password\"                                       :   \"Пришлите мне временный пароль\",\r\n  \"Spanish\"                                                            :   \"Испанский язык\",\r\n  \"The password must contain:\"                                         :   \"Пароль должен содержать:\",\r\n  \"USER DETAILS\"                                                       :   \"ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"USER NAME\"                                                          :   \"ИМЯ ПОЛЬЗОВАТЕЛЯ\",\r\n  \"WebRT\"                                                              :   \"ВебРТ\",\r\n  \"You have successfully changed your password!\"                       :   \"Вы успешно изменили ваш пароль!\",\r\n  \"You have successfully completed your registration!\"                 :   \"Вы успешно завершили регистрацию!\",\r\n  \"Your password has expired and must be changed\"                      :   \"Срок действия вашего пароля истек, и его необходимо изменить\",\r\n  \"Your password will expire in \"                                      :   \"Срок действия вашего пароля истечет через \",\r\n  \" Days.\"                                                             :   \"  Дни.\",\r\n  \"Complete the registration by filling the missing info:\"             :   \"Завершите регистрацию, заполнив недостающую информацию:\",\r\n  \"PHONE NUMBER FOR AUTHENTICATION\"                                    :   \"НОМЕР ТЕЛЕФОНА ДЛЯ АУТЕНТИФИКАЦИИ\",\r\n  \"RE-ENTER NEW PASSWORD\"                                              :   \"Повторно введите новый пароль\",\r\n  \"resend the verification code\"                                       :   \"повторно отправить код подтверждения\",\r\n  \"Strength : \"                                                        :   \"Сила : \",\r\n  \"Must contain phone:\"                                                :   \"Должен содержать телефон:\",\r\n  \"A well-formed phone number\"                                         :   \"Правильно сформированный номер телефона\",\r\n  \"Must contain email:\"                                                :   \"Должен содержать электронную почту:\",\r\n  \"A well-formed email address\"                                        :   \"Правильно сформированный адрес электронной почты\",\r\n  \"Successfully sent\"                                                  :   \"Успешно отправлено\",\r\n  \"Sending failed!\"                                                    :   \"Отправка не удалась!\",\r\n  \"Back\"                                                               :   \"Назад\",\r\n\r\n}"
                },
                {
                    "name": "TRANSLATION_PROVIDERS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { provide: TRANSLATIONS, useValue: dictionary },\r\n]"
                },
                {
                    "name": "TRANSLATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<any>('translations', {\r\n  providedIn: 'root',\r\n  factory: () => sessionStorage\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/_services/token-storage.service.ts": [
                {
                    "name": "PINCODETOKEN_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/token-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'auth-pincodetoken'"
                },
                {
                    "name": "REFRESHTOKEN_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/token-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'auth-refreshtoken'"
                },
                {
                    "name": "TOKEN_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/token-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'token'"
                },
                {
                    "name": "USER_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_services/token-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'user'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/forms/login-form/login-form.component.ts": [
                {
                    "name": "Direction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"ltr\" | \"rtl\"",
                    "file": "src/stories/forms/login-form/login-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/stories/pipes/translate/translate.service.ts": [
                {
                    "name": "Direction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"ltr\" | \"rtl\"",
                    "file": "src/stories/pipes/translate/translate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/components/admin/admin.component.ts": [
                {
                    "name": "TableRow",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/components/admin/admin.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "kind": "component",
                "component": "UploadFilesComponent",
                "path": "uploadfiles"
            }
        ]
    },
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/_services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUTH_API",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/token-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TokenStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/token-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PINCODETOKEN_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/token-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REFRESHTOKEN_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/token-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOKEN_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/token-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "USER_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/user.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_services/user.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GATE_URL_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parsedUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "port",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "protocol",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/admin/admin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "src/app/components/admin/admin.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TableRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/upload-files/upload-files.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadFilesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/login2/login-main/login-main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginMainComponent",
                "coveragePercent": 19,
                "coverageCount": "5/26",
                "status": "low"
            },
            {
                "filePath": "src/app/login2/login-main/login-main.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/file-upload.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FileUploadService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/three.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThreeService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/services/three2.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Three2Service",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/actions/action-input/action-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/actions/action-input/action-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "USERS",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/actions/action-input/action-input.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ActionInput",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/actions/action-language/action-language.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionLanguageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/actions/action-language/available-languages.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AvailableLanguages",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/background1/background1Component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Background1Component",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/buttons/button-continue/button-continue.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonContinueComponent",
                "coveragePercent": 87,
                "coverageCount": "7/8",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/buttons/button-globe/button-globe.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGlobeComponent",
                "coveragePercent": 62,
                "coverageCount": "5/8",
                "status": "good"
            },
            {
                "filePath": "src/stories/buttons/button-language/button-language.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonLanguageComponent",
                "coveragePercent": 45,
                "coverageCount": "5/11",
                "status": "medium"
            },
            {
                "filePath": "src/stories/buttons/button-pass-hide/button-pass-hide.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonPassHideComponent",
                "coveragePercent": 44,
                "coverageCount": "4/9",
                "status": "medium"
            },
            {
                "filePath": "src/stories/buttons/button-tadiran/button-tadiran.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonTadiranComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/cards/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/directive/bubble-input/bubble-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/stories/directive/bubble-input/popover-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PopoverInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/stories/directive/bubble-language/bubble-language.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleLanguageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/stories/directive/bubble-language/popover-language.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PopoverLanguageDirective",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/directive/dynamic-comp.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DynamicCompDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/directive/popover.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PopoverOptions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/login-form/login-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/login-form/login-form.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Direction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/story-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StoryInputComponent",
                "coveragePercent": 8,
                "coverageCount": "2/25",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/story-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GroupForm",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/story-input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ValidationForm",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/inputs/input/story-input.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoryInput",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TranslatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TranslateService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslateService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dictionary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_CHI_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_CHI_TRANS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_ENG_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_ENG_TRANS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_ESP_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_ESP_TRANS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_HEB_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_HEB_TRANS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_RUS_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LANG_RUS_TRANS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRANSLATION_PROVIDERS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRANSLATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pipes/translate/translate.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Direction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/spinners/spinner1/spinner1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Spinner1Component",
                "coveragePercent": 62,
                "coverageCount": "5/8",
                "status": "good"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}